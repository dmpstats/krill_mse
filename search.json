[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Applying the Management Strategy Evaluation tool {openMSE} to the Antarctic Krill fishery case",
    "section": "",
    "text": "Overview\nThe Antarctic krill fishery in FAO Area 48 is currently managed based on precautionary catch limits set by the Commission for the Conservation of Antarctic Marine Living Resources (CCAMLR). The current total allowable catch is based on historical harvest levels. However, CCAMLR is striving to implement precautionary catch quotas using the krill population projection model originally developed by Constable and de la Mare (1996) recently rewritten as the Generalized Yield Model for R (Grym) by D. Maschette et al. (2020).\nThe three main principles of conservation are stated in Article II of the Convention on the Conservation of Antarctic Marine Living Resources (CCAMLR Convention) are as follows:\n\nPreventing the decline of harvested populations to levels that would impede their stable recruitment by maintaining population sizes above a certain threshold that ensures maximum annual growth.\nPreserving the ecological relationships among harvested, dependent, and other related populations of Antarctic marine living resources.\nAvoiding or minimizing changes in the marine ecosystem that cannot be easily reversed within a span of two to three decades.\n\nThese principles of conservation are CCAMLR’s ‘conceptual’ objectives, modelled in Grym which simulates the 3-step decision rule for krill population management, which incorporates objectives relating to population depletion and escapement (refer to Section 2.1).\nDecision rules are central in any management strategy regime, and the ones mentioned are directly formulated to meet CCAMLR management principles. There are several ways to reach conceptual and operational objectives using different management strategies; spatial and seasonal fishing limitations, gear restrictions, size limits, and total allowable catch are some examples of common practices to reach these goals.\nGiven the wide variety of tools available to meet management objectives, finding the most efficient ones given the individual situations of the fishery poses a challenge. Management Strategy Evaluation (MSE) is a methodology for assessing the performance and robustness of various management strategies to meet the fishery’s objectives. The main use of MSEs is to assess the effectiveness of current strategies using selected performance metrics, but they are also used to identify potential areas for improvement and explore alternative management options.\nThere are several ways of running an MSE of a current management strategy. The openMSE umbrella package and its Data-Limited Methods (DLM) Toolkit (Carruthers & Hordyk, 2018) provides an extensive and well-documented open-source framework for running MSEs on a broad range of fishery scenarios. OpenMSE provides users with a multitude of management strategies used in global fisheries as well as performance metrics to compare and evaluate any configured fishery operation.\nThis analysis aspires to show how the tool openMSE can be applied to the Krill fishery under a data-limited framework. The broader project objectives are to:\n\nPart 1: Approximate openMSE with the current management approach\nPart 2: Apply an example MSE to the Antarctic Krill fishery\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConstable, A, and W. de la Mare. 1996. “A Generalised Model for Evaluating Yield and the Long-Term Status of Fish Stocks Under Conditions of Uncertainty.” CCAMLR Science 3: 31–54.\n\n\nKawaguchi, So. 2016. “Reproduction and Larval Development in Antarctic Krill (Euphausia Superba).” In Biology and Ecology of Antarctic Krill, edited by Volker Siegel, 225–46. Advances in Polar Ecology. Cham: Springer International Publishing. https://doi.org/10.1007/978-3-319-29279-3_6.\n\n\nMaschette, D., S. Wotherspoon, C. Pavez, P. Ziegler, S. Thanassekos, K Reid, D Kawagushi, D Welsford, and A Constable. 2020. “Generalised R Yield Model (Grym).” Scientific Committee SC-CAMLR-39/BG/19. CCAMLR.\n\n\nMaschette, D, S Wotherspoon, S Kawaguchi, and Philippe Ziegler. 2021. “Grym Assessment for Subarea 48.1 Euphausia Superba Populations.” WG-FSA-2021/39. Hobart, Autralia: CCAMLR. https://meetings.ccamlr.org/en/wg-fsa-2021/39.\n\n\nSC-CAMLR. 2000. “Report of the Bo Workshop.” SC-CAMLR-XIX. Annex 4, Appendix G. CCAMLR.\n\n\nThanassekos, S, K Reid, S Kawaguchi, S Wotherspoon, D Maschette, P Ziegler, D Welsford, et al. 2021. “Grym Parameter Values for Subareas 48.1, 48.2 and 48.3.” WG-SAM-2021/12. CCAMLR."
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/part1.html#introduction",
    "href": "part1_openMSE_GRYM_approx/part1.html#introduction",
    "title": "Approximating openMSE to Grym",
    "section": "Introduction",
    "text": "Introduction\n[background on GRYM]\n[background on openMSE]\n\nMain goal\n\nDemonstrate that the {openMSE} framework, along with its primary package {DLMTool}, is a suitable and effective tool for conducting management strategy evaluation analysis for the Antarctic Krill stock."
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/part1.html#analysis-outline",
    "href": "part1_openMSE_GRYM_approx/part1.html#analysis-outline",
    "title": "Approximating openMSE to Grym",
    "section": "Analysis outline",
    "text": "Analysis outline\n\nWe use the powerful and highly customisable features of the {DLMTool} package to approximate the methodological approach currently used for the management of the krill fishery, which is based on the Generalised Yield Model (GYM) and implemented in {GRYM} package.\n(…)"
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/part1.html#simulation-scenarios",
    "href": "part1_openMSE_GRYM_approx/part1.html#simulation-scenarios",
    "title": "Approximating openMSE to Grym",
    "section": "Simulation scenarios",
    "text": "Simulation scenarios\n\nWe compare results from population simulations conducted under each framework for 8 alternative sets of model inputs. These entail combinations of four different sets of Proportional Recruitment estimates and 2 sets of maturity at age estimates.\n\nwhy 4 PR scenarios? R and M are the two key sources of uncertainty modelled in GRYM (confirm this). Maschette et al showed that the choice of PR scenarios had the greatest impact on the estimated gammas.\nwhy 2 sets of size at maturity scenarios? Differences in maturity at age/length affects the fraction of spawners in the population that are vulnerable to the fishery. Under equal fishing selectivity, higher proportion of matures at lower sizes imply faster decline in SSB in relation to SSB0, which will result in different estimates of gammas.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConstable, A, and W. de la Mare. 1996. “A Generalised Model for Evaluating Yield and the Long-Term Status of Fish Stocks Under Conditions of Uncertainty.” CCAMLR Science 3: 31–54.\n\n\nKawaguchi, So. 2016. “Reproduction and Larval Development in Antarctic Krill (Euphausia Superba).” In Biology and Ecology of Antarctic Krill, edited by Volker Siegel, 225–46. Advances in Polar Ecology. Cham: Springer International Publishing. https://doi.org/10.1007/978-3-319-29279-3_6.\n\n\nMaschette, D, S Wotherspoon, S Kawaguchi, and Philippe Ziegler. 2021. “Grym Assessment for Subarea 48.1 Euphausia Superba Populations.” WG-FSA-2021/39. Hobart, Autralia: CCAMLR. https://meetings.ccamlr.org/en/wg-fsa-2021/39.\n\n\nSC-CAMLR. 2000. “Report of the Bo Workshop.” SC-CAMLR-XIX. Annex 4, Appendix G. CCAMLR.\n\n\nThanassekos, S, K Reid, S Kawaguchi, S Wotherspoon, D Maschette, P Ziegler, D Welsford, et al. 2021. “Grym Parameter Values for Subareas 48.1, 48.2 and 48.3.” WG-SAM-2021/12. CCAMLR."
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/1_RecCV_and_M/generate_RCV_and_M.html#introduction",
    "href": "part1_openMSE_GRYM_approx/1_RecCV_and_M/generate_RCV_and_M.html#introduction",
    "title": "1  Recruitment Variability and Natural Mortality",
    "section": "1.1 Introduction",
    "text": "1.1 Introduction\nYearly recruitment (\\(R\\)), the number of young individuals that enter the population every year, and annual natural mortality (\\(M\\)), expressing the fraction of the population dying each year from any non-fishing causes (e.g. disease, competition, predation, etc.) are key parameters in population dynamics models.\nDue to challenges in obtaining reliable estimates of krill biomass (and hence numbers) at recruitment, standard krill recruitment modelling is instead based on the proportion of recruits in the population. This method, commonly known as the Proportional Recruitment (PR) model, was firstly proposed by de la Mare (1994) and later expanded by Pavez et al. (2021).\nUsing the mean and variance of the proportion of recruits estimated from independent surveys, the PR model derives the recruitment natural variability (expressed as a coefficient of variance, \\(CV_R\\)) and natural mortality of the population. Estimated values of \\(M\\) and \\(CV_R\\) can subsequently be used to generate series of \\(R\\) that follow the underlying distribution of proportion of recruits (or, specifically, the odds of recruits).\nAdditionally, as PR estimates are obtained from a finite number of surveys, the PR framework also provides alternative methods to convey the uncertainty in parameters \\(M\\) and \\(CV_R\\). These methods involve generating random draws of \\(M\\) and \\(CV_R\\) via resampling-based techniques such as parametric bootstrap or inverse probability transform (Pavez et al. 2021).\nIn this section we generate random draws of \\(CV_R\\) and \\(M\\) under different scenarios of proportional recruitment, which will be used in population model projections at later stages of the analysis. The PR models and scenarios used here are very similar to those applied in D. Maschette et al. (2021), with the exception that the proportion of recruits is assumed to be log-Normally distributed (as opposed to inverse-Beta).\nMany of the key functions used in this analysis are available in a CCAMLR’s code repository, which provides a base-case implementation of {GRYM} for the stock assessment of the Antarctic Krill."
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/1_RecCV_and_M/generate_RCV_and_M.html#set-up-the-proportional-recruitment-scenarios",
    "href": "part1_openMSE_GRYM_approx/1_RecCV_and_M/generate_RCV_and_M.html#set-up-the-proportional-recruitment-scenarios",
    "title": "1  Recruitment Variability and Natural Mortality",
    "section": "1.2 Set-up the Proportional Recruitment Scenarios",
    "text": "1.2 Set-up the Proportional Recruitment Scenarios\nThe PR model requires the following input parameters:\n\nThe within-year natural mortality structure\nThe quantile function that defines the distribution of recruits\nThe mean and variance estimates of the proportion of recruits obtained from time-series of independent surveys, and the number of surveys conducted\nThe reference age-class to determine the proportion of recruits in model simulations\nApproximate estimates of \\(M\\) and \\(CV_R\\)\nThe number of parameter sets to generate\n\nFor the purpose of this analysis, PR scenarios are defined by a set of different recruitment proportion estimates (item 3, above). Within-year natural mortality pattern and recruits distribution (items 1 and 2, respectively) remain fixed across all scenarios.\nWe begin by reading-in estimates of recruitment proportion under each scenario, before specifying the remaining fixed parameters.\n\n1.2.1 Loading estimates of recruitment proportion\n\npr_scenarios <- read_xlsx(\n  path = \"../part1_shared_files/inputs/grym_parameter_scenarios.xlsx\", \n  sheet = \"rec_proportion_scenarios\"\n) |>\n  select(-ref) |>\n  mutate(\n    pr_scen_id = factor(pr_scen_id, levels = unique(pr_scen_id)),\n    n_surveys = as.integer(n_surveys)\n  ) \n\nScenario-specific estimates of the fraction of recruits in the population (Table 1.1) are a subset of those provided in D. Maschette et al. (2021). Estimates were calculated from different choices of survey time-series, proportion calculation method, length cut-off thresholds, sample estimates weighting, etc (check D. Maschette et al. 2021 for further details). Proportion calculation methods are detailed in D. Maschette and Wotherspoon (2021, Appendix 1).\n\n\nCode\n# table with recruitment proportion under each scenario\npr_scenarios |>\n  select(-c(independent_unit, time_period)) |>\n  relocate(pr_scen_id, Maschete_description, rprop_calc_method, data_years, further_details, mn_Rprop:sd_Rprop) |>\n  flextable() |>\n  colformat_double() |>\n  set_table_properties(width = 1) |>\n  #set_table_properties(width = 1, layout = \"autofit\") |>\n  width(j = c(1, 3, 4), width = 1.2) |>\n  width(j = c(2, 5), width = 1.5) |>\n  set_header_labels(\n    pr_scen_id = \"PR Scenario ID\",\n    data_years = \"Years of data\",\n    Maschete_description = \"Label in Maschette et al (2011)\",\n    mn_Rprop = \"Mean of recruitment proportion\",\n    sd_Rprop = \"SD of recruitment proportion\",\n    n_surveys = \"Nr of Surveys\",\n    further_details = \"Further details\",\n    rprop_calc_method = \"Calculation method\"\n  )\n\n\n\n\nTable 1.1:  Survey estimates of recruitment proportion under each scenario PR Scenario IDLabel in Maschette et al (2011)Calculation methodYears of dataFurther detailsMean of recruitment proportionSD of recruitment proportionNr of SurveysPR-emm21(1) Initial valuesMixture analysis1977-1993Initial values discussed by WG-EMM-20210.55700.126017PR-amlr(2) US-AMLR summerLength threshold (cut-off @ 36mm)1992-2011Catch weighted PR by survey, strata scaled0.40790.311820PR-atlantida(4) Atlántida surveyLength threshold (cut-off @ 36mm)2020Catch weighted PR by strata, strata scaled0.42810.11123PR-amlr-haul(6) US-AMLR summer haul-by-haulLength threshold (cut-off @ 40mm)1991-2011Catch weighted PR by haul0.36300.370021\n\n\n\n\n\n1.2.2 Specify remaining parameters\nWe now specify the choices for the other model parameters, which remain unchanged across all the considered PR scenarios.\nNote: To ensure consistency in model inputs across multiple stages of the current analysis, GRYM setup parameters have been stored in an external file.\n\n# Load fixed parameters \npr_fixed_pars <- read_xlsx(\n  path = \"../part1_shared_files/inputs/grym_parameter_scenarios.xlsx\", \n  sheet = \"fixed_parameters\"\n) |>\n  filter(category %in% c(\"PR model\", \"Mortality\", \"Population model structure\", \"Simulation options\")) |>\n  select(parameter_tag, value) |>\n  pivot_wider(names_from = parameter_tag) |>\n  select(-c(Fmax, n.years))\n\npr_fixed_pars\n\n\n\n  \n\n\n\n\nWithin-year natural mortality pattern\nSimilarly to D. Maschette et al. (2021), assuming the impact of natural mortality is constant throughout the year.\n\n# within-year mortality option\npr_fixed_pars$M_within_year\n\n[1] \"constant\"\n\n\nCalculate the associated final row of unscaled integrated natural mortality, which is used in the PR model to compute survivals.\n\n# modelled age-classes  \nAges <- as.integer(pr_fixed_pars$first_age:pr_fixed_pars$last_age)\nn_steps <- as.integer(pr_fixed_pars$nsteps)\n  \n# Within-year natural mortality pattern\nif(pr_fixed_pars$M_within_year == \"constant\"){\n  # Assuming the impact of natural mortality is constant throughout the year\n  ms <- matrix(1, n_steps+1, length(Ages))  \n}else{\n  stop(\"Option for within-year pattern in M not identified ('constant' is the only currently available option)\")\n}\n\n# calculate the proportion of an individual time step in the year\nh <- 1/n_steps\n\n# calculate the unscaled integrate natural mortality of each age (columns)\n# through the year (rows)\nMs <- ctrapz(ms, h) \n\n# final row of the unscaled integrated natural mortality\nMsf <- final(Ms)\nMsf\n\n[1] 1 1 1 1 1 1 1\n\n\n\n\nPR quantile function\nRecruitment is assumed to follow a log-Normal distribution. This is a deviation from the approach taken in D. Maschette et al. (2021), where recruitment was assumed to be inverse-Beta distributed. The rationale behind this decision was to align simulations under {GRYM} with those in the {openMSE} framework, which assumes that recruitment process error (i.e. deviations from expected number of recruits) is log-normally distributed.\nFunctions qLogNormal() and recLogNormal() are provided here.\n\npr_fixed_pars$pr_dist\n\n[1] \"Log-Normal\"\n\n\n\n\nCode\nif(pr_fixed_pars$pr_dist == \"Log-Normal\"){\n  # quantile function of the target distribution for odds of recruitment proportion\n  qdist <- qLogNormal\n  # function to generate nr of recruits under the target distribution\n  recdist <- recLogNormal\n}else if(pr_fixed_pars$pr_dist == \"Inverse-Beta\"){\n  qdist <- qInverseBeta\n  recdist <- recInverseBeta\n} else if(pr_fixed_pars$pr_dist == \"Gamma\"){\n  qdist <- qGamma\n  recdist <- recGamma\n} else{\n  stop(\"Chosen value for distribution of odds of recruits is not valid.\")\n}\n\n\n\n\nReference age-class, number of iterations and starting values\nAs in Krill’s assessment base-case and D. Maschette et al. (2021), setting the 2nd age-class as the reference class (i.e. recruitment proportion is the fraction that the second age-class is of the population of age-class 2 and older).\n\n# reference age-class\nref_age <- as.integer(pr_fixed_pars$pr_ref_age)\n\n# number of iterations\nniter <- as.integer(pr_fixed_pars$n_iter)\n\n# Starting values, i.e. best guess estimates of M and recruitment CV\nM0 <- 0.6\nCV0 <- 1"
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/1_RecCV_and_M/generate_RCV_and_M.html#generate-parameter-draws",
    "href": "part1_openMSE_GRYM_approx/1_RecCV_and_M/generate_RCV_and_M.html#generate-parameter-draws",
    "title": "1  Recruitment Variability and Natural Mortality",
    "section": "1.3 Generate parameter draws",
    "text": "1.3 Generate parameter draws\nIn this section we use the PR model to generate random draws of variability in recruitment, expressed as coefficient of variance (\\(CV_R\\)), and annual natural mortality (\\(M\\)) for the scenarios under consideration.\nThis is achieved using the inverse probability transform approach described in Pavez et al. (2021) and implemented in function prfit(), available from krill’s base-case code repository.\nAt each iteration, the PR model is fitted by determining the properties of the underlying distribution of odds of recruits (\\(Q\\)), which depend on both \\(M\\) and \\(CV_R\\), for a given set of random quantiles of the distribution of \\(Q\\). Values of parameters \\(M\\) and \\(CV_R\\) are adjusted to provide the best fit between model predictions and observed data in terms of mean and variance of recruitment proportion in surveys. The fitting process is repeated niter times with newly generated random quantiles, each time returning a single set of estimates (i.e. draws) of \\(M\\), \\(CV_R\\) and associated mean (\\(\\mu_Q\\)) and variance (\\(\\sigma^2_Q\\)) of odds of recruit.\n\n1.3.1 Prepare model and data for parallel computations\nParallelization is conducted at the iteration level, with each parallel node fitting one PR model at a time. We first define the function gen_rec_draws() to apply the PR model fitting function prfit() for the specified number of iterations in parallel, for a given set of PR parameter values.\n\n# Wrapper function to run PR models in parallel via `{furrr}`, using\n# `{progressr}` for progress feedback\ngen_rec_draws <- function(niter, mn_Rprop, sd_Rprop, n_surveys, M0, CV0, ref_age, qdist, Msf){\n\n  p <- progressor(steps = niter)\n\n  future_map_dfr(\n    1:niter, \n    function(x){\n      out <- prFit(qdist = qdist, Msf = Msf, mnR = mn_Rprop, vrR = sd_Rprop^2, \n                   n = n_surveys, M0 = M0, CV0 = CV0, r = ref_age)\n      p()\n      out\n    }, \n    .options = furrr_options(seed = TRUE)\n  )\n}\n\nAfter setting up a reference data frame comprising the parameter values under each scenario, we are ready to run the PR models.\n\n# data.frame with PR inputs under each scenario\nscens_sim_pars <- pr_scenarios |>\n  select(pr_scen_id, mn_Rprop, sd_Rprop, n_surveys) |>\n   mutate(M0, CV0, ref_age, qdist = list(qdist), Msf = list(Msf))\n\n\n\n1.3.2 Fit PR models for each scenario\nThe model fitting process is performed sequentially over the considered scenarios, within which multiple fits are performed in parallel via the gen_rec_draws() function.\n\n# Note: Model fitting runtime is substantial for some scenarios, so this code chunk\n# must only be executed interactively, i.e. it shouldn't be evaluated during\n# document rendering\n\nif(file.exists(\"../part1_shared_files/outputs/cvR_M_draws_scen.rds\")){\n  cat(\"\\n\")\n  useropt <- readline(prompt = \"File with parameter draws already exists. Want a re-run? ([Y]es or No): \")  \n  run_fitting <- ifelse(str_starts(useropt, \"Y|y\"), TRUE, FALSE)\n}else{\n  run_fitting <- FALSE\n}\n\nif(run_fitting){\n  # set number of cores to use\n  plan(multisession, workers = availableCores()-2)\n  handlers(\"progress\")\n  \n  tic()\n  cvR_M_draws_scen <- scens_sim_pars |>\n    rowwise() |>\n    pmap(function(pr_scen_id, mn_Rprop, sd_Rprop, n_surveys, M0, CV0, ref_age, qdist, Msf){\n      \n      cli::cli_alert(glue::glue(\"Running {pr_scen_id}\"))\n      \n      \n      with_progress(\n        out <- gen_rec_draws(niter = niter, mn_Rprop = mn_Rprop, sd_Rprop = sd_Rprop, \n                             n_surveys = n_surveys, M0 = M0, CV0 = CV0, ref_age = ref_age, \n                             qdist = qdist, Msf = Msf)\n      )\n      cli::cli_alert_success(glue::glue(\"Finished {pr_scen_id}\"))\n      out\n    })\n  toc()\n  \n  plan(sequential)\n  \n  names(cvR_M_draws_scen) <- scens_sim_pars$pr_scen_id\n  \n  # save draws externally\n  write_rds(x = cvR_M_draws_scen, \"../part1_shared_files/outputs/cvR_M_draws_scen.rds\")  \n}"
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/1_RecCV_and_M/generate_RCV_and_M.html#outputs-checking",
    "href": "part1_openMSE_GRYM_approx/1_RecCV_and_M/generate_RCV_and_M.html#outputs-checking",
    "title": "1  Recruitment Variability and Natural Mortality",
    "section": "1.4 Outputs checking",
    "text": "1.4 Outputs checking\n\n\n\nHaving a look at the outputs for a couple of scenarios, where listed data.frames comprise random draws of \\(M\\), \\(CV_R\\), \\(\\mu_Q\\) and \\(\\sigma^2_Q\\) for the corresponding PR scenario.\n\ncvR_M_draws_scen$`PR-emm21` |> round(3) |> glimpse()\n\nRows: 10,001\nColumns: 4\n$ M    <dbl> 0.959, 0.909, 0.968, 0.873, 0.757, 0.833, 0.832, 0.846, 0.827, 0.…\n$ CV_R <dbl> 0.506, 0.670, 0.514, 0.430, 0.754, 0.439, 0.374, 0.411, 0.452, 0.…\n$ mnQ  <dbl> 1.615, 1.488, 1.638, 1.402, 1.143, 1.310, 1.306, 1.338, 1.294, 1.…\n$ vrQ  <dbl> 0.667, 0.993, 0.707, 0.364, 0.743, 0.330, 0.239, 0.302, 0.343, 0.…\n\ncvR_M_draws_scen$`PR-atlantida` |> round(3) |> glimpse()\n\nRows: 10,001\nColumns: 4\n$ M    <dbl> 0.497, 0.519, 0.660, 0.778, 0.287, 0.609, 0.371, 0.703, 0.652, 0.…\n$ CV_R <dbl> 0.503, 0.242, 0.469, 0.498, 0.596, 0.483, 0.489, 0.396, 0.446, 0.…\n$ mnQ  <dbl> 0.679, 0.712, 0.953, 1.189, 0.405, 0.861, 0.503, 1.036, 0.939, 0.…\n$ vrQ  <dbl> 0.116, 0.030, 0.199, 0.350, 0.058, 0.173, 0.060, 0.168, 0.175, 0.…\n\n\n\nNext we take a look at the generated draws.\n\n\nCode\n# cvR_M_draws_scen_df |>\n#   ggplot(aes(x = M, y = CV_R)) +\n#   geom_point(size = 0.8, alpha = 0.25) +\n#   facet_wrap(~pr_scen_id)\n\ncvR_M_draws_scen_df |>\n  ggplot(aes(x = M, y = CV_R)) +\n  geom_hdr() +  \n  facet_wrap(~pr_scen_id)\n\n\n\n\nFigure 1.1: Generated draws of \\(CV_R\\) and \\(M\\) under each PR scenario\n\n\n\n\n\nAnd complement the with the corresponding summary statistics.\n\n\nCode\ncvR_M_draws_scen_df |>\n  group_by(pr_scen_id) |>\n  summarise(\n    `Mean of M` = mean(M), \n    `SD of M` = sd(M),\n    #`Median of M` = median(M),\n    # `2.5% of M` = quantile(M, probs = 0.025),\n    # `97.5% of M` = quantile(M, probs = 0.975), \n    `mean of CV_R` = mean(CV_R), \n    `sd of CV_R` = sd(CV_R))\n\n\n\n\n  \n\n\n\n\n\nIn general, scenarios based on surveys observing higher mean recruitment proportions generate draws (i.e. estimates) of \\(M\\) that are, on average, higher. This is expected since higher natural mortality rates lead to a rapid decline of numbers in older age-classes, making the proportion of recruits in the population more prominent. The opposite occurs when natural mortality is low.\nRegarding recruitment variability, the magnitude of drawn \\(CV_R\\) estimates is, unsurprisingly, correlated with to the variance in observed recruitment proportion under each scenario (see Table 1.1 for reference). Evidently, highly variable yearly recruitment will cause the fraction of recruits in the population to fluctuate strongly from year to year.\nThe level of uncertainty about parameters \\(M\\) and \\(CV_R\\) for the considered scenarios is reflected by the spread of the generated draws, which is conveyed by the plots in Figure 1.1 and, relatedly, the standard deviation of draws presented in the table above. Results suggest that uncertainty is affected by the variability in recruitment and the number of surveys from which proportion of recruits are estimated (Table 1.1 for reference).\nSome further observations:\n\ndraws generated under the “PR-emm21” scenario are notably more condensed compared to the remaining scenarios. This indicates that “PR-emm21” has the lowest uncertainty about both \\(M\\) and \\(CV_R\\) parameters.\nDespite the relatively low values of \\(CV_R\\) drawn under “PR-atlantida”, uncertainty about \\(M\\) and \\(CV_R\\) for this scenario is larger (i.e. SD is higher) than that obtained under “PR-emm21”. This is likely related to the fact that recruitment proportions were calculated from only 3 surveys (as opposed to 17 surveys under “PR-emm21”).\nDifferences in the distribution of draws of \\(M\\) and \\(CV_R\\) between scenarios “PR-amlr” and “PR-amlr-haul” illustrate the impact of length cutoff thresholds and sample weighting choices applied during the estimation of the recruitment proportion in surveys.\nDraws of \\(CV_R\\) for scenarios “PR-amlr” and “PR-amlr-haul” show that yearly recruitments \\(R\\) series simulated under these scenarios will have sizable levels of variability (i.e. over 400% and 700%, respectively).\n\n\n1.4.1 Reverse-check\nHere we simulate survey estimates of mean and variance of recruitment proportion from the PR model, for each of the considered scenarios. Recruitment series are generated from each draw of \\(M\\) and \\(CV_R\\), which are then used to simulate the proportion of recruits that would be seen in surveys. Thus, each draw generates a series of “observed” proportion of recruits from which estimates are calculated.\nThe core simulating function prSim() is provided in krill’s base case code repository. Figure 1.2 display the simulation results in terms of highest density region (HDR) plots.\n\nscens_sim_pars |>\n  mutate(pr_scen_id = factor(pr_scen_id, levels = unique(pr_scen_id))) |>\n  group_split(pr_scen_id) |>\n  map2(.y = cvR_M_draws_scen, function(scn_pars, scn_draws){\n    \n    # Simulate observation process for each draw of CV_R and M, i.e. generate\n    # `n` random age structures for each draw of CV_R and M and estimate mean\n    # and variance of the proportion of recruits that would be observed in surveys\n    pr_mn_vr <- map2_df(\n      scn_draws$M, \n      scn_draws$CV_R, \n      ~prSim(\n        qdist = scn_pars$qdist, Msf = scn_pars$Msf[[1]], n = scn_pars$n_surveys, \n        M = .x, CV = .y, r = scn_pars$ref_age\n      )\n    )|> rename(sim_mnQ = mnR, sim_vrQ = vrR)\n    \n    title <- scn_pars$pr_scen_id\n    \n    # Compare simulated values of mean and variance of proportional recruitment\n    # with those actually obtained from surveys\n    ggplot(pr_mn_vr, aes(x = sim_mnQ, y = sim_vrQ)) +\n      geom_hdr() +\n      geom_point(aes(x = mn_Rprop, y = sd_Rprop^2), colour = \"red\", data = scn_pars) +\n      labs(title = title) +\n      theme(axis.title = element_blank(), plot.title = element_text(size = 10))\n\n  }) |>\n  wrap_plots(guides = 'collect') |>\n  patchworkGrob() |>\n  gridExtra::grid.arrange(\n    left = \"Variance of proportion of recruits\", \n    bottom = \"Mean of proportion of recruits\"\n  )\n\n\n\nFigure 1.2: HDR of simulated means and variances of proportion of recruits based on generated draws of \\(M\\) and \\(CV_R\\) under each scenario. Red dots are original observed estimates used for parameter generation.\n\n\n\n\n\nResults suggest that simulated surveys based on generated parameter draws produce estimates of recruitment proportion that are consistent with those obtained from observed surveys.\n\n\n1.4.2 Exemplify generation of recruitment series\nFor completeness, we generate a recruitment series from a single draw of PR estimates. Simulated numbers of recruits are log-normally distributed with mean of 1 and coefficient of variance given by the used draw of \\(CV_R\\).\n\nr_series <- cvR_M_draws_scen |>\n  map(slice, 5) |>\n  bind_rows(.id = \"pr_scen_id\") |>\n  mutate(pr_scen_id = factor(pr_scen_id, levels = unique(pr_scen_id))) |>\n  rowwise() |>\n  mutate(\n    rec_series = list(recdist(n = 50000, mn = mnQ, vr = vrQ))\n  ) |>\n  unnest(rec_series)\n\nr_series |>\n  ggplot() +\n  geom_histogram(aes(x = rec_series), col = \"black\", fill = \"gray88\") +\n  labs(x = \"Number of recruits\") +\n  facet_wrap(~pr_scen_id, scales = \"free\")\n\n\n\nFigure 1.3: Histogram of recruitment series generated from one draw of parameters, for each scenario\n\n\n\n\n\nComparing drawn value of \\(CV_R\\) with summary statistics of the generated recruitment series.\n\n\nCode\nr_series |>\n  group_by(pr_scen_id, CV_R) |>\n  summarise(\n    mn_R_series = mean(rec_series), \n    sd_R_series = sd(rec_series),\n    cv_R_series = sd_R_series/mn_R_series,\n    .groups = \"drop\"\n  )"
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/1_RecCV_and_M/generate_RCV_and_M.html#wraping-up",
    "href": "part1_openMSE_GRYM_approx/1_RecCV_and_M/generate_RCV_and_M.html#wraping-up",
    "title": "1  Recruitment Variability and Natural Mortality",
    "section": "1.5 Wraping up",
    "text": "1.5 Wraping up\nWe now have random draws of recruitment parameters and natural mortality, which convey the uncertainty about those parameters. Generated draws will be used as inputs for the GRYM (Chapter 2) and openMSE (Chapter 3) tools to run population projections and estimate harvest rate levels that satisfy the sustainability rules currently in place for the management of the krill stock.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConstable, A, and W. de la Mare. 1996. “A Generalised Model for Evaluating Yield and the Long-Term Status of Fish Stocks Under Conditions of Uncertainty.” CCAMLR Science 3: 31–54.\n\n\nKawaguchi, So. 2016. “Reproduction and Larval Development in Antarctic Krill (Euphausia Superba).” In Biology and Ecology of Antarctic Krill, edited by Volker Siegel, 225–46. Advances in Polar Ecology. Cham: Springer International Publishing. https://doi.org/10.1007/978-3-319-29279-3_6.\n\n\nMare, W. de la. 1994. “Modelling Krill Recruitment.” CCAMLR Science 1.\n\n\nMaschette, D., and S. Wotherspoon. 2021. “Use of Parameters Within Euphausia Superba Grym Simulations.” WG-FSA-2021/40. CCAMLR.\n\n\nMaschette, D, S Wotherspoon, S Kawaguchi, and Philippe Ziegler. 2021. “Grym Assessment for Subarea 48.1 Euphausia Superba Populations.” WG-FSA-2021/39. Hobart, Autralia: CCAMLR. https://meetings.ccamlr.org/en/wg-fsa-2021/39.\n\n\nPavez, Cassandra, Simon Wotherspoon, Dale Maschette, Keith Reid, and Kerrie Swadling. 2021. “Recruitment Modelling for Euphausia Superba Stock Assessments Considering the Recurrence of Years with Low Recruitment.” WG-SAM-2021/09. Hobart, Autralia: CCAMLR.\n\n\nSC-CAMLR. 2000. “Report of the Bo Workshop.” SC-CAMLR-XIX. Annex 4, Appendix G. CCAMLR.\n\n\nThanassekos, S, K Reid, S Kawaguchi, S Wotherspoon, D Maschette, P Ziegler, D Welsford, et al. 2021. “Grym Parameter Values for Subareas 48.1, 48.2 and 48.3.” WG-SAM-2021/12. CCAMLR."
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/2_GRYM_sims/grym_sims.html#sec-grym-intro",
    "href": "part1_openMSE_GRYM_approx/2_GRYM_sims/grym_sims.html#sec-grym-intro",
    "title": "2  GYM/Grym Analysis",
    "section": "2.1 Introduction",
    "text": "2.1 Introduction\nThe current management of the Antarctic Krill fishery is based on establishing precautionary catch limits that comply with sustainability principles set out by the Commission for the Conservation of Antarctic Marine Living Resources (CCAMLR, Constable et al. 2000). In practice, these catch limits are set on the basis of a constant long-term precautionary annual yield (\\(Y_p\\)), which is determined as the proportion (\\(\\gamma_p\\)) of the pre-exploitation biomass of the population (\\(B_0\\)) that can be harvested annually while ensuring that CCAMRL objectives are achieved:\n\\[Y_p = \\gamma_p B_0\\]\nThe estimation of \\(B_0\\) and \\(\\gamma_p\\), which can be though of as the precautionary harvest rate, are major tasks in the assessment of Krill fisheries.\nEstimation of \\(\\gamma_p\\) relies on a frequentist probability approach using Monte-Carlo simulations. In this approach, a stochastic population dynamics model is used to project the stock forwards in time under a range of potential \\(\\gamma\\) values, each representing a different fraction of \\(B_0\\) taken as a constant catch in each year of the projection.\nFor each projection, the population’s pre-exploitation state and key stock parameters (e.g. yearly recruitment, mortality, growth) are drawn at random from suitable statistical distributions that account for the natural variability in the population as well as the uncertainty about those key parameters. Projections are repeated thousands of times for new randomly drawn parameter values to evaluate the probability distribution of population status at each year of the projection period under different levels of yield (and thus, fishing mortality). The projection period covers a minimum of 20 years to ensure that long-term trends in the population can be adequately assessed.\nFinally, \\(\\gamma_p\\) is determined using the following three-step decision rule (Constable et al. 2000):\n\nDepletion rule: choose a harvest rate, \\(\\gamma_1\\), so that the probability of the spawning stock biomass (\\(SSB\\)) dropping below 20% of its pre-exploitation level (\\(SSB_0\\)) at any given year of a 20-year harvesting period is no more than 10%1.\nEscapement rule: choose a harvest rate, \\(\\gamma_2\\), so that the median escapement at the end of a 20 year period is 75% of the pre-exploitation median level - i.e. the \\(\\gamma\\) at which the median of the distribution of \\(SSB\\) after 20 years of harvesting is no less than 75% of the median2 of \\(SSB_0\\).\nSelect \\(\\gamma_p\\) the lower of \\(\\gamma_1\\) and \\(\\gamma_2\\) values (which returns an harvest rate that is consistent with both previous rules).\n\nThe relative magnitudes of \\(\\gamma_1\\) or \\(\\gamma_2\\) depend largely on the level of recruitment variability and the degree of uncertainty associated with the estimate of \\(B_0\\) used in the model (Constable et al. 2000).\n\n2.1.1 The GYM/Grym framework\nThe current precautionary catch limit for Antarctic Krill was determined in 2010 (CCAMLR 2022) based on a \\(\\gamma_p\\) estimated from the Generalized Yield Model (GYM) developed by Constable and de la Mare (1996). GYM is an age-structured, non-spatially explicit, single-stock simulation model that accounts for natural variability and uncertainty on population estimates. GYM is not a statistically fitted stock assessment model - i.e. it does not estimate stock parameters from input data. Therefore, all input parameters must be estimated externally and provided directly to the model.\nGYM, originally written in Fortran, was later updated and converted into the R package {Grym} (D. Maschette et al. 2020), which was used to develop CCAMLR’s base case implementation of Krill assessment for management advice purposes. D. Maschette and Wotherspoon (2021) describe the main input parameters used by GYM/Grym for modelling the Krill fishery.\nMost relevant features of the GYM/Grym base case configuration for the Krill stock include:\n\nStock is structured into 7 age-classes, and assumes that individuals recruit to the modelled stock at age 1. Therefore, the model covers the age ranges 1-2 up to 7-8 years old.\nThe final age-class is not an age-plus group, i.e. it is assumed that no individual lives more than 8 years.\nStock dynamics are modelled at daily time steps, i.e. the model evaluates the status of the stock at 365 time-points whithin each year of the projection period.\nRecruitment is not dictated by a conventional stock-recruitment relationship, such as the Beverton-Holt or the Ricker functions. Instead, yearly numbers of recruits \\(R_y\\) are simulated as random deviates from a mean recruitment that is constant over time, regardless of the spawning stock size. However, the model includes a depletion factor that reduces the simulated recruitment in a given year when the stock falls below the depletion critical point (i.e. \\(SSB < 0.2 \\, SSB_0\\)) in the preceding year. The magnitude of this reduction is proportional to the percentage drop from the critical depletion point.\nThe main sources of stochasticity between simulations are:\n\nYearly Recruitment: \\(R_y\\) series are randomly generated from a statistical distribution (Inverse-Beta in the base case) with a fixed mean of 1 and variance estimated from the Proportional Recruitment (PR) model. Recruitment variance, accounting for natural variability in the recruitment process, remains fixed over all years of the projection period, in a given simulation.\nRecruitment variance: to account for uncertainty in the estimate of recruitment variance, each simulation uses a new random draw of PR estimates, which are generated in the PR analysis (Chapter 1).\nNatural Mortality: for each simulation, a single random value of annual scaling of natural mortality (\\(M\\)) is used to simulate the degree of stock decay due to non-fishing causes over the entire projection period (i.e. \\(M\\) assumed age-independent and constant over time). Natural mortality is also estimated in the PR model, which provides random draws of \\(M\\) accounting for the uncertainty in the estimation process (Chapter 1).\nMaturity and gear selectivity ogives: the midpoints of the ogive ramps describing, respectively, the length-class at which 50% of its individuals are mature or available to the fishery, are randomly draw in each simulation from a uniform distribution bounded by a selected minimum and maximum lengths. This accounts for the lack of knowledge about the exact length at which 50% of Krill are either mature or selectable by the fishery. Sampled midpoint values are the same in all years of a given projection.\nPre-exploitation Biomass Survey Estimate: within each simulation, the annual catch limit under each of the considered \\(\\gamma\\) values is simulated as \\(Y = \\gamma \\widehat{B_0}\\), where \\(\\widehat{B_0}\\) is a survey estimate of pre-exploitation biomass. To simulate this estimation process, \\(\\widehat{B_0}\\) values are generated by applying log-normal errors to the simulated \\(B_0\\) values, with variance \\(B0logSD^2\\) reflecting the sampling error in surveys. The input value of parameter \\(B0logSD\\) is calculated externally from survey data (e.g. Kinzey 2021).\n\nIn each simulation, sampled values of stochastic parameters are held fixed across projections covering the range of considered \\(\\gamma\\) values. This approach ensures that observed changes in population forecasts within a given simulation are solely attributable to different fishing pressures and not confounded by randomness underlying the simulation process.\nGrym provides the ability the decompose natural mortality and fishing mortality into intra-year components to account for within-year patterns in mortality incidence. However, under the base-case implementation, natural and fishing mortality are assumed to impact all individuals equally through the year.\nWeight-at-length and length-at-age relationships are assumed to be fully deterministic, meaning that growth is considered to be unaffected by natural variability, while power law parameters and von Bertalanffy growth parameters are treated as known without error.\n\n\n\n2.1.2 Analysis goal\nHere we run the GYM/Grym base-case implementation for 8 alternative scenarios of input parameter values, resulting from combining four different PR estimation scenarios with two options for the maturity-at-length ogive curve. This is similar to the ensemble analysis previously conducted by D. Maschette et al. (2021), with the exception that here we assume recruitment to follow a Log-Normal process.\nRandom draws of \\(M\\), recruitment variability \\(CV_R\\) and related PR estimates for each of the four PR scenarios were pre-generated in Chapter 1."
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/2_GRYM_sims/grym_sims.html#estimating-gamma_p-under-alternative-grym-parameter-values",
    "href": "part1_openMSE_GRYM_approx/2_GRYM_sims/grym_sims.html#estimating-gamma_p-under-alternative-grym-parameter-values",
    "title": "2  GYM/Grym Analysis",
    "section": "2.2 Estimating \\(\\gamma_p\\) under alternative Grym parameter values",
    "text": "2.2 Estimating \\(\\gamma_p\\) under alternative Grym parameter values\n\n2.2.1 Specify input scenarios\nWe begin with setting up the combination of Grym parameter values for each scenario. We consider 3 groupings of input parameters:\n\nRecruitment parameters estimated from four different PR scenarios (Chapter 1)\nMaturity-at-length parameters from two 2 alternative maturity ogive curves\nAll remaining input parameters, which take unique values across scenarios.\n\n\n\nCode\n# Proportional Recruitment scenarios\nprop_rec_scenarios <- read_xlsx(\n  path = \"../part1_shared_files/inputs/grym_parameter_scenarios.xlsx\", \n  sheet = \"rec_proportion_scenarios\"\n) |>\n  select(-ref)\n\n# Maturity at length scenarios\nmaturity_scenarios <- read_xlsx(\n  path = \"../part1_shared_files/inputs/grym_parameter_scenarios.xlsx\", \n  sheet = \"maturity_ogive_scenarios\"\n) |>\n  select(-ref)\n\n# fixed parameters\nfixed_pars <- read_xlsx(\n  path = \"../part1_shared_files/inputs/grym_parameter_scenarios.xlsx\", \n  sheet = \"fixed_parameters\")\n\n# load draws of M and CV_R for each PR scenario\npr_cvR_M_draws_scen <- read_rds(\"../part1_shared_files/outputs/cvR_M_draws_scen.rds\")\n\n\nThe four PR scenarios are displayed in Table 1.1. Parameter values for each of the maturity ogive curves are displayed in Table 2.1, and fixed Grym input parameters are presented in Table 2.2.\n\n\nCode\nmaturity_scenarios |>\n  flextable() |>\n  set_header_labels(\n    mat_scen_id = \"Maturity ID\",\n    source = \"Source\",\n    mat50Min = \"Min length 50% mature (mm)\",\n    mat50Max = \"Max length 50% mature (mm)\",\n    matrange = \"Ogive ramp width (mm)\"\n  )\n\n\n\n\nTable 2.1:  Alternative maturity-at-length ogive parameters, from Maschette et al (2021) Maturity IDSourceMin length 50% mature (mm)Max length 50% mature (mm)Ogive ramp width (mm)mat-2010WG-EMM-201032.037.06.0mat-2021US-AMLR summer surveys37.644.38.8\n\n\n\n\n\nCode\n# cit_keys <- fixed_pars |>\n#   distinct(citation_key) |>\n#   drop_na() |>\n#   mutate(ref_symb = tolower(as.roman(1:n())))\n\nfixed_pars |>\n  select(-c(parameter_tag, reference)) |>\n  flextable() |>\n  set_header_labels(\n    category = \"Category\",\n    parameter_label = \"Parameter\",\n    value = \"Value\",\n    citation_key = \"Reference\"\n  ) |>\n  merge_v(j = 1) |>\n  flextable::fix_border_issues() |>\n  colformat_md()\n\n\n\n\nTable 2.2:  Grym input parameters with fixed values accross simulation scenarios CategoryParameterValueReferencePR modelReference age2Maschette et al. (2021)Recruitment distributionLog-NormalMortalityWithin-year natural mortality patternconstantPopulation model structureFirst Age Class1Thanassekos et al. (2021)Last Age Class7Constable and de la Mare (1996)Age plus groupNoTime steps (days)365Length-at-age (von Bertalanffy)t00Constable and de la Mare (1996)L∞ (mm)60Constable and de la Mare (1996)K0.48Thanassekos et al. (2021)Start growth period (day/month)21/OctThanassekos et al. (2021)End growth period (day/month)12/FebThanassekos et al. (2021)Weight-at-lengthWeight-length parameter - A (g)2.24E-06SC-CAMLR (2000)Weight-length parameter - B3.314SC-CAMLR (2000)Spawning seasonStart of spawning season (day/month)15/DecKawaguchi (2016)End of spawning season (day/month)15/FebKawaguchi (2016)Selectivity ogiveMin length, 50% Selected (mm)30Thanassekos et al. (2021)Max length, 50% Selected (mm)35Thanassekos et al. (2021)Ramp width (mm)11Thanassekos et al. (2021)Fishing effortStart of Fishing Season (day/month)01/DecThanassekos et al. (2021)End of Fishing Season (day/month)30/NovThanassekos et al. (2021)B0 estimationUncertainty in B0 estimate0.361Kinzey (2021)Start of monitoring interval (day/month)01/JanThanassekos et al. (2021)End of monitoring interval (day/month)15/JanThanassekos et al. (2021)MiscellaneousReference Date (day/month)01/OctThanassekos et al. (2021)Simulation optionsReasonable upper bound for Annual F1.5Constable and de la Mare (1996)Projection length (number of years)20Number of iterations10001\n\n\n\nCode\n  # flextable::footnote(\n  #   j = ~ value, \n  #   i = ~ citation_key %in% cit_keys$citation_key, \n  #   ref_symbols = left_join(fixed_pars, cit_keys, by = \"citation_key\") |> drop_na(citation_key) |> pull(ref_symb),\n  #   value = as_paragraph_md(\n  #     fixed_pars |> drop_na(citation_key) |> distinct(citation_key) |> pull(citation_key)\n  #   ), inline = TRUE\n  # ) \n\n\nNext we create a look-up table specifying the simulation scenarios, determined by combining the PR scenarios and the two maturity ogive alternatives.\n\n\nCode\n# Key of scenarios under consideration for Grym simulations\ngrym_scenarios_key <- expand_grid(\n  pr_scen_id = prop_rec_scenarios$pr_scen_id,\n  mat_scen_id = maturity_scenarios$mat_scen_id\n) |>\n  mutate(scenario_id = glue::glue(\"scn-{1:n()}\"), .before = 1)\n\n# save for later\nwrite_rds(grym_scenarios_key, \"../part1_shared_files/inputs/scenarios_key.rds\")\n\ngrym_scenarios_key |>\n  flextable() |>\n  set_table_properties(width = 0.6, layout = \"autofit\") |>\n  set_header_labels(\n    scenario_id = \"Scenario ID\",\n    pr_scen_id = \"PR Scenario ID\",\n    mat_scen_id = \"Maturity ID\"\n  )\n\n\n\n\nTable 2.3:  Specification of parameter input scenarios Scenario IDPR Scenario IDMaturity IDscn-1PR-emm21mat-2010scn-2PR-emm21mat-2021scn-3PR-amlrmat-2010scn-4PR-amlrmat-2021scn-5PR-atlantidamat-2010scn-6PR-atlantidamat-2021scn-7PR-amlr-haulmat-2010scn-8PR-amlr-haulmat-2021\n\n\n\n\n\n2.2.2 Set \\(\\gamma\\) values under consideration\nWe also need to define the range of harvest rates \\(\\gamma\\) over which population projections will be run. We chose to use equally spaced rates, ranging from no harvest (\\(\\gamma = 0\\)) to a constant annual harvest rate of 25% of the pre-exploitation biomass (\\(\\gamma = 0.25\\)), with 0.25% increments between them.\n\n# sequence of gamma values\n# i.e. testing fixed annual harvest rates from 0% to 25% of B0, for increments of 0.25%\ngamma_seq <- seq(0, 0.25, by = 0.0025)\ngamma_seq\n\n  [1] 0.0000 0.0025 0.0050 0.0075 0.0100 0.0125 0.0150 0.0175 0.0200 0.0225\n [11] 0.0250 0.0275 0.0300 0.0325 0.0350 0.0375 0.0400 0.0425 0.0450 0.0475\n [21] 0.0500 0.0525 0.0550 0.0575 0.0600 0.0625 0.0650 0.0675 0.0700 0.0725\n [31] 0.0750 0.0775 0.0800 0.0825 0.0850 0.0875 0.0900 0.0925 0.0950 0.0975\n [41] 0.1000 0.1025 0.1050 0.1075 0.1100 0.1125 0.1150 0.1175 0.1200 0.1225\n [51] 0.1250 0.1275 0.1300 0.1325 0.1350 0.1375 0.1400 0.1425 0.1450 0.1475\n [61] 0.1500 0.1525 0.1550 0.1575 0.1600 0.1625 0.1650 0.1675 0.1700 0.1725\n [71] 0.1750 0.1775 0.1800 0.1825 0.1850 0.1875 0.1900 0.1925 0.1950 0.1975\n [81] 0.2000 0.2025 0.2050 0.2075 0.2100 0.2125 0.2150 0.2175 0.2200 0.2225\n [91] 0.2250 0.2275 0.2300 0.2325 0.2350 0.2375 0.2400 0.2425 0.2450 0.2475\n[101] 0.2500\n\n\nFinally we generate a grid table with input parameter setups under each scenario, which will be the reference table for the Grym simulations.\n\n\nCode\n# spread fixed parameters over columns\nfixed_pars_wide <- fixed_pars |>\n  select(parameter_tag, value) |>\n  pivot_wider(names_from = parameter_tag)\n\n# merge fixed parameters with scenario's grid table\ngrym_scen_inputs <- grym_scenarios_key |>\n  left_join(maturity_scenarios, by = \"mat_scen_id\") |>\n  select(-source) |>\n  add_column(fixed_pars_wide)\n\n# tibble with list-columns for parameters requiring non-scalar objects\ngrym_scen_setups <- grym_scen_inputs |>\n  mutate(across(.cols = c(pr_ref_age, first_age, last_age, nsteps, n.years, n_iter), as.integer)) |>\n  mutate(across(.cols = c(t0:K, a, b, sel50Min:selrange, B0logsd, Fmax), as.numeric)) |>\n  rowwise() |>\n  mutate(\n    .keep = \"unused\",\n    Ages = list(first_age:last_age), # Age-classes\n    spawnI = list(get_daily_steps(spawning_start, spawning_end, ref_date)), \n    monitorI = list(get_daily_steps(monitoring_start, monitoring_end, ref_date)),\n    fishingI = list(get_daily_steps(fishing_start, fishing_end, ref_date)),\n    f0 = days_since_ref(growth_start, ref_date)/365,      # fraction of year at which growth starts,\n    f1 = days_since_ref(growth_end, ref_date)/365,        # fraction of year at which growth ends\n  ) |>\n  mutate(\n    # draws of PR estimates (M, CV_R, mnQ, vrQ)\n    prRecruitPars = pr_cvR_M_draws_scen[pr_scen_id], \n    # recruitment generating function for assumed rec dist\n    prRecruit = case_when(                             \n      pr_dist == \"Log-Normal\" ~ list(recLogNormal),\n      pr_dist == \"Gamma\" ~ list(recGamma),\n      pr_dist == \"Invserse-Beta\" ~ list(recInverseBeta)\n    ),\n    # Within-year M pattern\n    ms = case_when(\n      M_within_year == \"constant\" ~ list(matrix(1, nsteps+1, length(Ages)))\n    ), \n    # sequence of harvest rates over which to run population projections\n    gamma = list(gamma_seq),\n    outputs_path = outputs_path\n  )\n\nwrite_rds(grym_scen_setups, \"../part1_shared_files/inputs/grym_scen_setups.rds\")\n\ngrym_scen_setups\n\n\n\n\n  \n\n\n\n\n\n2.2.3 Run Grym models\nIn this section we run the Grym simulations, and thus the estimation of \\(\\gamma_y\\), for each scenario. We do this by sequentially mapping the function run_grym_krill() to each scenarios setup. Function run_grym_krill() is a wrapper that runs simulations within each scenario in parallel, using the projection function KrillProjection(). It then selects the \\(\\gamma_1\\) and \\(\\gamma_2\\) values for the scenario being evaluated.\n\n# Note: runtime is substantial (~8hrs across 20 cores), so we don't want to run\n# this chunk on rendering!\n\n# Progress bar configuration\nhandlers(handler_progress(\n  format = \":spin :current/:total [:bar] :percent in :elapsed ETA: :eta\",\n  width = 70)\n)\n\n# set-up cores for parallization\nfuture::plan(multisession, workers = future::availableCores()-1)\n\n# run simulations - needs to be wrapped in `with-progress` to get progress bars \n# for projection runs\ntictoc::tic()\ngrym_scen_outputs <- progressr::with_progress(\n  pmap(grym_scen_setups, run_grym_krill), \n  delay_stdout = FALSE\n)\ntictoc::toc()\n\n# switch back to sequential computations\nfuture::plan(sequential)\n\nnames(grym_scen_outputs) <- grym_scen_setups$scenario_id\n\n# Write out object with all the results (compressing due to large size)\nwrite_rds(grym_scen_outputs,\n          \"../part1_shared_files/outputs/grym/grym_scen_results.rds\",\n          compress = \"gz\",\n          compression = 9)"
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/2_GRYM_sims/grym_sims.html#results",
    "href": "part1_openMSE_GRYM_approx/2_GRYM_sims/grym_sims.html#results",
    "title": "2  GYM/Grym Analysis",
    "section": "2.3 Results",
    "text": "2.3 Results\n\n\n\n\n2.3.1 Simulated Spawning Stock trajectories\nFigure 2.1 presents the simulated trajectories of spawning Stock Status (\\(SSS\\)), expressing the proportion of \\(SSB\\) relative to \\(SSB_0\\), at each year of the projecting period. As expected, in all scenarios, trajectories show an increasing proportion of simulations in which \\(SSB\\) drops bellow 20% of \\(SSB_0\\) as the level of harvesting \\(\\gamma\\) increases.\nIt is also clear that input scenarios with higher levels of recruitment variability and uncertainty in \\(M\\) estimates (scen-3 to scen-8, check Table 2.3 and Figure 1.1 for reference) produce widely variable \\(SSS\\) trajectories. As a result, a large proportion of simulations falls below the depletion threshold even in the absence of fishing (i.e. \\(\\gamma = 0\\)).\n\n\nCode\ngrym_scen_outputs_sub <- read_rds(\"../part1_shared_files/outputs/grym/grym_scen_outputs_sub.rds\")\n\n# plots of simulated SSS across years, for each scenario under a subset of gammas\n# SSS trajectories that go below 0.2 are signaled in green\np <- grym_scen_outputs_sub |>\n  ggplot(aes(x = Year, y = SSS, group = Run)) +\n  geom_path(\n    data = ~filter(.x, below_dpl == FALSE), \n    alpha = 0.8, color = \"gray75\", linewidth = 0.3\n    ) +\n  geom_path(\n    data = ~filter(.x, below_dpl == TRUE), \n    alpha = 0.8, color = \"#1B5E20\", linewidth = 0.3\n    ) +\n  geom_hline(yintercept = c(0.2), linetype = \"dashed\") +\n  scale_y_sqrt() +\n  guides(colour=\"none\") +\n  labs(y = expression(paste(\"Spawning stock status (SSB/\", SSB[0], \")\"))) +\n  facet_grid(rows = vars(scenario_id), cols = vars(Gamma), scales = \"free_y\")\n\nggsave(\n  plot = p, \n  filename = \"../part1_shared_files/outputs/grym/grym_SSS_scenarios.png\", \n  width = 8, \n  height = 9\n)\n\n\n\n\n\n\nFigure 2.1: Simulated trajectories of spawning stock status over time, for each scenario (rows) under a subset of the considered \\(\\gamma\\) values (columns). Dashed line indicates the depletion threshold (0.2). Trajectories that fall below the 0.2 depletion threshold are signaled in green.\n\n\n\n\n\nThe impact of increasing \\(\\gamma\\) values on the biomass of spawners at the end of the projection period (\\(SSB_Y\\)) is also evident in Figure 2.2. As expected, distributions of \\(SSB_Y\\) fall further from \\(SSB_0\\) distributions as annual harvest rates increase.\nIn addition, plots in Figure 2.2 illustrate how variability in recruitment (\\(R\\)) and \\(M\\) affect the escapement levels on the stock. Specifically, simulations under scenarios scn-3 to scn-8, which are based on estimates of \\(M\\) and \\(R\\) with higher variability (as shown by wider quantile intervals), tend to produce median \\(SSB_Y\\) values that drop below 75% of the median \\(SSB_0\\) at lower \\(\\gamma\\) values compared to those simulated under scenarios scn-1 and scn-2 (which have narrower quantile intervals).\n\n\nCode\n# get simulated values of SSB0 and SSB in final year of the projection\nspawners <- grym_scen_outputs_sub |>\n  filter(Year %in% max(Year)) |>\n  select(scenario_id, Run, Gamma, SSB, SSB0) |>\n  pivot_longer(cols = c(SSB , SSB0), names_to = \"metric\") |>\n  mutate(\n    metric = if_else(metric == \"SSB\", \"SSBY\", metric),\n    Year = if_else(metric == \"SSBY\",  \"20\", \"0\")\n    )\n\n# compute medians SSB0 and SSB across all simulations , under each scenario\nmed_spawners <- spawners |>\n  group_by(scenario_id, metric, Year, Gamma) |>\n  summarise(medians = median(value), .groups = \"drop\") \n\n\n# Compute escapement threshold value, i.e. 75% of median SSB0)\n# Note: values are constant across gammas, as simulated SSB0s are held constant\n# across gamma-specific projections.\nesc_thresh <- med_spawners |>\n  filter(metric == \"SSB0\") |>\n  mutate(esc_thrs = medians*0.75)\n\np2 <- spawners |>\n  ggplot(aes(x = Year, y = value)) +\n  ggdist::stat_interval() +\n  geom_point(data = med_spawners, aes(y = medians)) +\n  geom_hline(data = esc_thresh, aes(yintercept = esc_thrs), linetype = \"dashed\") +\n  facet_grid(scenario_id ~ Gamma, scales = \"free\") +\n  labs(y = \"Spawning Biomass\", ) +\n  # scale_colour_grey(end = 0.2, start = 0.8)\n  scale_color_brewer(palette = \"Greens\", name = \"Quantile Interval (prob)\") +\n  theme(legend.position=\"bottom\")\n\nggsave(\n  plot = p2, \n  filename = \"../part1_shared_files/outputs/grym/grym_SSB0_SSBY_dstbn_scenarios.png\", \n  width = 8, \n  height = 9\n)\n\n\n\n\n\n\nFigure 2.2: Quantile intervals (blue bars) and medians (dots) of simulated pre-explotation spawining biomass (Year 0) and spawning biomass at the final year of the projection (Year 20), across a subset of \\(\\gamma\\)s (columns) for each scenario (rows). Dashed lines indicate the critical escapement threshold (i.e. 75% of median SSB0).\n\n\n\n\n\n\n\n2.3.2 Depletion probability and Escapement levels versus \\(\\gamma\\) values\nFigure 2.3 shows the depletion probability3 and the escapement level4 at the considered range of harvest rates. Here are the main observations:\n\nFor scenarios scn-3, scn-4, scn-7 and scn-8, probability of depletion would be considerably above the 10% critical limit even in the absence of fishing (i.e. \\(\\gamma = 0\\)).\nIn the remaining scenarios, depletion probability would remain under the 10% critical limit for \\(\\gamma\\) values up to 0.075 (scn-6) and 0.125 (scn-1).\nEscapement levels stay above the 75% threshold for a large range of \\(\\gamma\\) values, depending on the input scenario. For example, simulations under scn-1 inputs suggest that stock would remain above the 75% escapement threshold for constant harvest rates up to 10% of \\(B_0\\) (i.e. \\(\\gamma = 0.1\\)), while for scn-8 the stock would fall below precautionary escapement levels under constant harvest rates above 2% of \\(B_0\\) (i.e. \\(\\gamma = 0.02\\)).\nBoth plots illustrate how alternative maturity ogives can have a significant impact on the simulation outcomes, as highlighted by the separation between pairs of scenarios (scn-1 & scn-2, scn-3 & scn-4, etc.). Scenarios using the mat-2010 maturity ogive, such as scn-1, scn-3, scn-5, and scn-7, which yields a higher percentage of mature individuals at smaller sizes, show greater resilience to fishing pressure. The projections suggest that under these scenarios, the stock could withstand higher levels of \\(\\gamma\\) before falling to unsustainable levels of depletion risk and escapement.\n\n\n\nCode\ngrym_dpl_esc_gammas <- read_rds(\"../part1_shared_files/outputs/grym/grym_dpl_esc_gammas.rds\")\n\n# Plot for depletion probability under considered gammas\np_dpl <- plot_gammas_vs_rule(\n  dt = grym_dpl_esc_gammas, \n  gamma = Gamma, \n  rule_value = Pr_depleted, \n  scen = scenario_id,\n  thresh = 0.1, \n  ylab = \"Pr[min(SSB/SSB0) < 0.2] (Years 1 - 20)\", \n  xlab = expression(gamma),\n  title = \"Depletion\", \n  scen_label = \"Scenario ID\"\n  )\n\n# Plot for escapement level under considered gammas\np_esc <- plot_gammas_vs_rule(\n  dt = grym_dpl_esc_gammas, \n  gamma = Gamma, \n  rule_value = Escapement, \n  scen = scenario_id, \n  thresh = 0.75,\n  title = \"Escapement\", \n  ylab = \"med(SSB)/med(SSB0) in Final Year\",\n  xlab = expression(gamma),\n  scen_label = \"Scenario ID\"\n  )\n\np_dpl/p_esc + plot_layout(guides = 'collect')\n\n\n\n\nFigure 2.3: Depletion probabilities and escapement levels at considered harvest rates \\(\\gamma\\) under each scenario. Horizontal dashed lines indicate the 10% probability limit of the depletion rule (top plot) and the 75% critical threshold of the escapement rule (bottom plot).\n\n\n\n\n\n\n\n2.3.3 Estimated \\(\\gamma_p\\) under each input scenario\nFinally, we determine the precautionary harvest rate \\(\\gamma_p\\) for each input scenario based on the 3-stage decision rule (Table 2.4).\nAs expected, the chosen Proportional Recruitment scenario had the largest impact on the estimated values of \\(\\gamma_p\\). Specifically, scenarios using PR estimates reflecting lower variability and uncertainty in \\(R\\) and \\(M\\) (scn-1 and scn-2) resulted in higher estimates of \\(\\gamma_p\\), based on the escapement rule (\\(\\gamma_2\\)). Conversely, scenarios scn-3, scn-4, scn-7 and scn-8, based on PR estimates conveying the highest variability in \\(R\\) and \\(M\\) (PR-amlr and PR-amlr-haul), returned \\(\\gamma_p\\) estimates of 0 based on the depletion rule (\\(\\gamma_1\\)). In fact, as seen in Figure 2.3, under these scenarios, the risk of depletion in the absence of fishing is already very high, between approximately 25% and 45%.\n\n\n\n\n\n\nThe effect of maturity-at-length on \\(\\gamma_p\\) estimates is also evident, as previously observed in Figure 2.3. Scenarios employing the mat-2021 ogive yielded lower estimates of \\(\\gamma_p\\) compared to scenarios using the mat-2010 ogive. Under the same selectivity ogive, the mat-2021 ogive allows a larger number of immature individuals to be vulnerable to the fishery than the mat-2010 ogive. This leads to a reduced incidence of spawners in an exploited population, causing a faster decline of \\(SSB\\) from \\(SSB_0\\) over the projection period. Consequently, the estimates of \\(\\gamma_p\\) are lower and more conservative when the mat-2021 ogive is applied.\nScenarios scn-5 and scn-6 are also interesting because they demonstrate how variability in maturity ogives can affect which of the decision rules determines the choice of \\(\\gamma_p\\). Specifically, population simulations using the mat-2021 ogive (scn-6), which sample midpoints from a larger range of values (i.e. higher variability) than the mat-2010 ogive (scn-5), hit the depletion rule at lower \\(\\gamma\\) values than the escapement rule (i.e. \\(\\gamma_1 < \\gamma_2\\)).\n\n\nCode\ngrym_gammas_tbl <- read_rds(\"../part1_shared_files/outputs/grym/grym_gammas_tbl.rds\")\n\n# gammas in math format\ngamma_symb <- c(\"\\\\gamma_1\", \"\\\\gamma_2\", \"\\\\gamma_p\")\n\ngrym_gammas_tbl |>\n  mutate(across(-scenario_id, as.numeric)) |>\n  mutate(across(c(Gamma_1, Gamma_2), ~if_else(is.infinite(.), 0, .))) |>\n  left_join(grym_scenarios_key, by = \"scenario_id\") |>\n  relocate(Gamma_1:Gamma_choice, .after = last_col()) |>\n  mutate(gamma_p = pmin(Gamma_1, Gamma_2)) |>\n  select(-Gamma_choice) |>\n  flextable() |>\n  set_table_properties(width = 0.8, layout = \"autofit\") |>\n  #bold(j = ~ gamma_p) |>\n  bold(j = ~ Gamma_1, i = ~ Gamma_1 < Gamma_2) |>\n  bold(j = ~ Gamma_2, i = ~ Gamma_2 < Gamma_1) |>\n  vline(j = ~ Gamma_2, border = fp_border_default(width = .5)) |>\n  bg(j = ~ gamma_p, bg = \"#E8F5E9\", part = \"all\") |>\n  set_header_labels(\n    scenario_id = \"Scenario ID\",\n    pr_scen_id = \"PR Scenario ID\",\n    mat_scen_id = \"Maturity ID\"\n  ) |>\n  width(j = ~ Gamma_1 + Gamma_2 + gamma_p, width = 10) |>\n  compose(j = ~ Gamma_1 + Gamma_2 + gamma_p, \n          part = \"header\", \n          value = as_paragraph(as_equation(gamma_symb))) |>\n  align(j = ~ Gamma_1 + Gamma_2 + gamma_p, align = \"center\")\n\n\n\n\nTable 2.4:  Estimated precautionary harvest rate under each Grym inputs scenario Scenario IDPR Scenario IDMaturity ID\nγ1\\gamma_1γ1​\nγ2\\gamma_2γ2​\nγp\\gamma_pγp​scn-1PR-emm21mat-20100.12750.10750.1075scn-2PR-emm21mat-20210.10250.09000.0900scn-3PR-amlrmat-20100.00000.03750.0000scn-4PR-amlrmat-20210.00000.03000.0000scn-5PR-atlantidamat-20100.08000.07750.0775scn-6PR-atlantidamat-20210.06750.07000.0675scn-7PR-amlr-haulmat-20100.00000.02000.0000scn-8PR-amlr-haulmat-20210.00000.01500.0000"
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/2_GRYM_sims/grym_sims.html#wrapping-up",
    "href": "part1_openMSE_GRYM_approx/2_GRYM_sims/grym_sims.html#wrapping-up",
    "title": "2  GYM/Grym Analysis",
    "section": "2.4 Wrapping Up",
    "text": "2.4 Wrapping Up\nWe now have estimates of \\(\\gamma_p\\) using the current Grym base-case implementation for the Krill stock under alternative input parameter values. The next step is to replicate this estimation process using the openMSE/DLMtool and assess whether these two frameworks could be used interchangeably."
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/2_GRYM_sims/grym_sims.html#supplementary-code",
    "href": "part1_openMSE_GRYM_approx/2_GRYM_sims/grym_sims.html#supplementary-code",
    "title": "2  GYM/Grym Analysis",
    "section": "2.5 Supplementary Code",
    "text": "2.5 Supplementary Code\n\nWrapper function for running simulations across scenarios\n# --------------------------------------------------------------------------------\n# Run GRYM simulations for the assessment/managements of antarctic krill\n# --------------------------------------------------------------------------------\n# \n#  This is a wrapper on code provided for krill's assessement base-case, useful\n#  for setting up Grym runs under different input scenarios. Specifically:\n#   - Uses the projection function `KrillProjection()`\n#   - Derives gammas based on decision rules\n#\n# --------------------------------------------------------------------------------\n\nrun_grym_krill <- function(nsteps, Ages, spawnI, monitorI, fishingI,\n        t0, K, Linf, f0, f1, a, b, sel50Min, sel50Max, selrange,\n        mat50Min, mat50Max, matrange, B0logsd, prRecruitPars, prRecruit, \n        gamma, n.years, ms, Fmax, n_iter, scenario_id, pr_scen_id, \n        mat_scen_id, outputs_path, ...){\n  \n  cli::cli_h2(\"Running GRYM for scenario {scenario_id} [{pr_scen_id}:{mat_scen_id}]\")\n\n  # ---- Set-up projection function\n  Project <- KrillProjection(nsteps, Ages, spawnI, monitorI, fishingI, \n    t0, K, Linf, f0, f1, a, b, sel50Min, sel50Max, selrange, \n    mat50Min, mat50Max, matrange, B0logsd, prRecruitPars, prRecruit, \n    gamma, n.years, ms, Fmax)\n  \n  \n  # ---- Run projections for all gamma values, paralellizing over iterations\n  \n  cli::cli_alert_info(\"Running projections\")\n  \n  #future::plan(multisession, workers = future::availableCores()-1)\n\n  # set progressor counter  \n  p <- progressr::progressor(steps = n_iter)\n  \n  # run projections (for all gammas) \n  scen_proj <- furrr::future_map_dfr(\n    1:n_iter, function(x){\n      out <- Project(x)\n      p()\n      out\n    },\n    .options = furrr_options(seed = TRUE)\n  ) |>\n    mutate(scenario_id = scenario_id, .before = 1)\n  \n # future::plan(sequential)\n  \n  #cat(\"\\n\\n\")\n  cli::cli_alert_success(\"Finished projections for scenario {scenario_id}\")\n  \n  \n  # ----  Deriving gammas (using code from workshop)\n  cli::cli_alert_info(\"Deriving gamma1, gamma2, and final chosen gamma\")\n\n  gamma_results <- list()\n  #gamma_results$Scenario <- scenario_id\n  gamma_results$dep_rule <- scen_proj |>\n    group_by(Gamma, Run) |>\n    summarize(min_pop_status = min(SSB/SSB0), .groups = \"drop_last\") |>\n    summarize(Pr_depleted = mean(min_pop_status < 0.2)) |>\n    mutate(scenario_id = scenario_id, .before = 1)\n\n  # Given the gamma values tested, gamma 1 is:\n  gamma_results$Gamma_1 <- max(gamma_results$dep_rule$Gamma[gamma_results$dep_rule$Pr_depleted<=0.1])\n\n  # What is the approximate Gamma that meets 10% depletion to test.\n  gamma_results$test_gamma_1 <- approx(gamma_results$dep_rule$Pr_depleted,gamma_results$dep_rule$Gamma,0.1, ties = mean)$y\n\n  # Gamma 2:\n  gamma_results$esc_rule <- scen_proj |>\n    group_by(Gamma) |>\n    filter(Year %in% max(Year)) |>\n    summarise(ssb_med = median(SSB), ssb0_med = median(SSB0)) |>\n    mutate(\n      Escapement = ssb_med/ssb0_med,\n      scenario_id = scenario_id\n    ) \n  \n  #gamma_results$esc_rule$Escapement<-gamma_results$esc_rule$ssb_med/gamma_results$esc_rule$ssb0_med\n  \n  #Given the gamma values tested, gamma 2 is:\n  gamma_results$Gamma_2<-max(gamma_results$esc_rule$Gamma[gamma_results$esc_rule$Escapement>=0.75])\n\n  #What is the approximate Gamma that meets 75% escapement to test.\n  gamma_results$test_gamma_2 <- approx(gamma_results$esc_rule$Escapement,gamma_results$esc_rule$Gamma,0.75, ties = mean)$y\n\n  #The actual Gamma is the smallest of the two gammas:\n  gamma_results$GammaToUse <- which(c(gamma_results$Gamma_1,gamma_results$Gamma_2)==\n                                      min(gamma_results$Gamma_1,gamma_results$Gamma_2)) #Which gamma is min?\n  if(length(gamma_results$GammaToUse)==2){gamma_results$GammaToUse=3} #when gamma1 and gamma2 are equal\n  gamma_results$Selected_gamma<-as.data.frame(cbind(gamma_results$Gamma_1, gamma_results$Gamma_2,\n                                                    gamma_results$GammaToUse, scenario_id))\n  names(gamma_results$Selected_gamma) <- c(\"Gamma_1\", \"Gamma_2\", \"Gamma_choice\", \"scenario_id\")\n\n  # writing out projections\n  cli::cli_alert_info(\"Writing out results\")\n\n  results <- list(scen_proj = scen_proj, gamma_results = gamma_results)\n\n  write_rds(\n    results,\n    file = fs::path(outputs_path, glue::glue(\"grym_results_{scenario_id}_{pr_scen_id}_{mat_scen_id}.rds\")),\n    compress = \"gz\",\n    compression = 9\n  )\n  \n  results\n}\n\n\nKrill Base-case projection function\nThis is modified version of the KrillProjection() function available in CCAMLR’s Krill base-case repo that adds arguments ms and Fmax, for convenience.\n# --------------------------------------------------------------------------------\n# GRYM's Projection function for Krill\n# --------------------------------------------------------------------------------\n#\n# Modified by BARC in 15/12/2021 to:\n#\n#   - include the parameter `ms` as a function argument to allow for the\n#   specification of intra-annual natural mortality patterns\n#\n#   - remove unused arguments for proportional recruitment estimates\n#\n#   - Add argument `Fmax`, defining a reasonable upper bound for Annual F\n# --------------------------------------------------------------------------------\n\nKrillProjection <- function(\n        nsteps, Ages, #time step numbers and age classes\n        spawnI,monitorI,fishingI, #Interval sequences\n        t0,K,Linf,f0,f1, #Growth details\n        a, b, #Length/Weight Details\n        sel50Min,\tsel50Max,\tselrange, #Selectivity Parameters\n        mat50Min,\tmat50Max,\tmatrange, #Maturity parameters\n        B0logsd, #biomass log cv\n        prRecruitPars,prRecruit, #recruitment parameters and quantile function\n        gamma=c(0,0.04,0.08,0.1),\n        n.years=20, #Test details\n        ms, # matrix with intra-annual natural mortality patterns for each age class (dimesions: nr time intervals x nr age-classes)\n        Fmax\n        ) {\n  if(!inherits(prRecruitPars, \"matrix\")) prRecruitPars <- as.matrix(prRecruitPars)\n  # Create a sequence from 0-1 for each time step. The value is the proportion of that timestep in the year.\n  Days <- seq(0,1,length=nsteps+1)\n  #The proportion of an individual time step in the year (0.002739726 for daily timesteps)\n  h <- 1/nsteps\n\n  ## Spawning and monitoring interval are defined as inputs into the function.\n  ## Should be as timesteps eg 76:138\n\n  ## Ages, length at age and weight at age\n  ages <- outer(Days,Ages,FUN=\"+\")#Ages of each age class for every timestep\n  ls <- vonBertalanffyRAL(ages,t0=t0,K=K,Linf=Linf,f0=f0,f1=f1)#length of each age class for every timestep\n  ws <- powerLW(ls,a=a,b=b)#weight of each age class for every timestep\n\n  ## Constant intra-annual natural mortality\n  #  ms <- matrix(1,nsteps+1,length(Ages))#Proportion of mortality to apply for each timestep to each age class (if constant should all be one)\n  Ms <- ctrapz(ms,h)# Cumulative timestep proportional mortality\n  Msf <- final(Ms)#Sum of mortality for each age class (if constant across ages, should all be one.)\n\n  ## Within year fishing pattern - season is first 90 days\n  fwy <- double(nsteps+1) #Sequence of 0s for the length of the year\n  fwy[fishingI] <- 1\t\t#Set the fishing season increments to 1.\n  fwy <- fwy/mean(fwy)  #Average the fishing mortality so the average is 1 across all increments.\n\n  #B0logsd <- 0.2\n\n  ## This function performs the a projection for each prescibed gamma.\n  function(run) {\n    ## Length based maturity and selectivity - ramp width is constant\n    ## but the midpoint is selected uniformly from a range.\n    gs <- rampOgive(ls,runif(1,mat50Min,mat50Max),matrange) #Maturity ogive\n    ss <- rampOgive(ls,runif(1,sel50Min,sel50Max),selrange)  #Selectivity ogive\n\n    ## Construct fishing mortalities from season and selectivity\n    fs <- fwy*ss #Age + time step fishing mortality\n    Fs <- ctrapz(fs,h) #Cumulative #Age + time step fishing mortality\n    Fsf <- final(Fs) #Final yearly fishing mortality for each age class.\n\n    ## Extract recruitment parameters for this run\n    ps <- unname(prRecruitPars[run,])\n\n    ## Natural mortalities from proprtional recruitment model\n    M <- ps[1] #Yearly M from bootstrapped recruitment\n    MMs <- M*Ms #Timestep cumulative mortality for each age class.\n\n    ## Median spawning biomass estimated from 1000 samples\n    R <- matrix(prRecruit(1000*length(Msf),ps[3],ps[4]),1000,length(Msf))\n    ssb0 <- spawningB0S(R,gs,ws,Ms,M,spawn=spawnI)$median\n    ## Stochastic initial age structure in the absence of fishing\n    N0 <- ageStructureS(prRecruit(length(Msf),ps[3],ps[4]),Msf,M)\n    ## Recruitment series\n    Rs <- prRecruit(n.years,ps[3],ps[4])\n    ## Matrix of annual summaries\n    n <- (1+n.years)*length(gamma)\n    df <- matrix(0,n,11)\n    colnames(df) <- c(\"Year\",\"Gamma\",\"R\",\"N\",\"B\",\"B0\",\"SSN\",\"SSB\",\"SSB0\",\"Catch\",\"F\")\n    ## Initial projection assuming no fishing\n    pr0 <- project(ws,MMs,Nref=N0,yield=0)\n    pr0$F <- pr0$Y <- 0\n    ## Initial biomass in monitoring period + log Normal error\n    b0 <- meanStock(pr0$B,period=monitorI)\n    b0 <- rlnorm(1,log(b0)-B0logsd^2/2,B0logsd)\n\n    k <- 0\n    ## Project for each gamma ratio\n    for(g in gamma) {\n      ## Target catch\n      catch <- g*b0\n      ## Reset to virgin state\n      pr <- pr0\n      ssb <- spawningStock(pr$B,gs,spawnI)\n\n      for(yr in 0:n.years) {\n        if(yr > 0) {\n          ## Recruitment depletion\n          r <- min(1,ssb/(0.2*ssb0))\n          ## Project over year\n          N0 <- advance(pr$N,r*Rs[yr])\n          pr <- projectC(ws,MMs,Fs,fs,catch,Nref=N0,yield=1,Fmax=Fmax)\n          #if(pr$F==1.5) return(NULL)\n        }\n        ssb <- spawningStock(pr$B,gs,spawnI)\n\n        ## Collate annual summaries\n        df[k<-k+1,] <- c(yr,g,initial(pr$N)[1],sum(initial(pr$N)),sum(initial(pr$B)),b0,\n                         spawningStock(pr$N,gs,spawnI),ssb,ssb0,sum(pr$Y),pr$F)\n      }\n    }\n    data.frame(Run=run,M=M,df)\n  }\n}\n\n\n\n\n\n\n\nCCAMLR. 2022. “CCAMLR’s Approach to Managing the Krill Fishery. Euphausia Superba in Area 48.” https://fishdocs.ccamlr.org/SAreport_48_KRI_2021.pdf.\n\n\nConstable, A, and W. de la Mare. 1996. “A Generalised Model for Evaluating Yield and the Long-Term Status of Fish Stocks Under Conditions of Uncertainty.” CCAMLR Science 3: 31–54.\n\n\nConstable, A, William de la Mare, David Agnew, Inigo Everson, and Denzil Miller. 2000. “Managing Fisheries to Conserve the Antarctic Marine Ecosystem: Practical Implementation of the Convention on the Conservation of Antarctic Marine Living Resources (CCAMLR).” ICES Journal of Marine Science 57 (3): 778–91. https://doi.org/10.1006/jmsc.2000.0725.\n\n\nKawaguchi, So. 2016. “Reproduction and Larval Development in Antarctic Krill (Euphausia Superba).” In Biology and Ecology of Antarctic Krill, edited by Volker Siegel, 225–46. Advances in Polar Ecology. Cham: Springer International Publishing. https://doi.org/10.1007/978-3-319-29279-3_6.\n\n\nKinzey, D. 2021. “Summary of Proportional Recruitment and Multiyear Biomass Variability for Krill in Subarea 48 from Research Surveys.” WG-SAM-2021/21 Rev1. CCAMLR.\n\n\nMaschette, D., and S. Wotherspoon. 2021. “Use of Parameters Within Euphausia Superba Grym Simulations.” WG-FSA-2021/40. CCAMLR.\n\n\nMaschette, D., S. Wotherspoon, C. Pavez, P. Ziegler, S. Thanassekos, K Reid, D Kawagushi, D Welsford, and A Constable. 2020. “Generalised R Yield Model (Grym).” Scientific Committee SC-CAMLR-39/BG/19. CCAMLR.\n\n\nMaschette, D, S Wotherspoon, S Kawaguchi, and Philippe Ziegler. 2021. “Grym Assessment for Subarea 48.1 Euphausia Superba Populations.” WG-FSA-2021/39. Hobart, Autralia: CCAMLR. https://meetings.ccamlr.org/en/wg-fsa-2021/39.\n\n\nSC-CAMLR. 2000. “Report of the Bo Workshop.” SC-CAMLR-XIX. Annex 4, Appendix G. CCAMLR.\n\n\nThanassekos, S, K Reid, S Kawaguchi, S Wotherspoon, D Maschette, P Ziegler, D Welsford, et al. 2021. “Grym Parameter Values for Subareas 48.1, 48.2 and 48.3.” WG-SAM-2021/12. CCAMLR."
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/3_openMSE_sims/openmse_sims.html#introduction",
    "href": "part1_openMSE_GRYM_approx/3_openMSE_sims/openmse_sims.html#introduction",
    "title": "3  openMSE-Grym Approximation",
    "section": "3.1 Introduction",
    "text": "3.1 Introduction\nIn this section, we aim to configure and run the models under the {openMSE} package (Hordyk, Huynh, and Carruthers 2021) to approximate Grym’s base-case implementation for the assessment and management of the Antarctic Krill fishery. Our primary objective for this analysis is to determine whether the openMSE framework can generate estimates of precautionary harvest rates (\\(\\gamma_p\\)) similar to those obtained under the Grym framework, for a range of alternative scenarios involving key stock parameters, as described in Chapter 2. The ability to achieve comparable results will establish the suitability of the openMSE framework to model the population dynamics of the Krill stock, and subsequently, its applicability to evaluate prospective alternative management options for the fishery.\nIn its essence, like the Grym approach, the openMSE framework is based on an stochastic age-structured population model that simulates fishery dynamics while taking into account uncertainties about stock parameters and system dynamics. This enables the identification of potential management strategies that are robust to a range credible scenarios of the fishery system. Details about the openMSE’s components and features are available on its documentation site.\nHowever, there are fundamental structural differences between the Grym and the openMSE frameworks that may affect the success of the approximation. In the following subsection we describe the main discrepancies between the two approaches in detail."
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/3_openMSE_sims/openmse_sims.html#sec-openmse-inherent-diffs",
    "href": "part1_openMSE_GRYM_approx/3_openMSE_sims/openmse_sims.html#sec-openmse-inherent-diffs",
    "title": "3  openMSE-Grym Approximation",
    "section": "3.2 Inherent differences between openMSE and Grym",
    "text": "3.2 Inherent differences between openMSE and Grym\nHere we list relevant built-in differences between the Grym’s base-case implementation and the openMSE framework in terms of population model structure.\n\n3.2.1 Temporal Resolution\nThe openMSE’s population model describes a fished stock and its dynamics at yearly time-steps, whereas Grym represents populations at daily time-steps.\nGrym’s daily-based structure allows to model stock characteristics at a day-level resolution, which permits the specification of whithin-year patterns in e.g. growth, spawning, natural and fishing mortality. It also provides the flexibility to evaluate population parameters and reference points at specific periods of the year (e.g. during the spawning season or fishing period).\nOn the other hand, the openMSE framework is constrained to yearly-level computations and hence it is unable to account for within-year features nor to derive the stock status at particular fractions of the year - reported annual stock quantities are strictly related to the stock status at start of each year.\nA concrete example of deviations between the two approaches related to temporal resolution is the calculation of key biomass quantities. In the Grym base-case, yearly \\(SSB_y\\) and \\(SSB_0\\) are computed relative to the spawning period, and \\(B_0\\) is computed for a specific monitoring period. By comparison, under the openMSE dynamics model, these quantities are purely related to the first day of the year.\n\n\n3.2.2 Stock-Recruitment Relationship\nIn contrast with the Grym approach, the openMSE framework uses a conventional stock-recruitment model to compute the expected number of recruits given the spawning stock size.\nAs described in Section 2.1.1, the simulation of recruitment in Grym is assumed to be independent of the stock size, except when the stock falls below a critical depletion point (20% of \\(SSB_0\\)) in the preceding year. In this scenario, the simulated recruitment is penalized by a reduction factor calculated as the percentage drop from the critical point.\nUnder the openMSE approach, yearly recruitments are generated as random deviates from a mean recruitment that is dictated by a standard stock-recruitment relationship (the Beverton-Holt or the Ricker curves), which specifies the expected number of recruits at any given stock size. However, unlike Grym, openMSE does not offer the option to penalize recruitment deviates based in depletion levels.\nAs a result, when the stock falls below critical depletion levels, the strength of simulated recruitment in the two frameworks will tend to diverge, especially under high levels of recruitment variability.\n\n\n3.2.3 Historical Period\nThe openMSE tool takes into account for the historical period of the fishery leading up to a current state, before projecting the population forward under potential future management strategies under evaluation. In the Grym base-case implementation, stock projections start from a pre-exploitation state without considering information on historical trends or current status of the fishery.\nAn obvious way to align the two approaches would be to skip the historical period in the openMSE simulation. However, for the current version of the openMSE, and in particular its {MSEtool} package (vr packageVersion(\"MSEtool\")), a minimum historical period of 5 years is required. Local changes to the {MSEtool} codebase allowed the reduction of the minimum required historical period to 2 years.\nTherefore, even when an historical period with no fishing mortality is specified, the openMSE simulations will still have an additional 2-year lead-up period subject to stochasticity, which is not present in the Grym implementation.\n\n\n3.2.4 Unfished Reference Points Calculation\nThe Grym approach includes recruitment deviations in the calculation of unfished/pre-exploitation reference points, such as \\(SSB_0\\) and \\(B_0\\). The openMSE approach provides similar estimates, referred to as “dynamic unfished reference points”. Under both approaches, these quantities are used to evaluate the status of the stock at different time points of the projection period for each of the management strategies under consideration.\nHowever, there is a key divergence between approaches regarding the estimation of \\(SSB_0\\). In the Grym approach, \\(SSB_0\\) is estimated stochastically within each simulation by taking the median of multiple realizations of \\(SSB_0\\) from repeated samples of initial age structures. In contrast, the openMSE approach computes \\(SSB_0\\) based on one single random sample of initial age structure generated at each given simulation. Consequently, estimates of \\(SSB_0\\) under the Grym approach will tend to be more stable (i.e., have a lower variance) across simulations than those calculated in the openMSE approach. This difference could be especially pronounced in situations of high variability in stock parameters, such as natural mortality and recruitment."
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/3_openMSE_sims/openmse_sims.html#configuring-openmse",
    "href": "part1_openMSE_GRYM_approx/3_openMSE_sims/openmse_sims.html#configuring-openmse",
    "title": "3  openMSE-Grym Approximation",
    "section": "3.3 Configuring openMSE",
    "text": "3.3 Configuring openMSE\nHere we describe how the openMSE components are configured to approximate the estimation of precautionary harvest rates for the krill fishery as it is performed under the Grym base-case implementation1.\nThe openMSE framework requires the specification of 3 main components to run a Management Strategy Evaluation (MSE):\n\nOperating Model (OM): containing parameters specifying the characteristics of the population and fishery dynamics, as well as parameters required to simulate the collection of data and the implementation of management procedures.\nManagement Procedure(s) (MP): A MP defines a set of rules specifying how the fishery will be managed during the projection period (e.g. setting a fixed annual total allowable catch, TAC).\nPerformance Metric(s) (PM): A PM summarises the MSE outputs in order to evaluate the performance of the considered MPs against the management objectives specified for the fisheries, as e.g. the expected level of depletion over the projection period associated with a given MP.\n\nWe start off by building OMs for the 8 inputs scenarios under consideration.\n\n3.3.1 Build OMs for input scenarios\nAs described in Section 2.2.1, input scenarios forming alternative parameter setups for modelling the Krill fishery were generated from combining 4 different PR scenarios with 2 alternative maturity ogive curves. In order to run MSE simulations for each of the considered scenarios, we need to build scenario-specific OMs.\nTherefore, OM parameter values were selected to closely approximate the parameter setups used in the Grym analyses presented in Chapter 2. Specifically, for each scenario-specific OM, all OM parameters were held constant except for:\n\nNatural Mortality M, provided as random draws from the fitted PR model associated with the scenario (generated in Chapter 1);\nRecruitment Process error Perr, derived from random draws of \\(CV_R\\), also from the fitted PR model;\nmaturity-at-length parameters L50 and L50_95 associated with the scenario\n\nThe function build_OM_grym_approx() was created to build OMs for the parameters values specified under each input scenario, as follows.\n\nopenmse_scen_OMs <- grym_setups |>\n  select(scenario_id:matrange, t0:Ages, prRecruitPars) |>\n  rowwise() |>\n  mutate(\n    OM = list(\n      build_OM_grym_approx(\n        om_name = glue::glue(\"krill_grym_approx_{scenario_id}\"),  \n        maxage = last(Ages), Linf = Linf, K = K, t0 = t0, \n        mat50Min = mat50Min, mat50Max = mat50Max, matrange = matrange, \n        sel50Min = sel50Min, sel50Max = sel50Max, selrange = selrange, \n        a = a, b = b, \n        M_draws = pull(prRecruitPars, M) , RCV_draws = pull(prRecruitPars, CV),\n        maxF = Fmax, n_iter = n_iter, proj_yrs = n.years\n      )\n    )\n  ) |>\n  pull(OM)\n\nnames(openmse_scen_OMs) <- grym_setups$scenario_id\n\nwrite_rds(openmse_scen_OMs, \"../part1_shared_files/inputs/openmse_scen_OMs.rds\")\n\n\n\n\nThe openMSE framework includes a report generation tool that was used to document in detail the choice of OM parameter values for one of the input scenarios (scn-1), for reference.\n\n# initialize OM report for scn-1\nOMinit(name = \"OM_krill_grym_approx_scn-1\", files = \"rmd\", overwrite = FALSE)\n\nThe documentation step is performed externally to this document. Once the OM is appropriately documented, we compile the report. The resultant document can be viewed in Chapter 4.\n\n\n\n\n\n\nDue to a bug in MSEtool::OMdoc(), the number of years to project the population forward must be set to 50 years, otherwise the markdown rendering process fails. This issue is exclusive to the OM_doc function.\n\n\n\n\n# changed version of the MSEtool::OMdoc() that solves issues with the inclusion\n# of bibliographic references, provides better integration in another document\n# as an embedded html. Also adds option to change html theme\nsource(\"OMdoc_dmp.r\")\n\n# Length of projection must be 50 years, otherwise compilation crashes due to\n# bug in OMdoc\nOM_to_report <- openmse_scen_OMs$`scn-1`\nOM_to_report@proyears <- 50\n\nOMdoc_dmp(\n  OM = OM_to_report, \n  openFile = FALSE,\n  rmd.source = \"OM_krill_grym_approx_scn-1.rmd\", \n  bib_file = \"../../references.json\",\n  html_theme = \"lumen\")\n\nRelevant choices to approximate the OMs specification to the Grym setups include:\n\nSet up the historical period to two years (minimum restricted by the basecode).\nStock assumed to remain unexploited during the historical period.\nDefine a range of high values (0.9 - 0.95) for the steepness of the Beverton-Holt stock-recruitment model in order to simulate yearly recruitments that are weakly dependent on stock size, unless when the stock is below 20% of its pre-exploitation size.\nLife-history parameters defining individual growth (i.e. Linf, K, t0, a and b) assumed to be known without error.\nManagement procedures assumed to be perfectly implemented, i.e. annual catches never exceed nor fall short of the stipulated TACs.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3.3.2 Define Management Plans\nThe openMSE framework define Management Plans (MPs) as programmatic functions establishing how the fishery could prospectively be managed, by running a set of calculations and criteria on fishery information and returning management recommendations.\nIn the context of the openMSE-Grym approximation, and Krill’s current management approach, we want to specify one MP for each of the considered harvest rates \\(\\gamma\\). Thus, each MP establishes a constant harvest rate policy with a recommended fixed annual catch limit of \\(\\gamma \\widehat{B_0}\\) throughout the projection period.\nAs explained in Section 2.1.1, \\(\\widehat{B_0}\\) represents an estimate of pre-exploitation biomass which, similarly to the Grym approach, is simulated here as\n\\[\\widehat{B_0} = B_0 \\times \\epsilon_{B_0}, \\epsilon_{B_0} \\sim \\textrm{log-Normal}\\left(-B0logSD^2/2, B0logSD^2 \\right)\\]\nwhere the standard deviation \\(B0logSD\\), conveying the observational error in survey estimates of \\(B_0\\), is estimated externally from survey data (e.g. Kinzey 2021). The \\(\\gamma\\)-based MPs are set using the estimated dynamic unfished stock biomass (i.e. including recruitment process error) at the end of the historical period, serving as a proxy for the pre-exploitation biomass \\(B_0\\). This is to approximate the Grym implementation, which incorporates recruitment variability in the estimation of reference points.\nBelow are the custom functions we developed to generate the \\(\\gamma\\)-based MPs. These functions need to be defined as objects of class MP in order to be used with openMSE’s simulation functions.\n# ------------------------------------------------------------------------------\n# Custom-made MP for krill based current CCAMLR management: constant TAC as a\n# proportion (gamma, i.e. the exploitation rate) of an estimate of\n# pre-exploitation biomass (B0)\n#\n# Note: This is only an approximation to current krill management methods.\n# Literature and Grym code point to the use of an estimate of mean B0 at a given\n# \"monitoring period\" - the time of the year in which surveys are typically done\n# to estimate B0. Population dynamics in DLMtool follow yearly time-steps, so\n# there is no obvious way to derive the B0 for a given time period within the\n# year\n\n# core function\n#' @param gamma double, the harvest rate that, combined with B0, sets the TAC\n#' @param B0err numeric vector of size `nsim`, random draws of errors in B0\n#'   estimates\ngammaB0_ <- function(x, Data, reps = 1, gamma, nyears, B0err){\n  \n  # create a 'Rec' object\n  Rec <- new(\"Rec\")\n  \n  # get the dynamic unfished biomass (i.e., including recruitment deviations) at\n  # the end of the spool-up/historical period (i.e. last year before first year\n  # of projection)\n  B0 <- Data@Misc$ReferencePoints$Dynamic_Unfished$B0[x, nyears]\n  \n  # Replicating Grym's approach for setting the catch limit, based on a survey\n  # estimate of B0. So, first generate an estimate of B0, accounting for\n  # observational error\n  B0_hat <- B0 * B0err[x]\n  \n  # Then compute the catch limit recommendation, and assign it to the TAC slot of\n  # 'Rec'\n  Rec@TAC <- gamma * B0_hat\n  \n  # return the 'Rec' object\n  Rec\n}\n\n#' Function to build multiple gamma_B0-based MPs for a choice of gammas. Also\n#' passing the number of years in historical simulation and the SD of B0 survey\n#' estimates.\n#' In MSEtool, each MP must be defined as a unique function, and must be of class \"MP\"\n#' @inheritParams gammaB0_\nbuild_gammaB0 <- function(gammas, nyears, B0err){\n  \n  purrr::map_chr(gammas, function(x){\n    \n    # name of the function\n    fn_name <- paste0(\"gammaB0_\", x)\n    \n    # function re-definition for the gamma value\n    fn_def <- purrr::partial(gammaB0_, gamma = !!x, nyears = !!nyears, B0err = !!B0err)\n    \n    # assign function to name\n    assign(fn_name, fn_def, envir = .GlobalEnv)\n    \n    # assign class MP to function\n    eval(\n      rlang::call2(\"<-\", \n                   rlang::expr(class(!!rlang::sym(fn_name))), \"MP\"), \n      envir = .GlobalEnv\n    )\n    \n    # return function name for use in MSE run\n    fn_name\n  })\n}\n\n\n3.3.3 Set Performance Metrics\nLastly, we must define Performance Metrics (PMs) to evaluate the \\(\\gamma\\)-based MPs under consideration. In the context of Krill management, and as seen in Chapter 2, there are two PMs of interest:\n\nthe depletion probability, the probability of \\(SSB\\) being below 20% of its pre-exploitation level \\(SSB_0\\) at any year of a 20-year projection period)\nEscapement level, the median of simulated \\(SSB\\) estimates at the end of the projection period relative to the median of simulated \\(SSB_0\\) estimates\n\nFollowing the same approach taken in the definition of MPs and in alignment with the Grym implementation, both PM calculations use the estimate of unfished spawning biomass at the end of the historical period as the pre-exploitation spawning biomass \\(SSB_0\\).\nWe create two functions, PD() and ESC(), of class PM to formalize these metrics for use within the openMSE package.\n# ------------------------------------------------------------------------------\n# Performance metrics for krill based on current CCAMLR management (i.e.\n# the two  decision rules)\n\n## ------------------------- ##\n##   Depletion Probability   ##\n## ------------------------- ##\n\n# *Depletion probability*: Probability of lowest spawning biomass over a 20-year\n# harvesting period dropping below 20% of its pre-exploitation level\n\n# Following krill's Grym Workshop - the probability that the\n# minimum value of SSB over the projection period is less than 20% of SSB0,\n# i.e. p[min(SSB)/SSB0 < 0.2]\n\nPD <- function (MSEobj = NULL, Ref = 0.2, Yrs = 20){\n  Yrs <- ChkYrs(Yrs, MSEobj)\n  PMobj <- new(\"PMobj\")\n  PMobj@Name <- \"Depletion: Lowest Spawning Biomass relative to SSB0\"\n  if (Ref != 1) {\n    PMobj@Caption <- paste0(\"Prob. min(SSB) < \", Ref, \" SSB0 (Years \", \n                            Yrs[1], \" - \", Yrs[2], \")\")\n  }\n  else {\n    PMobj@Caption <- paste0(\"Prob. min(SSB) < SSB0 (Years \", Yrs[1], \" - \", \n                            Yrs[2], \")\")\n  }\n  \n  PMobj@Ref <- Ref\n  \n  # get lowest SSB over the selected window of the projection period, for each\n  # simulation and MP\n  if (MSEobj@nMPs > 1) mar <- 2 else mar <- 1\n  mar <- 1:mar\n  SSB_lowest <- apply(MSEobj@SSB[ , ,  Yrs[1]:Yrs[2]], mar, min, na.rm = TRUE)\n  \n  # step required to conform with PMobj@Stat requirements\n  if(MSEobj@nMPs == 1){\n    SSB_lowest <- array(SSB_lowest, dim = c(MSEobj@nsim, 1))\n  }\n  \n  # Using the unfished dynamics estimate of SB at the end of the historical\n  # period as a proxy for pre-exploitation SB\n  PMobj@Stat <- SSB_lowest/MSEobj@RefPoint$Dynamic_Unfished$SSB0[, MSEobj@nyears]\n  \n  PMobj@Prob <- PMobj@Stat < PMobj@Ref\n  PMobj@Mean <- calcMean(PMobj@Prob)\n  PMobj@MPs <- MSEobj@MPs\n  PMobj\n  \n}\n\nclass(PD) <- \"PM\"\n\n\n## --------------------- ##\n##   Escapement in SSB   ##\n## --------------------- ##\n\n# Escapement: median SSB at end of a 20-year harvesting period relative to\n# median SSB0, i.e. median(SSBF)/median(SSB0)\n# Escapement Rule: median escapement at the end of a 20 year period is 75% of\n# the median pre-exploitation level\n\nESC <- function (MSEobj = NULL, Ref = 1, Yrs = 20){\n  Yrs <- ChkYrs(Yrs, MSEobj)\n  PMobj <- new(\"PMobj\")\n  PMobj@Name <- \"Escapement: Final Spawning Biomass relative to SSB0\"\n  PMobj@Caption <- paste0(\"median(SSB at Year \", Yrs[2], \")/median(SSB0)\")\n  \n  PMobj@Ref <- Ref\n  \n  # derive median SSB0 over all simulations - using the unfished dynamics SB at\n  # the end of the historical period as a proxy for pre-exploitation SB\n  SSB0_med <- median(MSEobj@RefPoint$Dynamic_Unfished$SSB0[, MSEobj@nyears])\n  \n  # Select SSB in final year of the selected window\n  PMobj@Stat <- MSEobj@SSB[, , Yrs[2], drop = FALSE]\n  # since size of 3rd dimension is 1 (last year only), calProb merely simplifies\n  # array\n  PMobj@Prob <- calcProb(PMobj@Stat, MSEobj)\n  PMobj@Mean <- apply(PMobj@Stat, 2, median)/SSB0_med\n  PMobj@MPs <- MSEobj@MPs\n  PMobj\n}\n\nclass(ESC) <- \"PM\""
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/3_openMSE_sims/openmse_sims.html#run-mse-simulations",
    "href": "part1_openMSE_GRYM_approx/3_openMSE_sims/openmse_sims.html#run-mse-simulations",
    "title": "3  openMSE-Grym Approximation",
    "section": "3.4 Run MSE Simulations",
    "text": "3.4 Run MSE Simulations\nWith all the necessary components specified for the openMSE framework, we are now ready to run the MSE simulations for each of the scenario-specific OMs defined above.\nDue to the large number of simulations (10k) and the extensive quantity of \\(\\gamma\\)-based MPs involved in each MSE run, we use the “slice-apply-combine” parallelization feature available on the main function MSEtool::runMSE() to speed up computations.\n\n\nCode\n# Note: runtime is substantial (~2.5 days across 20 cores), so we don't want to run\n# this chunk on rendering!\n\nopenmse_scen_OMs |>\n  imap(\\(x, y){\n\n    cli::cli_h1(\"Starting MSE run for {y} @ {Sys.time()}\")\n    \n    # Simulate observational errors in survey estimates of B0. `B0logsd` is the\n    # SD of survey estimates of (log) B0 conveying the  observational error in\n    # surveys, assumed to be log-Normally distributed. `B0logsd` is calculated\n    # externally from survey data.\n    b0lgsd <- grym_setups |> filter(scenario_id == y) |> pull(B0logsd)\n    B0err_draws <- rlnorm(x@nsim, -b0lgsd^2/2, b0lgsd)\n    \n    # build MPs for considered gammas\n    gammas <- grym_setups |> filter(scenario_id == y) |> pull(gamma) |> pluck(1)\n    gamma_B0_MPs <- build_gammaB0(\n      gammas = gammas, \n      nyears = x@nyears,\n      B0err = B0err_draws)\n    \n    # run MSE for current scenario    \n    tictoc::tic()\n    mse_output <- runMSE(OM = x, MPs = gamma_B0_MPs, parallel = \"sac\")\n    runtime <- tictoc::toc(quiet = TRUE)\n    \n    # write out mse outputs\n    write_rds(\n      mse_output,\n      file = fs::path(model_outputs_path, glue::glue(\"openmse_mse_outputs_{y}.rds\")), \n      compress = \"gz\"\n    )\n    \n    cli::cli_alert_success(\"Finished MSE for {y}: {runtime$callback_msg}\")\n  })\n\n\nNext we extract the most relevant outputs from the MSE simulations, while also computing the precautionary harvest rate \\(\\gamma_p\\) for each input scenario. As described in Section 2.1, \\(\\gamma_p\\) is derived based on the three-step decision rule involving the depletion probability and escapement performance metrics.\n\n\nCode\n# ------------------------------------------------------------------------------\n#  Utility function to extract relevant results and perform gammas selection\n# ------------------------------------------------------------------------------\nmse_extract_gammas <- function(mseObj_file, SSB0_type = \"equilibrium\"){\n\n  cli::cli_alert(\"\\n Processing file {mseObj_file} @ {Sys.time()}\")\n  \n  mse_out <- read_rds(mseObj_file)\n  \n  # SSB0 data and source metrics functions, based on choice of type of reference point\n  if(SSB0_type == \"equilibrium\"){\n    SSB0 <- mse_out@OM$SSB0  \n    source(\"part1_openMSE_GRYM_approx/3_openMSE_sims/krill_mngnt_ccamlr_metrics_equilibrium.R\")\n  }else \n    if(SSB0_type == \"dyn_unfished\"){\n      SSB0 <- mse_out@RefPoint$Dynamic_Unfished$SSB0[, mse_out@nyears]\n      source(\"part1_openMSE_GRYM_approx/3_openMSE_sims/krill_mngnt_ccamlr_metrics_dynamic.R\")\n    }\n  \n  # get considered gammas\n  gammas <- as.numeric(str_replace(mse_out@MPs, \"gammaB0_\", \"\"))\n  \n  # extract projected SSB and cast it into a dataframe\n  dimnames(mse_out@SSB) <- list(sim = 1:mse_out@nsim, gamma = gammas, Year = 1:mse_out@proyears)\n  ssb_proj <- reshape2::melt(mse_out@SSB, value.name = \"SSB\") |> as_tibble()\n  ssb0 <- tibble(\n    sim = 1:mse_out@nsim, \n    SSB0 = SSB0\n  )\n  \n  # merge in SSB0, calculate yearly spawning stock status (SSS), and identify\n  # simulations where SSS < 0.2 at any point in the time-series\n  ssb_proj <- left_join(ssb_proj, ssb0, by = \"sim\") |>\n    group_by(sim, gamma) |>\n    mutate(\n      SSS = SSB/SSB0,\n      below_dpl = if_else(min(SSS) < 0.2, TRUE, FALSE)\n    ) |>\n    ungroup()\n  \n  # Compute depletion metric for each gamma\n  dep_metric <- PD(mse_out)\n  \n  # Compute escapement metric for each gamma\n  esc_metric <- ESC(mse_out)\n  \n  mse_metrics <- tibble(gamma = gammas, PD = dep_metric@Mean, ESC = esc_metric@Mean)\n  \n  # Derive gammas that satisfy the depletion and the escapement rules, and the\n  # final gamma_p as min(gamma_1, gamma_2)\n  gamma_results <- mse_metrics |>\n    summarise(\n      gamma1 = max(max(gamma[PD <= 0.1]), 0), \n      gamma1_approx = approx(PD, gamma, 0.1)$y, \n      gamma2 = max(gamma[ESC >= 0.75]),\n      gamma2_approx = approx(ESC, gamma, 0.75)$y\n    ) |>\n    mutate(selected_gamma = if_else(gamma1 < gamma2, 1, 2))\n  \n  # return results in tibble with list-columns\n  tibble(\n    ssb_proj = list(ssb_proj), dep_metric = list(dep_metric), \n    esc_metric = list(esc_metric), mse_metrics = list(mse_metrics), \n    gamma_results = list(gamma_results)\n  )\n}\n# -------------------------------------------------------------------------------\n\n\n# -- Results and gammas for unfished dynamics SSB0 and dynamic B0\nopenmse_2yrhst_dynB0_dynSSB0_scen <- fs::dir_ls(model_outputs_path, regexp = \"scn\") |>\n  map_df(~mse_extract_gammas(.x, SSB0_type = \"dyn_unfished\"), .id = \"fname\") |>\n  mutate(scen_id = str_extract(fname, \"scn-\\\\d+\"), .before = 1, .keep = \"unused\")\n\n# -- write out selected gammas\nopenmse_2yrhst_dynB0_dynSSB0_scen |>\n  select(scen_id, gamma_results) |>\n  unnest(gamma_results) |>\n  select(-contains(\"approx\")) |>\n  write_rds(\n    file = fs::path(results_path, \"openmse_2yrhst_dynB0_dynSSB0_scen_gamma_select.rds\")\n  )\n\n# -- write out performance metrics\nopenmse_2yrhst_dynB0_dynSSB0_scen |>\n  select(scen_id, mse_metrics) |>\n  unnest(mse_metrics) |>\n  write_rds(file = fs::path(results_path, \"openmse_2yrhst_dynB0_dynSSB0_scen_metrics.rds\"))\n\n# -- write out simulated SSB trajectories under all scenarios\nopenmse_2yrhst_dynB0_dynSSB0_scen |>\n  select(scen_id, ssb_proj) |>\n  unnest(ssb_proj) |>\n  write_rds(file = fs::path(results_path, \"openmse_2yrhst_dynB0_dynSSB0_scen_ssb.rds\"),\n    compress = \"gz\"\n  )"
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/3_openMSE_sims/openmse_sims.html#results",
    "href": "part1_openMSE_GRYM_approx/3_openMSE_sims/openmse_sims.html#results",
    "title": "3  openMSE-Grym Approximation",
    "section": "3.5 Results",
    "text": "3.5 Results\n\n\nCode\n# ----------------------------\n#  Read-in relevant outputs\n# ----------------------------\n# import scenario key\nscenarios_key <- read_rds(\"../part1_shared_files/inputs/scenarios_key.rds\") |>\n  rename(scen_id = scenario_id)\n\n# read in grym projections under each scenario, for a subset of gamma\ngrym_scen_outputs_sub <- read_rds(\"../part1_shared_files/outputs/grym/grym_scen_outputs_sub.rds\")\n\n# subset of gammas to display in plots\ngamma_subset <- unique(grym_scen_outputs_sub$Gamma)\n\n# Grym gamma estimates\ngrym_gammas_tbl <- read_rds(\"../part1_shared_files/outputs/grym/grym_gammas_tbl.rds\") |>\n  mutate(across(-scenario_id, as.numeric)) |>\n  mutate(across(c(Gamma_1, Gamma_2), ~if_else(is.infinite(.), 0, .))) |>\n   rename(scen_id = scenario_id, gamma1 = Gamma_1, gamma2 = Gamma_2, selected_gamma = Gamma_choice)\n\n# openmse \nopenmse_scen_metrics <- read_rds(\n  fs::path(results_path, \"openmse_2yrhst_dynB0_dynSSB0_scen_metrics.rds\")\n  #fs::path(results_path, \"openmse_100yrhst_dynB0_dynSSB0med_scen_metrics.rds\")\n)\n\n# open mse gamma estimates\nopenmse_scen_gamma_select <- read_rds(\n  fs::path(results_path, \"openmse_2yrhst_dynB0_dynSSB0_scen_gamma_select.rds\")\n  #fs::path(results_path, \"openmse_100yrhst_dynB0_dynSSB0med_scen_gamma_select.rds\") \n)\n\n\n\n\n\n\n3.5.1 Spawning stock trajectories\nSimulated trajectories of spawning Stock Status (\\(SSS\\)) across the projecting period are presented in Figure 3.1. As expected, trajectories show an increasing proportion of simulations in which \\(SSB\\) drops bellow 20% of \\(SSB_0\\) as the level of harvesting \\(\\gamma\\) increases. Consistent with the Grym analysis (Figure 2.1), there is greater variability in the \\(SSS\\) trajectories across simulations in scenarios scen-3 to scen-8, reflecting the higher variance in simulated recruitment and natural mortality in those scenarios. Consequently, a substantial portion of simulations show stock depletion levels falling below the critical 20% threshold at low levels of fishing pressure (including when fishing is not present, i.e. \\(\\gamma = 0\\)).\n\n\nCode\n# plots of simulated SSS across years, for each scenario under a subset of gammas\n# SSS trajectories that go below 0.2 are signaled in green\np <- openmse_scen_ssb |>\n  filter(gamma %in% gamma_subset) |>\n  ggplot(aes(x = Year, y = SSS, group = sim)) +\n  geom_path(\n    data = ~filter(.x, below_dpl == FALSE), \n    alpha = 0.8, \n    color = \"gray75\", \n    linewidth = 0.3\n  ) +\n  geom_path(\n    data = ~filter(.x, below_dpl == TRUE), \n    alpha = 0.8, \n    color = frmwk_colours[\"openMSE\"], \n    linewidth = 0.3\n  ) +\n  geom_hline(yintercept = c(0.2), linetype = \"dashed\") +\n  scale_y_sqrt() +\n  guides(colour=\"none\") +\n  labs(y = expression(paste(\"Spawning stock status (SSB/\", SSB[0], \")\"))) +\n  facet_grid(rows = vars(scen_id), cols = vars(gamma), scales = \"free_y\")\n\n\nggsave(\n  plot = p, \n  filename = \"../part1_shared_files/outputs/openmse/openmse_fig_SSS_trajectories_gammas_scens.png\", \n  #filename = \"../part1_shared_files/outputs/openmse/openmse_fig_SSS_trajectories_gammas_scens_2.png\", \n  width = 8, \n  height = 9\n)\n\n\n\n\n\n\nFigure 3.1: Simulated trajectories of spawning stock status over time, for each scenario (rows) under a subset of the considered \\(\\gamma\\) values (columns). Dashed line indicates the depletion threshold (0.2). Trajectories that fall below the 0.2 critical depletion threshold are signaled in blue.\n\n\n\n\n\nFigure 3.2 compares the distributions of simulated spawning stock biomass at a two time points: before exploitation (Year 0, \\(SSB_0)\\) and after a 20-year period of harvesting (\\(SSB_Y\\)). The comparison is shown for a selection of annual harvest rates \\(\\gamma\\) considered in the analysis. As expected, the decline of \\(SSB_Y\\) relative to \\(SSB_0\\) becomes more pronounced as the value of \\(\\gamma\\) increases.\nIn line with the Grym analysis, plots in Figure 3.2 also highlight the effects of high variability in recruitment and natural mortality in projected stock escapement levels. Simulations conducted under scenarios scn-3 to scn-8, which are based on Proportional Recruitment estimates yielding higher variance in simulated values of \\(M\\) and \\(R\\), return median \\(SSB_Y\\) estimates that are below 75% of the median \\(SSB_0\\) at lower \\(\\gamma\\) values, in contrast to simulations conducted under scenarios scn-1 and scn-2.\n\n\nCode\n# get simulated values of SSB0 and SSB in final year of the projection\nspawners <- openmse_scen_ssb |>\n  filter(\n    gamma %in% gamma_subset,\n    Year %in% max(Year)\n  ) |>\n  select(scen_id, sim, gamma, SSB, SSB0) |>\n  pivot_longer(cols = c(SSB , SSB0), names_to = \"metric\") |>\n  mutate(\n    metric = if_else(metric == \"SSB\", \"SSBY\", metric),\n    Year = if_else(metric == \"SSBY\",  \"20\", \"0\")\n    )\n\n# compute medians SSB0 and SSB across all simulations , under each scenario\nmed_spawners <- spawners |>\n  group_by(scen_id, metric, Year, gamma) |>\n  summarise(medians = median(value), .groups = \"drop\") \n\n# Compute escapement threshold value, i.e. 75% of median SSB0)\n# Note: values are constant across gammas, as simulated SSB0s are held constant\n# across gamma-specific projections.\nesc_thresh <- med_spawners |>\n  filter(metric == \"SSB0\") |>\n  mutate(esc_thrs = medians*0.75)\n\np2 <- spawners |>\n  ggplot(aes(x = Year, y = value)) +\n  ggdist::stat_interval() +\n  geom_point(data = med_spawners, aes(y = medians)) +\n  geom_hline(data = esc_thresh, aes(yintercept = esc_thrs), linetype = \"dashed\") +\n  facet_grid(scen_id ~ gamma, scales = \"free\") +\n  labs(y = \"Spawning Biomass\" ) +\n  scale_color_brewer(palette = \"Blues\", name = \"Quantile Interval (prob)\") +\n  theme(legend.position=\"bottom\")\n\nggsave(\n  plot = p2, \n  filename = \"../part1_shared_files/outputs/openmse/openmse_SSB0_SSBY_dstbn_scens.png\", \n  #filename = \"../part1_shared_files/outputs/openmse/openmse_SSB0_SSBY_dstbn_scens_2.png\", \n  width = 8, \n  height = 9\n)\n\n\n\n\n\n\nFigure 3.2: Quantile intervals (blue bars) and medians (dots) of simulated pre-explotation spawining biomass (Year 0) and spawning biomass at the final year of the projection (Year 20), across a subset of \\(\\gamma\\) values (columns) for each scenario (rows). Dashed lines indicate the critical escapement threshold (i.e. 75% of median SSB0).\n\n\n\n\n\n\n\n3.5.2 Depletion probability and Escapement levels versus \\(\\gamma\\) values\nAn overall view of the potential impact of various fixed annual harvest rates on the health of the stock, measured in terms of depletion probability and escapement levels, is shown in Figure 3.3. Main findings follow broadly those found in the Grym analysis, e.g.:\n\nFor scenarios scn-3, scn-4, scn-7 and scn-8, probability of depletion would be substantially above the 10% critical limit even in the absence of fishing (i.e. \\(\\gamma = 0\\)). In the remaining scenarios, depletion probability would remain under the 10% critical limit for \\(\\gamma\\) values up to approximately 0.05 (scn-6) and 0.1 (scn-1).\n\\(\\gamma\\) values at which the stock is maintained at escapement levels above the critical 75% threshold also vary markedly between input scenarios. Scenario scn-8 simulates a stock with high vulnerability to fishing pressure, only able to sustain escapement levels above the critical point for harvest rates up to 1.5% of \\(B_0\\). On the other hand, under scenario scn-1, simulations suggest that the stock would remain above 75% escapement levels if the harvest rates are kept at least below 8% of \\(B_0\\).\nPlots also show the effect of using alternative maturity ogives in the simulations, as evidenced by the separation between the pairs of scenarios scn-1 & scn-2, scn-3 & scn-4, etc. In comparison with scenarios under the maturity ogive mat-2021, those using the mat-2010 maturity ogive (scn-1, scn-3, scn-5, and scn-7) would cope with higher levels of \\(\\gamma\\) before dropping into unsustainable levels of depletion risk and escapement.\n\n\n\nCode\n# Plot for depletion probability under considered gammas\np_dpl <- plot_gammas_vs_rule(\n  dt = openmse_scen_metrics, \n  gamma = gamma, \n  rule_value = PD, \n  scen = scen_id,\n  thresh = 0.1, \n  ylab = \"Pr[min(SSB/SSB0) < 0.2] (Years 1 - 20)\", \n  xlab = expression(gamma),\n  title = \"Depletion\", \n  scen_label = \"Scenario ID\"\n  )\n\n# Plot for escapement level under considered gammas\np_esc <- plot_gammas_vs_rule(\n  dt = openmse_scen_metrics, \n  gamma = gamma, \n  rule_value = ESC, \n  scen = scen_id, \n  thresh = 0.75,\n  title = \"Escapement\", \n  ylab = \"med(SSB)/med(SSB0) in Final Year\",\n  xlab = expression(gamma),\n  scen_label = \"Scenario ID\"\n  )\n\np_dpl/p_esc + plot_layout(guides = 'collect')\n\n\n\n\nFigure 3.3: Depletion probabilities and escapement levels at considered harvest rates \\(\\gamma\\) under each scenario. Horizontal dashed lines indicate the 10% probability limit of the depletion rule (top plot) and the 75% critical threshold of the escapement rule (bottom plot).\n\n\n\n\n\n\n\n3.5.3 Estimated \\(\\gamma_p\\) under each input scenario\nTable 3.1 shows the precautionary harvest rate \\(\\gamma_p\\) estimated under the openMSE framework for each input scenario based on the 3-stage decision rule (Section 2.1).\nSimilarly to the results obtained under the Grym approach, the magnitude of \\(\\gamma_p\\) estimates across the considered input scenarios is strongly influenced by the chosen Proportional Recruitment scenario. Scenarios using PR estimates reflecting lower variability and uncertainty in yearly recruitment (\\(R\\)) and \\(M\\) (scn-1 & scn-2 under PR-emm21) produced the highest estimates \\(\\gamma_p\\), based on the escapement rule (\\(\\gamma_2\\)). In contrast, scn-3, scn-4, scn-7 and scn-8, using PR estimates conveying the highest variability in \\(R\\) (PR-amlr and PR-amlr-haul), returned \\(\\gamma_p\\) estimates of 0 based on the depletion rule (\\(\\gamma_1\\)). Therefore, under these scenarios, current management objectives would not be satisfied even in the absence of fishing.\nThe effect of maturity-at-length on \\(\\gamma_p\\) estimates is also evident, with scenarios employing the mat-2021 ogive yielding lower estimates of \\(\\gamma_p\\) compared to scenarios using the mat-2010 ogive. Under the mat-2021 ogive, the relatively higher proportion of immatures being vulnerable to fishing accelerates the decline of \\(SSB\\) from \\(SSB_0\\), returning more conservative \\(\\gamma_p\\) estimates.\n\n\nCode\n# gammas in math format\ngamma_symb <- c(\"\\\\gamma_1\", \"\\\\gamma_2\", \"\\\\gamma_p\")\n\nopenmse_scen_gamma_select |>\n  select(-contains(\"approx\")) |>\n  mutate(across(-scen_id, as.numeric)) |>\n  mutate(across(c(gamma1, gamma2), ~if_else(is.infinite(.), 0, .))) |>\n  left_join(scenarios_key, by = \"scen_id\") |>\n  relocate(gamma1:selected_gamma, .after = last_col()) |>\n  mutate(gamma_p = pmin(gamma1, gamma2)) |>\n  select(-selected_gamma) |>\n  flextable() |>\n  set_table_properties(width = 0.8, layout = \"autofit\") |>\n  #bold(j = ~ gamma_p) |>\n  bold(j = ~ gamma1, i = ~ gamma1 < gamma2) |>\n  bold(j = ~ gamma2, i = ~ gamma2 < gamma1) |>\n  vline(j = ~ gamma2, border = fp_border_default(width = .5)) |>\n  bg(j = ~ gamma_p, bg = \"#E1F5FE\", part = \"all\") |>\n  set_header_labels(\n    scenario_id = \"Scenario ID\",\n    pr_scen_id = \"PR Scenario ID\",\n    mat_scen_id = \"Maturity ID\"\n  ) |>\n  width(j = ~ gamma1 + gamma2 + gamma_p, width = 10) |>\n  compose(j = ~ gamma1 + gamma2 + gamma_p, \n          part = \"header\", \n          value = as_paragraph(as_equation(gamma_symb))) |>\n  align(j = ~ gamma1 + gamma2 + gamma_p, align = \"center\")\n\n\n\n\nTable 3.1:  Estimated precautionary harvest rate under each inputs scenario scen_idPR Scenario IDMaturity ID\nγ1\\gamma_1γ1​\nγ2\\gamma_2γ2​\nγp\\gamma_pγp​scn-1PR-emm21mat-20100.10000.09000.0900scn-2PR-emm21mat-20210.06750.06500.0650scn-3PR-amlrmat-20100.00000.04250.0000scn-4PR-amlrmat-20210.00000.02500.0000scn-5PR-atlantidamat-20100.07000.07500.0700scn-6PR-atlantidamat-20210.05250.06500.0525scn-7PR-amlr-haulmat-20100.00000.02750.0000scn-8PR-amlr-haulmat-20210.00000.01500.0000\n\n\n\n\n\n3.5.4 Comparison between Grym and openMSE results\nProjections of spawning stock status (\\(SSS\\)) simulated under the Grym implementation (obtained in Chapter 2) and the openMSE approach, for the considered input scenarios, are compared in Figure 3.4 and Figure 3.5. Key findings include:\n\nOpenMSE simulations demonstrate higher variability (i.e. greater uncertainty) in the annual \\(SSS\\) estimates compared to the Grym approach. This is evident from the wider 90% quantile intervals observed in the openMSE results.\nThe difference in dispersion between the two frameworks is more pronounced in scenarios scn-3, scn-4, scn-7 & scn-8, which are characterized by PR estimates with higher variability in \\(R\\).\nMoreover, for scenarios scn-3, scn-4, scn-7 & scn-8, dispersion levels estimated by the Grym implementation tend to decrease over the projection period at higher \\(\\gamma\\) values, while dispersion remains stable in the openMSE simulations. This discrepancy may be attributed to the recruitment depletion penalization applied in Grym, which is not incorporated in the openMSE implementation (see Section 3.2.2).\nSimilarity between the two frameworks in terms of median annual \\(SSS\\) is primarily determined by the chosen PR scenario. For instance, in scenarios scn-1 and scn-2 (under PR-emm21), the two implementations return matching trajectories of median \\(SSS\\) up to harvest rates of \\(\\gamma = 0.05\\), while for scn-5 and scn-6 (under PR-atlantida) the proximity in trajectories extends to harvest rates up to \\(\\gamma = 0.12\\). However, in the remaining scenarios (under PR-amlr and PR-amlr-haul), the separation between the two frameworks occurs at lower harvest rates.\nThe impact of the recruitment depletion penalization is also evident in the median \\(SSS\\) trajectories in scenarios scn-3, scn-4, scn-7 & scn-8, where the decay in the projected median \\(SSS\\) is faster under the Grym approach.\n\n\n\n\n\nThe degree of impact of alternative maturity ogives on median \\(SSS\\) projections appears to vary between frameworks as well. The differences in trajectories between scenarios using contrasting maturity ogives (e.g. scn-1 & scn-2, scn-3 & scn-4, etc) are more pronounced under the openMSE approach. This discrepancy is likely attributed to the difference in the computation of \\(SSB\\) between the two frameworks. Grym calculates \\(SSB\\) at a specific fraction of the year (“Spawning season”: days 76 to 138; Table 2.2) during which the stock biomass peaks due to peak individual growth. As a result, Grym tends to produce higher estimates of \\(SSB\\) compared to the openMSE implementation, which estimates \\(SSB\\) at the start of the year.\n\n\n\nCode\ngrym_scen_SSS <- grym_scen_outputs_sub |>\n  rename(scen_id = scenario_id, sim = Run, gamma = Gamma) |>\n  select(scen_id, sim, gamma, Year, SSS) |>\n  mutate(Framework = \"Grym\") |>\n  filter(Year != 0)\n\nopenmse_scen_SSS <- openmse_scen_ssb |>\n  filter(gamma %in% gamma_subset) |>\n  select(scen_id, sim, gamma, Year, SSS) |>\n  mutate(Framework = \"openMSE\")\n\nfrmwk_scen_SSS <- bind_rows(grym_scen_SSS, openmse_scen_SSS) \n\n# Plot projections of spawning stock status under each gamma, across input\n# scenarios\np_SSS_proj_frmwk <- frmwk_scen_SSS |>\n  #filter(scen_id == \"scn-1\", gamma == 0) |>\n  group_by(scen_id, Year, gamma, Framework) |>\n  median_qi(SSS, .width = 0.9) |>\n  ggplot(aes(x = Year, y = SSS, fill = Framework, color = Framework)) +\n  geom_lineribbon(aes(ymin = .lower, ymax = .upper), alpha = 1/3, linewidth = 0.3) +\n  geom_line(linewidth = 0.3) +\n  scale_fill_manual(values = frmwk_colours) +\n  scale_colour_manual(values = frmwk_colours) +\n  facet_grid(scen_id ~ gamma, scales = \"free\") +\n  labs(y = expression(paste(\"Spawning stock status (SSB/\", SSB[0], \")\"))) +\n  theme(legend.position=\"bottom\")\n\nggsave(\n  plot = p_SSS_proj_frmwk, \n  filename = \"../part1_shared_files/outputs/plot_openMSE_vs_Grym_SSS_traject_scens.png\",\n  #filename = \"../part1_shared_files/outputs/plot_openMSE_vs_Grym_SSS_traject_scens_2.png\", \n  width = 8, \n  height = 11\n)\n\np_med_SSS_proj_frmwk <- frmwk_scen_SSS |>\n  #filter(scen_id == \"scn-1\", gamma == 0) |>\n  group_by(scen_id, Year, gamma, Framework) |>\n  summarise(med_SSS = median(SSS), .groups = \"keep\") |>\n  ggplot(aes(x = Year, y = med_SSS, colour = Framework)) +\n  geom_line() +\n  scale_colour_manual(values = frmwk_colours) +\n  facet_grid(scen_id ~ gamma, scales = \"fixed\") +\n  labs(y = expression(paste(\"Spawning stock status (SSB/\", SSB[0], \")\"))) +\n  theme(legend.position=\"bottom\")\n\nggsave(\n  plot = p_med_SSS_proj_frmwk, \n  filename = \"../part1_shared_files/outputs/plot_openMSE_vs_Grym_med_SSS_traject_scens.png\",\n  #filename = \"../part1_shared_files/outputs/plot_openMSE_vs_Grym_med_SSS_traject_scens_2.png\", \n  width = 8, \n  height = 8\n)\n\n\n\n\n\n\nFigure 3.4: Median (solid lines) and 90% intervals (shaded ribbons) of simulated projections of Spawning Stock Status under the openMSE and Grym frameworks, for considered input scenarios (rows) and a subset of \\(\\gamma\\) values.\n\n\n\n\n\n\n\n\n\nFigure 3.5: Median of simulated annual Spawning Stock Status in the projection period under the openMSE and Grym frameworks, for the considered input scenarios (rows) and a subset of \\(\\gamma\\) values.\n\n\n\n\n\nThe estimated harvest rates satisfying the depletion (\\(\\gamma_1\\)) and escapement (\\(\\gamma_2\\)) decision rules are compared between the two frameworks in Figure 3.6.\nIn general, the openMSE implementation tends to produce estimates of \\(\\gamma_1\\) and \\(\\gamma_2\\) that are either slightly lower (scn-1, scn-2, scn-5 and scn-6) or identical (scn-4 and scn-8) to those estimated by the Grym implementation. For scenarios scn-3 and scn-7, the estimates of \\(\\gamma_2\\) obtained in openMSE are marginally higher than those obtained in Grym. This reflects the faster decline in median \\(SSS\\) trajectories under Grym, as observed and discussed in Figure 3.5.\nThere is no clear pattern regarding the impact of alternative maturity ogives on \\(\\gamma_1\\) and \\(\\gamma_2\\) estimates from the two frameworks.\n\n\nCode\nopenmse_gammas_est <- openmse_scen_gamma_select |>\n  mutate(Framework = \"openMSE\")\n\ngrym_gammas_est <- grym_gammas_tbl |>\n  mutate(Framework = \"Grym\")\n\nfrmwk_gammas_est <- bind_rows(openmse_gammas_est, grym_gammas_est)\n\ngamma_support_tbl <- expand_grid(\n  Framework = c(\"openMSE\", \"Grym\"),\n  gamma = grym_setups$gamma[[1]]\n)\n\nfrmwk_gammas_est |>\n  pivot_longer(cols = c(gamma1, gamma2), names_to = \"gamma_type\") |>\n  ggplot(aes(x = Framework, y = value)) +\n  #geom_point(data = gamma_support_tbl, aes(x = Framework, y = gamma), size = 0.5, color = \"gray80\") +\n  geom_point(data = gamma_support_tbl, aes(x = Framework, y = gamma), size = 1, color = \"gray50\", shape = \"|\") +\n  geom_point(aes(color = gamma_type, group = gamma_type), size = 2) +\n  geom_line(aes(color = gamma_type, group = gamma_type)) +\n  labs(\n    y = expression(paste(\"Harvest rate (\", gamma, \")\")),\n    x = NULL,\n    color = expression(paste(\"Type of \", gamma))\n    ) +\n  scale_colour_manual(values = c(\"#AFB42B\", \"#FF8F00\"), name = \"Harvest Rule\",\n                    labels = expression(gamma[1], gamma[2])) +\n  facet_wrap(~scen_id, ncol = 2) +\n  theme(legend.position=\"bottom\") +\n  coord_flip()\n\n\n\n\nFigure 3.6: openMSE an Grym estimates of harvest rates complying with the depletion rule (\\(\\gamma_1\\)) and the escapement rule (\\(\\gamma_2\\)) for each of the considered input scenarios. Vertical gray ticks represent the values of \\(\\gamma\\) considered for the analysis.\n\n\n\n\n\nTherefore, and considering the estimates of precautionary harvest rates presented in Table 3.2, results indicate a reasonable level of agreement between the two approaches across the considered input scenarios. The implemented openMSE-Grym approximation is capable of producing estimates of \\(\\gamma_p\\) that are either identical or within a range of 1.25 - 2.25 percentage points lower than those obtained under the Grym’s base-case implementation.\n\n\nCode\ngamma_symb <- c(\"\\\\gamma_p^{openMSE}\", \"\\\\gamma_p^{Grym}\")\n\nfrmwk_gammas_est |>\n  group_by(scen_id, Framework) |>\n  mutate(gamma_p = pmin(gamma1, gamma2)) |>\n  pivot_wider(id_cols = scen_id,names_from = Framework, values_from = gamma_p) |>\n    left_join(scenarios_key, by = \"scen_id\") |>\n  relocate(pr_scen_id:mat_scen_id, .after = scen_id) |>\n  flextable() |>\n  set_table_properties(width = 0.75, layout = \"autofit\") |>\n  set_header_labels(\n    scenario_id = \"Scenario ID\",\n    pr_scen_id = \"PR Scenario ID\",\n    mat_scen_id = \"Maturity ID\"\n  ) |>\n  compose(j = ~ openMSE + Grym, \n          part = \"header\", \n          value = as_paragraph(as_equation(gamma_symb))) |>\n  align(j = ~ openMSE + Grym, align = \"center\")\n\n\n\n\nTable 3.2:  Estimated precautionary harvest rates under the openMSE and Grym frameworks for the considered input scenarios. scen_idPR Scenario IDMaturity ID\nγpopenMSE\\gamma_p^{openMSE}γpopenMSE​\nγpGrym\\gamma_p^{Grym}γpGrym​scn-1PR-emm21mat-20100.09000.1075scn-2PR-emm21mat-20210.06500.0900scn-3PR-amlrmat-20100.00000.0000scn-4PR-amlrmat-20210.00000.0000scn-5PR-atlantidamat-20100.07000.0775scn-6PR-atlantidamat-20210.05250.0675scn-7PR-amlr-haulmat-20100.00000.0000scn-8PR-amlr-haulmat-20210.00000.0000"
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/3_openMSE_sims/openmse_sims.html#discussion",
    "href": "part1_openMSE_GRYM_approx/3_openMSE_sims/openmse_sims.html#discussion",
    "title": "3  openMSE-Grym Approximation",
    "section": "3.6 Discussion",
    "text": "3.6 Discussion\nThe main objective of this analysis was to replicate the estimation of precautionary harvest rates for the Antarctic Krill, as currently performed under the Grym framework (D. Maschette et al. 2020; D. Maschette et al. 2021), using the R package {openMSE} (Hordyk, Huynh, and Carruthers 2021). In order to achieve this, the components of openMSE (i.e. Operating Model, Management Procedures and Performance Metrics) were configured to approximate the modelling features of the Grym approach, as specified in CCAMLR’s base-case implementation for the Krill fishery. The effectiveness of the approximation was assessed by applying the openMSE implementation across a set of eight model input scenarios. These scenarios were designed to capture variations in Proportional Recruitment estimates (i.e. natural mortality, \\(M\\), and recruitment variability, \\(CV_R\\)), as well as alternative maturity ogive curves. Each of these scenarios were also used in Grym simulations in a concurrent analysis (Chapter 2). By comparing the results obtained from openMSE with those from Grym under the same set of scenarios, we can examine the suitability of the openMSE framework to the Krill fishery.\nResults revealed that the implemented openMSE approximation was able to generate estimates of precautionary harvest rates \\(\\gamma_p\\) that were either identical or reasonably close to those obtained under the Grym implementation, for the considered input scenarios. Discrepancies in the \\(\\gamma_p\\) estimates, as well as in the inherent estimates of harvest rates satisfying the depletion (\\(\\gamma_1\\)) and the escapement (\\(\\gamma_2\\)) rules, suggest that the openMSE approximation tends to yield slightly more conservative harvest rates than the Grym approach.\nDiscrepancies observed in results are likely due to fundamental structural differences between the two frameworks (see Section 3.2) that could not be addressed in the present analysis. For example, the absence of the recruitment depletion factor, the additional 2-year historical period under stochasticity, and the difference in the estimation of \\(SSB_0\\) are all contributing factors for higher variability in openMSE simulations, increasing the chances of stock depletion falling below the critical threshold level and consequently leading to lower estimates of \\(\\gamma_1\\). On the other hand, openMSE is unable to approximate fine-scale temporal dynamics required for the calculation of key stock parameters at specific fractions of the year. For instance, Grym estimates \\(SSB\\) specifically for the spawning season which, given the growth period under assumption, results in higher \\(SSB\\) estimates compared to those calculated at the start of the year, as is the case with an annual model like openMSE. Consequently, Grym projections tend to return higher levels of escapement for the same level of exploitation, leading to higher estimates of \\(\\gamma_2\\).\n\nThe openMSE framework is still under active development, and it is possible that some of the missing Grym features could be incorporated with relative ease. However, increasing the temporal resolution to sub-year levels poses a significant technical challenge that would require substantial effort and development to implement.\nThe key strength of the openMSE framework is its capability to provide a comprehensive infrastructure to explore, evaluate and compare the performance of alternative management strategies. Furthermore, through its core package {DLMtool} (Carruthers and Hordyk 2018), openMSE offers a range of Management Strategies tailored for data-limited populations, further enhancing its applicability to the Antarctic Krill fishery.\nThis analysis demonstrates that the implemented openMSE approximation is able to produce results that are fairly aligned with those obtained under the modelling framework currently adopted for the management of the Krill fishery. These findings instill confidence in the validity and reliability of the openMSE framework for conducting Management Strategy Evaluation (MSE) analysis for the Antarctic Krill.\nWhich is what we focus on next!"
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/3_openMSE_sims/openmse_sims.html#supplementary-code",
    "href": "part1_openMSE_GRYM_approx/3_openMSE_sims/openmse_sims.html#supplementary-code",
    "title": "3  openMSE-Grym Approximation",
    "section": "3.7 Supplementary Code",
    "text": "3.7 Supplementary Code\n\n3.7.1 Operating Model builder function\n#' ------------------------------------------------------------------------------\n#'  Build OM object that approximates Krill's Grym base case implementation\n#' ------------------------------------------------------------------------------\n#' \n#' This function allows to create Operating Models configured to approximate the\n#' base case of krill fishery assessment implemented under the Grym framework\n#' (https://github.com/ccamlr/Grym_Base_Case/tree/Simulations)\n#'\n#' Within the Grym-approximated configuration, the function allows to specifying\n#' alternative input values for stock parameters such as M, maturity,\n#' selectivity, etc. In this way, it is a convenience function to generate\n#' multiple OMs for alternative input scenarios.\n#'\n#' The two OM components that are configurable are the 'Stock' and 'Fleet'\n#' objects\n#'\n#' --------------------------------------------------------------------------------\n\n\nbuild_OM_grym_approx <- function(om_name, maxage, \n                                 Linf, K, t0, mat50Min, mat50Max, matrange, \n                                 sel50Min, sel50Max, selrange, a, b, \n                                 M_draws, RCV_draws,\n                                 n_iter, proj_yrs, maxF, seed = 1001){\n  \n  require(openMSE)\n  \n  # ---------------------------------- #\n  #           Stock Object\n  # ---------------------------------- #\n  # class?Stock\n  \n  krill_stock <- new(\"Stock\")\n  \n  krill_stock@Name <- \"krill_stock\"\n  krill_stock@Common_Name <- \"Antarctic Krill\"\n  krill_stock@Species <- \"Euphausia superba\"\n  # krill assumed to not live past 7 years-old\n  krill_stock@maxage <- maxage\n  # arbitrary value number of individuals of age-0 recruitment to the population\n  krill_stock@R0 <- 1\n  # M undefined as it will be provided as random draws via `cpars`\n  krill_stock@M <- numeric(0) \n  # M constant over time\n  krill_stock@Msd <- 0\n  # approximation to Grym approach, where simulated recruitment is reduced when\n  # population falls below depletion levels (i.e. SSB = 0.2 x SSB0)\n  krill_stock@h <- c(0.90, 0.95)\n  # Beverton Holt relationship\n  krill_stock@SRrel <- 1\n  # M undefined as it will be provided as random draws via the `cpars` slot\n  krill_stock@Perr <- numeric(0)\n  # no autocorrelation between consecutive recruitments\n  krill_stock@AC <- c(0, 0)\n  # l@a - Linf assumed as known, as in Grym, from Constable and de la Mare (1996)\n  krill_stock@Linf <- c(Linf,\tLinf)\n  # l@a - no inter-annual variation in Linf\n  krill_stock@Linfsd <- c(0, 0)\n  # l@a - k assumed as known, as in Grym, from Thanassekos et al (2021)\n  krill_stock@K <- c(K,\tK)\n  # l@a - no inter-annual variation in k\n  krill_stock@Ksd <- c(0, 0)\n  # l@a - t0 assumed as known, as in Grym, from Thanassekos et al (2021)\n  krill_stock@t0 <- c(t0, t0)\n  # l@a - low variation in length-at-age, assumed as known\n  krill_stock@LenCV <-\tc(0.01,\t0.01)\n  # m@l - mid-point of maturity-at-size, from Maschette et al. (2021)\n  krill_stock@L50 <- c(mat50Min,\tmat50Max)\n  # m@l - Difference in lengths between 50% and 95% maturity - based on width of ogive\n  # ramp, as provided by Maschette et al (2021)\n  L50 <- mat50Min # arbitrary as ogive width is treated as independent of L50 in Maschette et al (2021)\n  L95 <- qunif(0.95, L50 - matrange/2, L50 + matrange/2)\n  krill_stock@L50_95 <- c(L95 - L50 ,\tL95 - L50 )\n  # m@l - current stock depletion\n  krill_stock@D <- c(1, 1)\n  # w@l - a assumed as known, as in Grym, from CCAMLR (2000)\n  krill_stock@a <- a\n  # w@l - a assumed as known, as in Grym, from CCAMLR (2000)\n  krill_stock@b <- b\n  # areas of equal size\n  krill_stock@Size_area_1 <- c(0.5, 0.5)\n  # equal fraction of unfished biomass in two areas\n  krill_stock@Frac_area_1 <- c(0.5, 0.5)\n  # 50% chance of individuals remaining in area\n  krill_stock@Prob_staying <- c(0.5, 0.5)\n  # Zero discard mortality rate as discards are assumed non-existent\n  krill_stock@Fdisc <- c(0, 0) # c(1, 1)\n  # undefined since there are multiple sources\n  krill_stock@Source <- character(0)\n  \n  \n  # ---------------------------------- #\n  #           Fleet Object\n  # ---------------------------------- #\n  # class?Fleet\n  \n  krill_fleet <- new(\"Fleet\")\n  \n  krill_fleet@Name <- \"krill_fleet\"\n  # Minimum allowed number of years\n  krill_fleet@nyears <- 2\n  # final year of historic period\n  krill_fleet@CurrentYr <- 2022\n  # Arbitrary value for grym approximation - at least 1 value required\n  krill_fleet@EffYears <- 1\n  # stock remains unfished over historical period\n  krill_fleet@EffLower <- 0\n  krill_fleet@EffUpper <- 0\n  krill_fleet@Esd <- c(0, 0)\n  # No change in mean gear efficiency over projection years, as in Grym\n  krill_fleet@qinc <- c(0, 0)\n  # no inter-annual variability in gear efficiency over projection years, as in Grym\n  krill_fleet@qcv <- c(0, 0)\n  # Shortest lt at which 5% of fish of that length-class are selected by fishery,\n  # based on data from Thanassekos et al (2021)\n  L50 <- c(sel50Min, sel50Max)\n  L5 <- qunif(0.05, L50 - selrange/2, L50 + selrange/2)\n  krill_fleet@L5 <- L5\n  # Shortest length at which 100% of fish of that length are selected by the fishery\n  krill_fleet@LFS <- L50 + selrange/2\n  # All krill selected at Linf\n  krill_fleet@Vmaxlen <- c(1, 1)\n  # selectectivity in absolute size\n  krill_fleet@isRel <- FALSE\n  # no discards - i.e. all individuals selected by the gear are retained\n  krill_fleet@LR5 <- c(0, 0)  # L5\n  krill_fleet@LFR <- c(0, 0)  #LFS\n  # All krill retained at Linf\n  krill_fleet@Rmaxlen <- c(1, 1)\n  # No discards\n  krill_fleet@DR <- c(0, 0)\n  # fishing effort allocated across areas in proportion to the population density of that area\n  krill_fleet@Spat_targ <- c(1, 1)\n  # No MPA\n  krill_fleet@MPA <- FALSE\n  \n  \n  # ---------------------------------- #\n  #           Obs Object\n  # ---------------------------------- #\n  # class?Obs\n  \n  # The Obs component is irrelevant for the approximation with GRYM, as specified\n  # MPs (one for each level of harvest rate 'gamma') don't require\n  # observed/sampled data from the fishery. So assigning 0s to all slots\n  \n  krill_obs <- new(\"Obs\")\n  krill_obs@Name <- \"No bias and no observational errors\"\n  krill_obs@Cobs <- c(0, 0)\n  krill_obs@Cbiascv <- 0\n  krill_obs@CAA_nsamp <- c(0, 0)\n  krill_obs@CAA_ESS <- c(0, 0)\n  krill_obs@CAL_nsamp <- c(0, 0)\n  krill_obs@CAL_ESS <- c(0, 0)\n  krill_obs@Iobs <- c(0, 0)\n  krill_obs@Btobs <- c(0, 0)\n  krill_obs@Btbiascv <- 0\t\n  krill_obs@beta <- c(0, 0)\n  krill_obs@LenMbiascv <- 0\n  krill_obs@Mbiascv\t<- 0\t\n  krill_obs@Kbiascv\t<- 0\t\n  krill_obs@t0biascv <- 0\t\n  krill_obs@Linfbiascv <- 0\t\n  krill_obs@LFCbiascv\t<- 0\t\n  krill_obs@LFSbiascv\t<- 0\t\n  krill_obs@FMSY_Mbiascv <- 0\t\n  krill_obs@BMSY_B0biascv\t<- 0\t\n  krill_obs@Irefbiascv <- 0\t\n  krill_obs@Brefbiascv <- 0\t\n  krill_obs@Crefbiascv <- 0\t\n  krill_obs@Dbiascv\t<- 0\t\n  krill_obs@Dobs <- c(0, 0)\n  krill_obs@hbiascv\t<- 0\t\n  krill_obs@Recbiascv\t<- c(0, 0)\n  krill_obs@sigmaRbiascv <- 0\t\n  krill_obs@Eobs <- c(0, 0)\n  krill_obs@Ebiascv\t<- 0\t\n  \n  \n  \n  # ---------------------------------- #\n  #           Imp Object\n  # ---------------------------------- #\n  # class?Imp\n  \n  # To mimic Grym approach, assuming the imposed TACs are enforced perfectly -\n  # catches never exceed nor fall short of the imposed quota\n  \n  krill_imp <- MSEtool::Perfect_Imp\n  \n  \n  # ---------------------------------- #\n  #        Create Operating Model\n  # ---------------------------------- #\n  \n  krill_OM <- new(\"OM\", krill_stock, krill_fleet, krill_obs, krill_imp)\n  \n  \n  # ---------------------------------- #\n  #     Additional OM information \n  # ---------------------------------- #\n  # class?OM\n  \n  krill_OM@Name <- om_name\n  krill_OM@Agency <- \"CCAMLR\"\n  krill_OM@Region <- \"FAO Area 48\"\n  krill_OM@Sponsor <- \"Norwegian Polar Institute\"\n  krill_OM@Latitude <- -60\n  krill_OM@Longitude <- -40\n  krill_OM@nsim <- n_iter\n  krill_OM@proyears <- proj_yrs\n  krill_OM@interval <- 1\n  # MPs based on the median of distribution of recommendations\n  krill_OM@pstar <- 0.5\n  krill_OM@maxF <- maxF\n  # MPs are the median value of distribution of recommendations \n  krill_OM@reps <- 1\n  krill_OM@seed <- seed\n  \n  \n  \n  # ---------------------------------- #\n  #         Custom Parameters \n  # ---------------------------------- #\n  \n  # Switch off age-plus group\n  krill_OM@cpars$plusgroup <- 0\n  # Pre-generated samples of M\n  M_draws[which(M_draws == 0)] <- 1e-5 # openMSE crashes if M == 0, so a slightly naughty work-around\n  krill_OM@cpars$M <- M_draws\n  # Pre-generated samples of Perr\n  krill_OM@cpars$Perr <- sqrt(log(RCV_draws^2 + 1)) # converting CV from PR to lognormal SD\n  # switch off depletion optimization step - thus, depletion calculated from the selectivity and pattern in F\n  krill_OM@cpars$qs <- rep(1, n_iter)\n  \n  return(krill_OM)\n}\n\n\n\n\n\n\nCarruthers, Thomas R., and Adrian R. Hordyk. 2018. “The Data-Limited Methods Toolkit (DLMtool): An R Package for Informing Management of Data-Limited Populations.” Methods in Ecology and Evolution 9 (12): 2388–95. https://doi.org/10.1111/2041-210X.13081.\n\n\nConstable, A, and W. de la Mare. 1996. “A Generalised Model for Evaluating Yield and the Long-Term Status of Fish Stocks Under Conditions of Uncertainty.” CCAMLR Science 3: 31–54.\n\n\nHordyk, Adrian, Quang Huynh, and Tom Carruthers. 2021. “openMSE: Easily Install and Load the ‘openMSE’ Packages.” R. https://CRAN.R-project.org/package=openMSE.\n\n\nKawaguchi, So. 2016. “Reproduction and Larval Development in Antarctic Krill (Euphausia Superba).” In Biology and Ecology of Antarctic Krill, edited by Volker Siegel, 225–46. Advances in Polar Ecology. Cham: Springer International Publishing. https://doi.org/10.1007/978-3-319-29279-3_6.\n\n\nKinzey, D. 2021. “Summary of Proportional Recruitment and Multiyear Biomass Variability for Krill in Subarea 48 from Research Surveys.” WG-SAM-2021/21 Rev1. CCAMLR.\n\n\nMaschette, D., S. Wotherspoon, C. Pavez, P. Ziegler, S. Thanassekos, K Reid, D Kawagushi, D Welsford, and A Constable. 2020. “Generalised R Yield Model (Grym).” Scientific Committee SC-CAMLR-39/BG/19. CCAMLR.\n\n\nMaschette, D, S Wotherspoon, S Kawaguchi, and Philippe Ziegler. 2021. “Grym Assessment for Subarea 48.1 Euphausia Superba Populations.” WG-FSA-2021/39. Hobart, Autralia: CCAMLR. https://meetings.ccamlr.org/en/wg-fsa-2021/39.\n\n\nSC-CAMLR. 2000. “Report of the Bo Workshop.” SC-CAMLR-XIX. Annex 4, Appendix G. CCAMLR.\n\n\nThanassekos, S, K Reid, S Kawaguchi, S Wotherspoon, D Maschette, P Ziegler, D Welsford, et al. 2021. “Grym Parameter Values for Subareas 48.1, 48.2 and 48.3.” WG-SAM-2021/12. CCAMLR."
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/5_appendices/krill_om_report_example.html",
    "href": "part1_openMSE_GRYM_approx/5_appendices/krill_om_report_example.html",
    "title": "4  Appendix: OM Report (scn-1)",
    "section": "",
    "text": "Constable, A, and W. de la Mare. 1996. “A Generalised Model for Evaluating Yield and the Long-Term Status of Fish Stocks Under Conditions of Uncertainty.” CCAMLR Science 3: 31–54.\n\n\nKawaguchi, So. 2016. “Reproduction and Larval Development in Antarctic Krill (Euphausia Superba).” In Biology and Ecology of Antarctic Krill, edited by Volker Siegel, 225–46. Advances in Polar Ecology. Cham: Springer International Publishing. https://doi.org/10.1007/978-3-319-29279-3_6.\n\n\nMaschette, D, S Wotherspoon, S Kawaguchi, and Philippe Ziegler. 2021. “Grym Assessment for Subarea 48.1 Euphausia Superba Populations.” WG-FSA-2021/39. Hobart, Autralia: CCAMLR. https://meetings.ccamlr.org/en/wg-fsa-2021/39.\n\n\nSC-CAMLR. 2000. “Report of the Bo Workshop.” SC-CAMLR-XIX. Annex 4, Appendix G. CCAMLR.\n\n\nThanassekos, S, K Reid, S Kawaguchi, S Wotherspoon, D Maschette, P Ziegler, D Welsford, et al. 2021. “Grym Parameter Values for Subareas 48.1, 48.2 and 48.3.” WG-SAM-2021/12. CCAMLR."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Carruthers, Thomas R., and Adrian R. Hordyk. 2018. “The\nData-Limited Methods Toolkit (DLMtool): An R Package for Informing\nManagement of Data-Limited Populations.” Methods in Ecology\nand Evolution 9 (12): 2388–95. https://doi.org/10.1111/2041-210X.13081.\n\n\nCCAMLR. 2022. “CCAMLR’s Approach to Managing the Krill Fishery.\nEuphausia Superba in Area 48.” https://fishdocs.ccamlr.org/SAreport_48_KRI_2021.pdf.\n\n\nConstable, A, and W. de la Mare. 1996. “A Generalised Model for\nEvaluating Yield and the Long-Term Status of Fish Stocks Under\nConditions of Uncertainty.” CCAMLR Science 3: 31–54.\n\n\nConstable, A, William de la Mare, David Agnew, Inigo Everson, and Denzil\nMiller. 2000. “Managing Fisheries to Conserve the Antarctic Marine\nEcosystem: Practical Implementation of the Convention on the\nConservation of Antarctic Marine Living Resources (CCAMLR).”\nICES Journal of Marine Science 57 (3): 778–91. https://doi.org/10.1006/jmsc.2000.0725.\n\n\nHordyk, Adrian, Quang Huynh, and Tom Carruthers. 2021. “openMSE:\nEasily Install and Load the ‘openMSE’ Packages.” R.\nhttps://CRAN.R-project.org/package=openMSE.\n\n\nKawaguchi, So. 2016. “Reproduction and Larval Development in\nAntarctic Krill (Euphausia Superba).” In Biology and Ecology\nof Antarctic Krill, edited by Volker Siegel, 225–46. Advances in\nPolar Ecology. Cham: Springer International Publishing. https://doi.org/10.1007/978-3-319-29279-3_6.\n\n\nKinzey, D. 2021. “Summary of Proportional Recruitment and\nMultiyear Biomass Variability for Krill in Subarea 48 from Research\nSurveys.” WG-SAM-2021/21 Rev1. CCAMLR.\n\n\nMare, W. de la. 1994. “Modelling Krill Recruitment.” CCAMLR\nScience 1.\n\n\nMaschette, D., and S. Wotherspoon. 2021. “Use of Parameters Within\nEuphausia Superba Grym Simulations.” WG-FSA-2021/40. CCAMLR.\n\n\nMaschette, D., S. Wotherspoon, C. Pavez, P. Ziegler, S. Thanassekos, K\nReid, D Kawagushi, D Welsford, and A Constable. 2020. “Generalised\nR Yield Model (Grym).” Scientific Committee SC-CAMLR-39/BG/19.\nCCAMLR.\n\n\nMaschette, D, S Wotherspoon, S Kawaguchi, and Philippe Ziegler. 2021.\n“Grym Assessment for Subarea 48.1 Euphausia Superba\nPopulations.” WG-FSA-2021/39. Hobart, Autralia: CCAMLR. https://meetings.ccamlr.org/en/wg-fsa-2021/39.\n\n\nPavez, Cassandra, Simon Wotherspoon, Dale Maschette, Keith Reid, and\nKerrie Swadling. 2021. “Recruitment Modelling for Euphausia\nSuperba Stock Assessments Considering the Recurrence of Years with Low\nRecruitment.” WG-SAM-2021/09. Hobart, Autralia: CCAMLR.\n\n\nSC-CAMLR. 2000. “Report of the Bo Workshop.” SC-CAMLR-XIX.\nAnnex 4, Appendix G. CCAMLR.\n\n\nThanassekos, S, K Reid, S Kawaguchi, S Wotherspoon, D Maschette, P\nZiegler, D Welsford, et al. 2021. “Grym Parameter Values for\nSubareas 48.1, 48.2 and 48.3.” WG-SAM-2021/12. CCAMLR."
  }
]