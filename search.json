[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Applying the Management Strategy Evaluation tool {openMSE} to the Antarctic Krill fishery case",
    "section": "",
    "text": "Preface\n[Short intro on krill and its current management]\nThe Antarctic krill fishery in FAO Area 48 is currently managed based on precautionary catch limits set by the Commission for the Conservation of Antarctic Marine Living Resources (CCAMLR).\n[Role of MSE in fisheries]\n[Main objectives]\nThis analysis aims to show how the tool openMSE can be applied to the Krill fishery under a data-limited framework.\n[Main outline]\nThe analysis is structured in two parts:\n\nPart 1: Approximate openMSE to the current management approach\nPart 2: Apply an example MSE to Krill"
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/part1.html#introduction",
    "href": "part1_openMSE_GRYM_approx/part1.html#introduction",
    "title": "Approximating openMSE/DLMTool to GRYM",
    "section": "Introduction",
    "text": "Introduction\n[background on GRYM]\n[background on openMSE]\n\nMain goal\n\nDemonstrate that the {openMSE} framework, along with its primary package {DLMTool}, is a suitable and effective tool for conducting management strategy evaluation analysis for the Antarctic Krill stock."
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/part1.html#analysis-outline",
    "href": "part1_openMSE_GRYM_approx/part1.html#analysis-outline",
    "title": "Approximating openMSE/DLMTool to GRYM",
    "section": "Analysis outline",
    "text": "Analysis outline\n\nWe use the powerful and highly customisable features of the {DLMTool} package to approximate the methodological approach currently used for the management of the krill fishery, which is based on the Generalised Yield Model (GYM) and implemented in {GRYM} package.\n(…)"
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/part1.html#simulation-scenarios",
    "href": "part1_openMSE_GRYM_approx/part1.html#simulation-scenarios",
    "title": "Approximating openMSE/DLMTool to GRYM",
    "section": "Simulation scenarios",
    "text": "Simulation scenarios\n\nWe compare results from population simulations conducted under each framework for 8 alternative sets of model inputs. These entail combinations of four different sets of Proportional Recruitment estimates and 2 sets of maturity at age estimates.\n\nwhy 4 PR scenarios? R and M are the two key sources of uncertainty modelled in GRYM (confirm this). Maschette et al showed that the choice of PR scenarios had the greatest impact on the estimated gammas.\nwhy 2 sets of size at maturity scenarios? Differences in maturity at age/length affects the fraction of spawners in the population that are vulnerable to the fishery. Under equal fishing selectivity, higher proportion of matures at lower sizes imply faster decline in SSB in relation to SSB0, which will result in different estimates of gammas.\n\n\n\n\n\n\n\n\n\n\n\n\nOut-of-the-box differences between frameworks\n\ne.g. how recruitment is modeled under each approach\n\nexecutive summary (?)"
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/1_RecCV_and_M/generate_RCV_and_M.html#introduction",
    "href": "part1_openMSE_GRYM_approx/1_RecCV_and_M/generate_RCV_and_M.html#introduction",
    "title": "1  Recruitment Variability and Natural Mortality",
    "section": "Introduction",
    "text": "Introduction\nYearly recruitment (\\(R\\)), the number of young individuals that enter the population every year, and annual natural mortality (\\(M\\)), expressing the fraction of the population dying each year from any non-fishing causes (e.g. disease, competition, predation, etc.) are key parameters in population dynamics models.\nDue to challenges in obtaining reliable estimates of krill biomass (and hence numbers) at recruitment, standard krill recruitment modelling is instead based on the proportion of recruits in the population. This method, commonly known as the Proportional Recruitment (PR) model, was firstly proposed by de la Mare (1994) and later expanded by Pavez et al. (2021).\nUsing the mean and variance of the proportion of recruits estimated from independent surveys, the PR model derives the recruitment variability (expressed as a coefficient of variance, \\(CV_R\\)) and natural mortality of the population. Estimated values of \\(M\\) and \\(CV_R\\) can subsequently be used to generate series of \\(R\\) that follow the underlying distribution of proportion of recruits (or, specifically, the odds of recruits).\nAdditionally, as PR estimates are obtained from a finite number of surveys, the PR framework also provides alternative methods to convey the natural variability and uncertainty in parameters \\(M\\) and \\(CV_R\\). These methods involve generating random draws of \\(M\\) and \\(CV_R\\) via resampling-based techniques such as parametric bootstrap or inverse probability transform (Pavez et al. (2021)).\nIn this section we generate random draws of \\(CV_R\\) and \\(M\\) under different scenarios of proportional recruitment, which will be used in population model projections at later stages of the analysis. The PR models and scenarios used here are very similar to those applied in D. Maschette et al. (2021), with the exception that the proportion of recruits is assumed to be log-Normally distributed (as opposed to inverse-Beta).\nMany of the key functions used in this analysis are available in a CCAMLR’s code repository, which provides a base-case implementation of {GRYM} for the stock assessment of the Antarctic Krill."
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/1_RecCV_and_M/generate_RCV_and_M.html#set-up-the-proportional-recruitment-scenarios",
    "href": "part1_openMSE_GRYM_approx/1_RecCV_and_M/generate_RCV_and_M.html#set-up-the-proportional-recruitment-scenarios",
    "title": "1  Recruitment Variability and Natural Mortality",
    "section": "Set-up the Proportional Recruitment Scenarios",
    "text": "Set-up the Proportional Recruitment Scenarios\nThe PR model requires the following input parameters:\n\nThe within-year natural mortality structure\nThe quantile function that defines the distribution of recruits\nThe mean and variance estimates of the proportion of recruits obtained from time-series of independent surveys, and the number of surveys conducted\nThe reference age-class to determine the proportion of recruits in model simulations\nApproximate estimates of \\(M\\) and \\(CV_R\\)\nThe number of parameter sets to generate\n\nFor the purpose of this analysis, PR scenarios are defined by a set of different recruitment proportion estimates (item 3, above). Within-year natural mortality pattern and recruits distribution (items 1 and 2, respectively) remain fixed across all scenarios.\nWe begin by reading-in estimates of recruitment proportion under each scenario, before specifying the remaining fixed parameters.\n\nLoading estimates of recruitment proportion\n\npr_scenarios <- read_xlsx(\n  path = \"../part1_shared_files/data/grym_parameter_scenarios.xlsx\", \n  sheet = \"rec_proportion_scenarios\"\n) |>\n  select(-ref) |>\n  mutate(\n    pr_scen_id = factor(pr_scen_id, levels = unique(pr_scen_id)),\n    n_surveys = as.integer(n_surveys)\n  ) \n\nScenario-specific estimates of the fraction of recruits in the population (Table 1.1) are a subset of those provided in D. Maschette et al. (2021). Estimates were calculated from different choices of survey time-series, proportion calculation method, length cut-off thresholds, sample estimates weighting, etc (check D. Maschette et al. 2021 for further details). Proportion calculation methods are detailed in D. Maschette and Wotherspoon (2021, Appendix 1).\n\n\nCode\n# table with recruitment proportion under each scenario\npr_scenarios |>\n  select(-c(independent_unit, time_period)) |>\n  relocate(pr_scen_id, Maschete_description, rprop_calc_method, data_years, further_details, mn_Rprop:sd_Rprop) |>\n  flextable() |>\n  colformat_double() |>\n  set_table_properties(width = 1) |>\n  #set_table_properties(width = 1, layout = \"autofit\") |>\n  width(j = c(1, 3, 4), width = 1.2) |>\n  width(j = c(2, 5), width = 1.5) |>\n  set_header_labels(\n    pr_scen_id = \"PR Scenario ID\",\n    data_years = \"Years of data\",\n    Maschete_description = \"Label in Maschette et al (2011)\",\n    mn_Rprop = \"Mean of recruitment proportion\",\n    sd_Rprop = \"SD of recruitment proportion\",\n    n_surveys = \"Nr of Surveys\",\n    further_details = \"Further details\",\n    rprop_calc_method = \"Calculation method\"\n  )\n\n\n\n\nTable 1.1:  Survey estimates of recruitment proportion under each scenario PR Scenario IDLabel in Maschette et al (2011)Calculation methodYears of dataFurther detailsMean of recruitment proportionSD of recruitment proportionNr of SurveysPR-emm21(1) Initial valuesMixture analysis1977-1993Initial values discussed by WG-EMM-20210.55700.126017PR-amlr(2) US-AMLR summerLength threshold (cut-off @ 36mm)1992-2011Catch weighted PR by survey, strata scaled0.40790.311820PR-atlantida(4) Atlántida surveyLength threshold (cut-off @ 36mm)2020Catch weighted PR by strata, strata scaled0.42810.11123PR-amlr-haul(6) US-AMLR summer haul-by-haulLength threshold (cut-off @ 40mm)1991-2011Catch weighted PR by haul0.36300.370021\n\n\n\n\n\nSpecify remaining parameters\nWe now specify the choices for the other model parameters, which remain unchanged across all the considered PR scenarios.\nNote: To ensure consistency in model inputs across multiple stages of the current analysis, GRYM setup parameters have been stored in an external file.\n\n# Load fixed parameters \npr_fixed_pars <- read_xlsx(\n  path = \"../part1_shared_files/data/grym_parameter_scenarios.xlsx\", \n  sheet = \"fixed_parameters\"\n) |>\n  filter(category %in% c(\"PR model\", \"Mortality\", \"Population model structure\", \"Simulation options\")) |>\n  select(parameter_tag, value) |>\n  pivot_wider(names_from = parameter_tag) |>\n  select(-c(Fmax, n.years))\n\npr_fixed_pars\n\n\n\n  \n\n\n\n\nWithin-year natural mortality pattern\nSimilarly to D. Maschette et al. (2021), assuming the impact of natural mortality is constant throughout the year.\n\n# within-year mortality option\npr_fixed_pars$M_within_year\n\n[1] \"constant\"\n\n\nCalculate the associated final row of unscaled integrated natural mortality, which is used in the PR model to compute survivals.\n\n# modelled age-classes  \nAges <- as.integer(pr_fixed_pars$first_age:pr_fixed_pars$last_age)\nn_steps <- as.integer(pr_fixed_pars$nsteps)\n  \n# Within-year natural mortality pattern\nif(pr_fixed_pars$M_within_year == \"constant\"){\n  # Assuming the impact of natural mortality is constant throughout the year\n  ms <- matrix(1, n_steps+1, length(Ages))  \n}else{\n  stop(\"Option for within-year pattern in M not identified ('constant' is the only currently available option)\")\n}\n\n# calculate the proportion of an individual time step in the year\nh <- 1/n_steps\n\n# calculate the unscaled integrate natural mortality of each age (columns)\n# through the year (rows)\nMs <- ctrapz(ms, h) \n\n# final row of the unscaled integrated natural mortality\nMsf <- final(Ms)\nMsf\n\n[1] 1 1 1 1 1 1 1\n\n\n\n\nPR quantile function\nRecruitment is assumed to follow a log-Normal distribution. This is a deviation from the approach taken in D. Maschette et al. (2021), where recruitment was assumed to be inverse-Beta distributed. The rationale behind this decision was to align simulations under {GRYM} with those in the {openMSE} framework, which assumes that recruitment process error (i.e. deviations from expected number of recruits) is log-normally distributed.\nFunctions qLogNormal() and recLogNormal() are provided here.\n\npr_fixed_pars$pr_dist\n\n[1] \"Log-Normal\"\n\n\n\n\nCode\nif(pr_fixed_pars$pr_dist == \"Log-Normal\"){\n  # quantile function of the target distribution for odds of recruitment proportion\n  qdist <- qLogNormal\n  # function to generate nr of recruits under the target distribution\n  recdist <- recLogNormal\n}else if(pr_fixed_pars$pr_dist == \"Inverse-Beta\"){\n  qdist <- qInverseBeta\n  recdist <- recInverseBeta\n} else if(pr_fixed_pars$pr_dist == \"Gamma\"){\n  qdist <- qGamma\n  recdist <- recGamma\n} else{\n  stop(\"Chosen value for distribution of odds of recruits is not valid.\")\n}\n\n\n\n\nReference age-class, number of iterations and starting values\nAs in Krill’s assessment base-case and D. Maschette et al. (2021), setting the 2nd age-class as the reference class (i.e. recruitment proportion is the fraction that the second age-class is of the population of age-class 2 and older).\n\n# reference age-class\nref_age <- as.integer(pr_fixed_pars$pr_ref_age)\n\n# number of iterations\nniter <- as.integer(pr_fixed_pars$n_iter)\n\n# Starting values, i.e. best guess estimates of M and recruitment CV\nM0 <- 0.6\nCV0 <- 1"
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/1_RecCV_and_M/generate_RCV_and_M.html#generate-parameter-draws",
    "href": "part1_openMSE_GRYM_approx/1_RecCV_and_M/generate_RCV_and_M.html#generate-parameter-draws",
    "title": "1  Recruitment Variability and Natural Mortality",
    "section": "Generate parameter draws",
    "text": "Generate parameter draws\nIn this section we use the PR model to generate random draws of variability in recruitment, expressed as coefficient of variance (\\(CV_R\\)), and annual natural mortality (\\(M\\)) for the scenarios under consideration.\nThis is achieved using the inverse probability transform approach described in Pavez et al. (2021) and implemented in function prfit(), available from krill’s base-case code repository.\nAt each iteration, the PR model is fitted by determining the properties of the underlying distribution of odds of recruits (\\(Q\\)), which depend on both \\(M\\) and \\(CV_R\\), for a given set of random quantiles of the distribution of \\(Q\\). Values of parameters \\(M\\) and \\(CV_R\\) are adjusted to provide the best fit between model predictions and observed data in terms of mean and variance of recruitment proportion in surveys. The fitting process is repeated niter times with newly generated random quantiles, each time returning a single set of estimates (i.e. draws) of \\(M\\), \\(CV_R\\) and associated mean (\\(\\mu_Q\\)) and variance (\\(\\sigma^2_Q\\)) of odds of recruit.\n\nPrepare model and data for parallel computations\nParallelization is conducted at the iteration level, with each parallel node fitting one PR model at a time. We first define the function gen_rec_draws() to apply the PR model fitting function prfit() for the specified number of iterations in parallel, for a given set of PR parameter values.\n\n# Wrapper function to run PR models in parallel via `{furrr}`, using\n# `{progressr}` for progress feedback\ngen_rec_draws <- function(niter, mn_Rprop, sd_Rprop, n_surveys, M0, CV0, ref_age, qdist, Msf){\n\n  p <- progressor(steps = niter)\n\n  future_map_dfr(\n    1:niter, \n    function(x){\n      out <- prFit(qdist = qdist, Msf = Msf, mnR = mn_Rprop, vrR = sd_Rprop^2, \n                   n = n_surveys, M0 = M0, CV0 = CV0, r = ref_age)\n      p()\n      out\n    }, \n    .options = furrr_options(seed = TRUE)\n  )\n}\n\nAfter setting up a reference data frame comprising the parameter values under each scenario, we are ready to run the PR models.\n\n# data.frame with PR inputs under each scenario\nscens_sim_pars <- pr_scenarios |>\n  select(pr_scen_id, mn_Rprop, sd_Rprop, n_surveys) |>\n   mutate(M0, CV0, ref_age, qdist = list(qdist), Msf = list(Msf))\n\n\n\nFit PR models for each scenario\nThe model fitting process is performed sequentially over the considered scenarios, within which multiple fits are performed in parallel via the gen_rec_draws() function.\n\n# Note: Model fitting runtime is substantial for some scenarios, so this code chunk\n# should only be executed interactively, i.e. it shouldn't be evaluated during\n# document rendering\n\nif(file.exists(\"../part1_shared_files/outputs/cvR_M_draws_scen.rds\")){\n  cat(\"\\n\")\n  useropt <- readline(prompt = \"File with parameter draws already exists. Want a re-run? ([Y]es or No): \")  \n  run_fitting <- ifelse(str_starts(useropt, \"Y|y\"), TRUE, FALSE)\n}else{\n  run_fitting <- FALSE\n}\n\nif(run_fitting){\n  # set number of cores to use\n  plan(multisession, workers = availableCores()-2)\n  handlers(\"progress\")\n  \n  tic()\n  cvR_M_draws_scen <- scens_sim_pars |>\n    rowwise() |>\n    pmap(function(pr_scen_id, mn_Rprop, sd_Rprop, n_surveys, M0, CV0, ref_age, qdist, Msf){\n      \n      cli::cli_alert(glue::glue(\"Running {pr_scen_id}\"))\n      \n      \n      with_progress(\n        out <- gen_rec_draws(niter = niter, mn_Rprop = mn_Rprop, sd_Rprop = sd_Rprop, \n                             n_surveys = n_surveys, M0 = M0, CV0 = CV0, ref_age = ref_age, \n                             qdist = qdist, Msf = Msf)\n      )\n      cli::cli_alert_success(glue::glue(\"Finished {pr_scen_id}\"))\n      out\n    })\n  toc()\n  \n  plan(sequential)\n  \n  names(cvR_M_draws_scen) <- scens_sim_pars$pr_scen_id\n  \n  # save draws externally\n  write_rds(x = cvR_M_draws_scen, \"../part1_shared_files/outputs/cvR_M_draws_scen.rds\")  \n}"
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/1_RecCV_and_M/generate_RCV_and_M.html#outputs-checking",
    "href": "part1_openMSE_GRYM_approx/1_RecCV_and_M/generate_RCV_and_M.html#outputs-checking",
    "title": "1  Recruitment Variability and Natural Mortality",
    "section": "Outputs checking",
    "text": "Outputs checking\n\n\n\nHaving a look at the outputs for a couple of scenarios, where listed data.frames comprise random draws of \\(M\\), \\(CV_R\\), \\(\\mu_Q\\) and \\(\\sigma^2_Q\\) for the corresponding PR scenario.\n\ncvR_M_draws_scen$`PR-emm21` |> round(3) |> glimpse()\n\nRows: 10,001\nColumns: 4\n$ M    <dbl> 0.959, 0.909, 0.968, 0.873, 0.757, 0.833, 0.832, 0.846, 0.827, 0.…\n$ CV_R <dbl> 0.506, 0.670, 0.514, 0.430, 0.754, 0.439, 0.374, 0.411, 0.452, 0.…\n$ mnQ  <dbl> 1.615, 1.488, 1.638, 1.402, 1.143, 1.310, 1.306, 1.338, 1.294, 1.…\n$ vrQ  <dbl> 0.667, 0.993, 0.707, 0.364, 0.743, 0.330, 0.239, 0.302, 0.343, 0.…\n\ncvR_M_draws_scen$`PR-atlantida` |> round(3) |> glimpse()\n\nRows: 10,001\nColumns: 4\n$ M    <dbl> 0.497, 0.519, 0.660, 0.778, 0.287, 0.609, 0.371, 0.703, 0.652, 0.…\n$ CV_R <dbl> 0.503, 0.242, 0.469, 0.498, 0.596, 0.483, 0.489, 0.396, 0.446, 0.…\n$ mnQ  <dbl> 0.679, 0.712, 0.953, 1.189, 0.405, 0.861, 0.503, 1.036, 0.939, 0.…\n$ vrQ  <dbl> 0.116, 0.030, 0.199, 0.350, 0.058, 0.173, 0.060, 0.168, 0.175, 0.…\n\n\n\nNext we take a look at the generated draws.\n\n\nCode\ncvR_M_draws_scen_df |>\n  ggplot(aes(x = M, y = CV_R)) +\n  geom_point(size = 0.8, alpha = 0.25) +\n  facet_wrap(~pr_scen_id)\n\n\n\n\nFigure 1.1: Generated draws of \\(CV_R\\) and \\(M\\) under each PR scenario\n\n\n\n\n\nAnd complement the with the corresponding summary statistics.\n\n\nCode\ncvR_M_draws_scen_df |>\n  group_by(pr_scen_id) |>\n  summarise(`Mean of M` = mean(M), `SD of M` = sd(M), `mean of CV_R` = mean(CV_R), `sd of CV_R` = sd(CV_R))\n\n\n\n\n  \n\n\n\n\n\nIn general, scenarios based on surveys observing higher mean recruitment proportions generate draws (i.e. estimates) of \\(M\\) that are, on average, higher. This is expected since higher natural mortality rates lead to a rapid decline of numbers in older age-classes, making the proportion of recruits in the population more prominent. The opposite occurs when natural mortality is low.\nRegarding recruitment variability, the magnitude of drawn \\(CV_R\\) estimates is, unsurprisingly, correlated with to the variance in observed recruitment proportion under each scenario (see Table 1.1 for reference). Evidently, highly variable yearly recruitment will cause the fraction of recruits in the population to fluctuate strongly from year to year.\nThe level of uncertainty about parameters \\(M\\) and \\(CV_R\\) for the considered scenarios is reflected by the spread of the generated draws, which is conveyed by the plots in Figure 1.1 and, relatedly, the standard deviation of draws presented in the table above. Results suggest that uncertainty is affected by the variability in recruitment and the number of surveys from which proportion of recruits are estimated (Table 1.1 for reference).\nSome further observations:\n\ndraws generated under the “PR-emm21” scenario are notably more condensed compared to the remaining scenarios. This indicates that “PR-emm21” has the lowest uncertainty about both \\(M\\) and \\(CV_R\\) parameters.\nDespite the relatively low values of \\(CV_R\\) drawn under “PR-atlantida”, uncertainty about \\(M\\) and \\(CV_R\\) for this scenario is larger (i.e. SD is higher) than that obtained under “PR-emm21”. This is likely related to the fact that recruitment proportions were calculated from only 3 surveys (as opposed to 17 under “PR-emm21”).\nDifferences in the distribution of draws of \\(M\\) and \\(CV_R\\) between scenarios “PR-amlr” and “PR-amlr-haul” illustrate the impact of length cutoff thresholds and sample weighting choices applied during the estimation of the recruitment proportion in surveys.\nDraws of \\(CV_R\\) for scenarios “PR-amlr” and “PR-amlr-haul” show that yearly recruitments \\(R\\) series simulated under these scenarios will have sizable levels of variability (i.e. over 400% and 700%, respectively).\n\n\nReverse-check\nHere we simulate survey estimates of mean and variance of recruitment proportion from the PR model, for each of the considered scenarios. Recruitment series are generated from each draw of \\(M\\) and \\(CV_R\\), which are then used to simulate the proportion of recruits that would be seen in surveys. Thus, each draw generates a series of “observed” proportion of recruits from which estimates are calculated.\nThe core simulating function prSim() is provided in krill’s base case code repository. Figure 1.2 display the simulation results in terms of highest density region (HDR) plots.\n\nscens_sim_pars |>\n  mutate(pr_scen_id = factor(pr_scen_id, levels = unique(pr_scen_id))) |>\n  group_split(pr_scen_id) |>\n  map2(.y = cvR_M_draws_scen, function(scn_pars, scn_draws){\n    \n    # Simulate observation process for each draw of CV_R and M, i.e. generate\n    # `n` random age structures for each draw of CV_R and M and estimate mean\n    # and variance of the proportion of recruits that would be observed in surveys\n    pr_mn_vr <- map2_df(\n      scn_draws$M, \n      scn_draws$CV_R, \n      ~prSim(\n        qdist = scn_pars$qdist, Msf = scn_pars$Msf[[1]], n = scn_pars$n_surveys, \n        M = .x, CV = .y, r = scn_pars$ref_age\n      )\n    )|> rename(sim_mnQ = mnR, sim_vrQ = vrR)\n    \n    title <- scn_pars$pr_scen_id\n    \n    # Compare simulated values of mean and variance of proportional recruitment\n    # with those actually obtained from surveys\n    ggplot(pr_mn_vr, aes(x = sim_mnQ, y = sim_vrQ)) +\n      geom_hdr() +\n      geom_point(aes(x = mn_Rprop, y = sd_Rprop^2), colour = \"red\", data = scn_pars) +\n      labs(title = title) +\n      theme(axis.title = element_blank(), plot.title = element_text(size = 10))\n\n  }) |>\n  wrap_plots(guides = 'collect') |>\n  patchworkGrob() |>\n  gridExtra::grid.arrange(\n    left = \"Variance of proportion of recruits\", \n    bottom = \"Mean of proportion of recruits\"\n  )\n\n\n\nFigure 1.2: HDR of simulated means and variances of proportion of recruits based on generated draws of \\(M\\) and \\(CV_R\\) under each scenario. Red dots are original observed estimates used for parameter generation.\n\n\n\n\n\nResults suggest that simulated surveys based on generated parameter draws produce estimates of recruitment proportion that are consistent with those obtained from observed surveys.\n\n\nExemplify generation of recruitment series\nFor completeness, we generate a recruitment series from a single draw of PR estimates. Simulated numbers of recruits are log-normally distributed with mean of 1 and coefficient of variance given by the used draw of \\(CV_R\\).\n\nr_series <- cvR_M_draws_scen |>\n  map(slice, 5) |>\n  bind_rows(.id = \"pr_scen_id\") |>\n  mutate(pr_scen_id = factor(pr_scen_id, levels = unique(pr_scen_id))) |>\n  rowwise() |>\n  mutate(\n    rec_series = list(recdist(n = 50000, mn = mnQ, vr = vrQ))\n  ) |>\n  unnest(rec_series)\n\nr_series |>\n  ggplot() +\n  geom_histogram(aes(x = rec_series), col = \"black\", fill = \"gray88\") +\n  labs(x = \"Number of recruits\") +\n  facet_wrap(~pr_scen_id, scales = \"free\")\n\n\n\nFigure 1.3: Histogram of recruitment series generated from one draw of parameters, for each scenario\n\n\n\n\n\nComparing drawn value of \\(CV_R\\) with summary statistics of the generated recruitment series.\n\n\nCode\nr_series |>\n  group_by(pr_scen_id, CV_R) |>\n  summarise(\n    mn_R_series = mean(rec_series), \n    sd_R_series = sd(rec_series),\n    cv_R_series = sd_R_series/mn_R_series,\n    .groups = \"drop\"\n  )"
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/1_RecCV_and_M/generate_RCV_and_M.html#wraping-up",
    "href": "part1_openMSE_GRYM_approx/1_RecCV_and_M/generate_RCV_and_M.html#wraping-up",
    "title": "1  Recruitment Variability and Natural Mortality",
    "section": "Wraping up",
    "text": "Wraping up\nWe now have random draws of recruitment parameters and natural mortality, which convey the uncertainty about those parameters. Generated draws will be used as inputs for the GRYM (?sec-grym-sims) and openMSE (Chapter 3) tools to run population projections and estimate harvest rate levels that satisfy the sustainability rules currently in place for the management of the krill stock."
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/1_RecCV_and_M/generate_RCV_and_M.html#references",
    "href": "part1_openMSE_GRYM_approx/1_RecCV_and_M/generate_RCV_and_M.html#references",
    "title": "1  Recruitment Variability and Natural Mortality",
    "section": "References",
    "text": "References\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMare, W. de la. 1994. “Modelling Krill Recruitment.” CCAMLR Science 1.\n\n\nMaschette, D., and S. Wotherspoon. 2021. “Use of Parameters Within Euphausia Superba Grym Simulations.” WG-FSA-2021/40. CCAMLR.\n\n\nMaschette, D, S Wotherspoon, S Kawaguchi, and Philippe Ziegler. 2021. “Grym Assessment for Subarea 48.1 Euphausia Superba Populations.” WG-FSA-2021/39. Hobart, Autralia: CCAMLR. https://meetings.ccamlr.org/en/wg-fsa-2021/39.\n\n\nPavez, Cassandra, Simon Wotherspoon, Dale Maschette, Keith Reid, and Kerrie Swadling. 2021. “Recruitment Modelling for Euphausia Superba Stock Assessments Considering the Recurrence of Years with Low Recruitment.” WG-SAM-2021/09. Hobart, Autralia: CCAMLR."
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/2_GRYM_sims/grym_sims.html#introduction",
    "href": "part1_openMSE_GRYM_approx/2_GRYM_sims/grym_sims.html#introduction",
    "title": "2  GYM/Grym Krill Analysis",
    "section": "Introduction",
    "text": "Introduction\nThe current management of the Antarctic Krill fishery is based on establishing precautionary catch limits that comply with sustainability principles set out by the Commission for the Conservation of Antarctic Marine Living Resources (CCAMLR, Constable et al. 2000). In practice, these catch limits are set on the basis of a constant long-term sustainable annual yield (\\(Y_s\\)), which is determined as the proportion (\\(\\gamma_s\\)) of the pre-exploitation biomass of the population (\\(B_0\\)) that can be harvested annually while ensuring that CCAMRL objectives are achieved:\n\\[Y_s = \\gamma_s B_0\\]\nThe estimation of \\(B_0\\) and \\(\\gamma_s\\), which can be though of as the sustainable harvest rate, are major tasks in the assessment of krill fisheries.\nEstimation of \\(\\gamma_s\\) relies on a frequentist probability approach using Monte-Carlo simulations. In this approach, a stochastic population dynamics model is used to project the stock forwards in time under a range of potential \\(\\gamma\\) values, each representing a different fraction of \\(B_0\\) taken as a constant catch in each year of the projection.\nFor each projection, the population’s pre-exploitation state and key stock parameters (e.g. yearly recruitment, mortality, growth) are drawn at random from suitable statistical distributions that account for the natural variability in the population as well as the uncertainty about those key parameters. Projections are repeated thousands of times for new randomly drawn parameter values to evaluate the probability distribution of population status at each year of the projection period under different levels of yield (and thus, fishing mortality). The projection period covers a minimum of 20 years to ensure that long-term trends in the population can be adequately assessed.\nFinally, \\(\\gamma_s\\) is determined using the following three-step decision rule (Constable et al. 2000):\n\nDepletion rule: choose a harvest rate, \\(\\gamma_1\\), so that the probability of the spawning stock biomass (\\(SSB\\)) dropping below 20% of its pre-exploitation level (\\(SSB_0\\)) at any given year of a 20-year harvesting period is no more than 10%1.\nEscapement rule: choose a harvest rate, \\(\\gamma_2\\), so that the median escapement at the end of a 20 year period is 75% of the pre-exploitation median level - i.e. the \\(\\gamma\\) at which the median of the distribution of \\(SSB\\) after 20 years of harvesting is no less than 75% of the median2 of \\(SSB_0\\).\nSelect \\(\\gamma_s\\) the lower of \\(\\gamma_1\\) and \\(\\gamma_2\\) values (which returns an harvest rate that is consistent with both previous rules).\n\nThe relative magnitudes of \\(\\gamma_1\\) or \\(\\gamma_2\\) depend largely on the level of recruitment variability and the degree of uncertainty associated with the estimate of \\(B_0\\) used in the model (Constable et al. 2000).\n\nThe GYM/Grym framework\nThe ongoing catch limit for Antarctic krill was established in 2010 (CCAMLR 2022) based on a \\(\\gamma_s\\) estimated from the Generalized Yield Model (GYM) developed by Constable and de la Mare (1996). GYM is an age-structured, non-spatially explicit, single-stock simulation model that accounts for natural variability and uncertainty on population estimates. GYM is not a statistically fitted stock assessment model - i.e. it does not estimate stock parameters from input data. Therefore, all input parameters must be estimated externally and provided directly to the model.\nGYM, originally written in Fortran, was later updated and converted into the R package {Grym} (D. Maschette et al. 2020), which was used to develop CCAMLR’s base case implementation of krill assessment for standard management advice. D. Maschette and Wotherspoon (2021) describe the main input parameters used by GYM/Grym for modelling of the Krill fishery.\nMost relevant features of the GYM/Grym base case configuration for krill include:\n\nStock is structured into 7 age-classes, and assumes that individuals recruit to the modelled stock at age 1. Therefore, the model covers the age ranges 1-2 up to 7-8 years old.\nThe final age-class is not an age-plus group, i.e. it is assumed that no individual lives more than 8 years.\nStock dynamics are modelled at daily time steps, i.e. the model evaluates the status of the stock at 365 time-points whithin each year of the projection period.\nRecruitment is not dictated by a conventional stock-recruitment relationship, such as the Beverton-Holt or the Ricker functions. Instead, yearly numbers of recruits \\(R_y\\) are simulated as random deviates from a mean recruitment that is constant over time, regardless of the spawning stock size. However, the model includes a depletion factor that reduces the simulated recruitment in a given year when the stock falls below the depletion critical point (i.e. \\(SSB < 0.2 \\, SSB0\\)) in the preceding year. The magnitude of this reduction is proportional to the percentage drop from the depletion point.\nThe main sources of stochasticity between simulations are:\n\nYearly Recruitment: \\(R_y\\) series are randomly generated from an Inverse-Beta distribution with a fixed mean of 1 and variance estimated from the Proportional Recruitment (PR) model. Recruitment variance, accounting for natural variability in the recruitment process, remains fixed over all years of the projection period, in a given simulation.\nRecruitment variance: to account for uncertainty in the estimate of recruitment variance, each simulation uses a new random draw of PR estimates, which are generated in the PR analysis (Chapter 1).\nNatural Mortality: for each simulation, a single random value of annual scaling of natural mortality (\\(M\\)) is used to simulate the degree of stock decay due to non-fishing causes over the entire projection period (i.e. \\(M\\) assumed constant over time). Natural mortality is also estimated in the PR model, which provides random draws of \\(M\\) accounting for the uncertainty in the estimation process (Chapter 1).\nMaturity and gear selectivity ogives: the midpoints of the ogive ramps describing, respectively, the length-class at which 50% of its individuals are mature or available to the fishery, are randomly draw in each simulation from a uniform distribution bounded by a selected minimum and maximum lengths. This accounts for the lack of knowledge about the exact length at which 50% of krill are either mature or selectable by the fishery. Sampled midpoint values are the same in all years of a given projection.\nPre-exploitation Biomass Survey Estimate: Along with a given \\(\\gamma\\), the catch limit applied in each projection requires a (simulated) survey estimate of the initial biomass \\(\\widehat{B0}\\). To simulate this estimation process, \\(\\widehat{B0}\\) values are drawn from a Log-Normal distribution with mean equal to the simulated \\(B0\\), and variance (\\(B0logSD^2\\)) reflecting the sampling and measurement error in surveys. The value of \\(B0logSD\\) is calculated externally from survey data (e.g. Kinzey 2021).\n\nIn each simulation, sampled values of stochastic parameters are held fixed across projections covering the range of considered \\(\\gamma\\) values. This approach ensures that observed changes in population forecasts within a given simulation are solely attributable to different fishing pressures and not confounded by randomness underlying the simulation process.\nWeight-at-length and length-at-age relationships are assumed to be fully deterministic, meaning that growth is considered to be unaffected by natural variability, while power law parameters and von Bertalanffy growth parameters are treated as known without error.\n\n\n\nAnalysis goal\nHere we run the GYM/Grym base-case implementation for 8 alternative scenarios of input parameter values, resulting from combining four different PR estimation scenarios with two options for the maturity-at-length ogive curve. This is similar to the ensemble analysis previously conducted by D. Maschette et al. (2021), with the exception that we assume recruitment follows a Log-Normal process.\nRandom draws of \\(M\\), recruitment variability \\(CV_R\\) and related PR estimates for each of the four PR scenarios were pre-generated in Chapter 1."
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/2_GRYM_sims/grym_sims.html#estimating-gamma_s-under-alternative-grym-parameter-values",
    "href": "part1_openMSE_GRYM_approx/2_GRYM_sims/grym_sims.html#estimating-gamma_s-under-alternative-grym-parameter-values",
    "title": "2  GYM/Grym Krill Analysis",
    "section": "Estimating \\(\\gamma_s\\) under alternative Grym parameter values",
    "text": "Estimating \\(\\gamma_s\\) under alternative Grym parameter values\n\nSpecify input scenarios\nWe begin with setting up the combination of Grym parameter values for each scenario. We consider 3 groupings of input parameters:\n\nRecruitment parameters estimated from four different PR scenarios\nMaturity-at-length parameters from two 2 alternative maturity ogive curves\nAll remaining input parameters, which take unique values across scenarios.\n\n\n\nCode\n# Proportional Recruitment scenarios\nprop_rec_scenarios <- read_xlsx(\n  path = \"../part1_shared_files/data/grym_parameter_scenarios.xlsx\", \n  sheet = \"rec_proportion_scenarios\"\n) |>\n  select(-ref)\n\n# Maturity at length scenarios\nmaturity_scenarios <- read_xlsx(\n  path = \"../part1_shared_files/data/grym_parameter_scenarios.xlsx\", \n  sheet = \"maturity_ogive_scenarios\"\n) |>\n  select(-ref)\n\n# fixed parameters\nfixed_pars <- read_xlsx(\n  path = \"../part1_shared_files/data/grym_parameter_scenarios.xlsx\", \n  sheet = \"fixed_parameters\")\n  # mutate(value = if_else(\n  #   str_detect(parameter_tag, \"start|end|date\"), \n  #   format(as.Date(as.numeric(value), origin = \"1899-12-30\"), format = \"%d/%b\"), \n  #   value)\n  # ) \n\n# load draws of M and CV_R for each PR scenario\npr_cvR_M_draws_scen <- read_rds(\"../part1_shared_files/outputs/cvR_M_draws_scen.rds\")\n\n\nThe four PR scenarios are displayed in Table 1.1. Parameter values for each of the maturity ogive curves are displayed in Table 2.1, and fixed Grym input parameters are presented in Table 2.2.\n\n\nCode\nmaturity_scenarios |>\n  flextable() |>\n  set_header_labels(\n    mat_scen_id = \"Maturity ID\",\n    source = \"Source\",\n    mat50Min = \"Min length 50% mature (mm)\",\n    mat50Max = \"Max length 50% mature (mm)\",\n    matrange = \"Ogive ramp width (mm)\"\n  )\n\n\n\n\nTable 2.1:  Alternative maturity-at-length ogive parameters, from Maschette et al (2021) Maturity IDSourceMin length 50% mature (mm)Max length 50% mature (mm)Ogive ramp width (mm)mat-2010WG-EMM-201032.037.06.0mat-2021US-AMLR summer surveys37.644.38.8\n\n\n\n\n\nCode\n# cit_keys <- fixed_pars |>\n#   distinct(citation_key) |>\n#   drop_na() |>\n#   mutate(ref_symb = tolower(as.roman(1:n())))\n\nfixed_pars |>\n  select(-c(parameter_tag, reference)) |>\n  flextable() |>\n  set_header_labels(\n    category = \"Category\",\n    parameter_label = \"Parameter\",\n    value = \"Value\",\n    citation_key = \"Reference\"\n  ) |>\n  merge_v(j = 1) |>\n  flextable::fix_border_issues() |>\n  colformat_md()\n\n\n\n\nTable 2.2:  Grym input parameters with fixed values accross simulation scenarios CategoryParameterValueReferencePR modelReference age2Maschette et al. (2021)Recruitment distributionLog-NormalMortalityWithin-year natural mortality patternconstantPopulation model structureFirst Age Class1Thanassekos et al. (2021)Last Age Class7Constable and de la Mare (1996)Age plus groupNoTime steps (days)365Length-at-age (von Bertalanffy)t00Constable and de la Mare (1996)L∞ (mm)60Constable and de la Mare (1996)K0.48Thanassekos et al. (2021)Start growth period (day/month)21/OctThanassekos et al. (2021)End growth period (day/month)12/FebThanassekos et al. (2021)Weight-at-lengthWeight-length parameter - A (g)2.24E-06SC-CAMLR (2000)Weight-length parameter - B3.314SC-CAMLR (2000)Spawning seasonStart of spawning season (day/month)15/DecKawaguchi (2016)End of spawning season (day/month)15/FebKawaguchi (2016)Selectivity ogiveMin length, 50% Selected (mm)30Thanassekos et al. (2021)Max length, 50% Selected (mm)35Thanassekos et al. (2021)Ramp width (mm)11Thanassekos et al. (2021)Fishing effortStart of Fishing Season (day/month)01/DecThanassekos et al. (2021)End of Fishing Season (day/month)30/NovThanassekos et al. (2021)B0 estimationUncertainty in B0 estimate0.361Kinzey (2021)Start of monitoring interval (day/month)01/JanThanassekos et al. (2021)End of monitoring interval (day/month)15/JanThanassekos et al. (2021)MiscellaneousReference Date (day/month)01/OctThanassekos et al. (2021)Simulation optionsReasonable upper bound for Annual F1.5Constable and de la Mare (1996)Projection length (number of years)20Number of iterations10001\n\n\n\nCode\n  # flextable::footnote(\n  #   j = ~ value, \n  #   i = ~ citation_key %in% cit_keys$citation_key, \n  #   ref_symbols = left_join(fixed_pars, cit_keys, by = \"citation_key\") |> drop_na(citation_key) |> pull(ref_symb),\n  #   value = as_paragraph_md(\n  #     fixed_pars |> drop_na(citation_key) |> distinct(citation_key) |> pull(citation_key)\n  #   ), inline = TRUE\n  # ) \n\n\nNext we create a look-up table specifying the simulation scenarios, determined through combining the PR scenarios and maturity alternatives.\n\n\nCode\n# Key of scenarios under consideration for Grym simulations\ngrym_scenarios_key <- expand_grid(\n  pr_scen_id = prop_rec_scenarios$pr_scen_id,\n  mat_scen_id = maturity_scenarios$mat_scen_id\n) |>\n  mutate(scenario_id = glue::glue(\"scn-{1:n()}\"), .before = 1)\n\ngrym_scenarios_key |>\n  flextable() |>\n  set_table_properties(width = 0.6, layout = \"autofit\") |>\n  set_header_labels(\n    scenario_id = \"Scenario ID\",\n    pr_scen_id = \"PR Scenario ID\",\n    mat_scen_id = \"Maturity ID\"\n  )\n\n\n\n\nTable 2.3:  Grym simulation scenarios Scenario IDPR Scenario IDMaturity IDscn-1PR-emm21mat-2010scn-2PR-emm21mat-2021scn-3PR-amlrmat-2010scn-4PR-amlrmat-2021scn-5PR-atlantidamat-2010scn-6PR-atlantidamat-2021scn-7PR-amlr-haulmat-2010scn-8PR-amlr-haulmat-2021\n\n\n\n\n\nSet \\(\\gamma\\) values under consideration\nWe also need to define the range of harvest rates \\(\\gamma\\) over which population projections will be run. We chose to use equally spaced rates, ranging from no harvest (\\(\\gamma = 0\\)) to a constant annual harvest rate of 25% of the pre-exploitation biomass (\\(\\gamma = 0.25\\)), with 0.25% increments between them.\n\n# sequence of gamma values\n# i.e. testing fixed annual harvest rates from 0% to 25% of B0, for increments of 0.25%\ngamma_seq <- seq(0, 0.25, by = 0.0025)\ngamma_seq\n\n  [1] 0.0000 0.0025 0.0050 0.0075 0.0100 0.0125 0.0150 0.0175 0.0200 0.0225\n [11] 0.0250 0.0275 0.0300 0.0325 0.0350 0.0375 0.0400 0.0425 0.0450 0.0475\n [21] 0.0500 0.0525 0.0550 0.0575 0.0600 0.0625 0.0650 0.0675 0.0700 0.0725\n [31] 0.0750 0.0775 0.0800 0.0825 0.0850 0.0875 0.0900 0.0925 0.0950 0.0975\n [41] 0.1000 0.1025 0.1050 0.1075 0.1100 0.1125 0.1150 0.1175 0.1200 0.1225\n [51] 0.1250 0.1275 0.1300 0.1325 0.1350 0.1375 0.1400 0.1425 0.1450 0.1475\n [61] 0.1500 0.1525 0.1550 0.1575 0.1600 0.1625 0.1650 0.1675 0.1700 0.1725\n [71] 0.1750 0.1775 0.1800 0.1825 0.1850 0.1875 0.1900 0.1925 0.1950 0.1975\n [81] 0.2000 0.2025 0.2050 0.2075 0.2100 0.2125 0.2150 0.2175 0.2200 0.2225\n [91] 0.2250 0.2275 0.2300 0.2325 0.2350 0.2375 0.2400 0.2425 0.2450 0.2475\n[101] 0.2500\n\n\nFinally we generate a grid table with input parameter setups under each scenario, which will be the reference table for the Grym simulations.\n\n\nCode\n# spread fixed parameters over columns\nfixed_pars_wide <- fixed_pars |>\n  select(parameter_tag, value) |>\n  pivot_wider(names_from = parameter_tag)\n\n# merge fixed parameters with scenario's grid table\ngrym_scen_inputs <- grym_scenarios_key |>\n  left_join(maturity_scenarios, by = \"mat_scen_id\") |>\n  select(-source) |>\n  add_column(fixed_pars_wide)\n\n# tibble with list-columns for parameters requiring non-scalar objects\ngrym_scen_setups <- grym_scen_inputs |>\n  mutate(across(.cols = c(pr_ref_age, first_age, last_age, nsteps, n.years, n_iter), as.integer)) |>\n  mutate(across(.cols = c(t0:K, a, b, sel50Min:selrange, B0logsd, Fmax), as.numeric)) |>\n  rowwise() |>\n  mutate(\n    .keep = \"unused\",\n    Ages = list(first_age:last_age), # Age-classes\n    spawnI = list(get_daily_steps(spawning_start, spawning_end, ref_date)), \n    monitorI = list(get_daily_steps(monitoring_start, monitoring_end, ref_date)),\n    fishingI = list(get_daily_steps(fishing_start, fishing_end, ref_date)),\n    f0 = days_since_ref(growth_start, ref_date)/365,      # fraction of year at which growth starts,\n    f1 = days_since_ref(growth_end, ref_date)/365,        # fraction of year at which growth ends\n  ) |>\n  mutate(\n    # draws of PR estimates (M, CV_R, mnQ, vrQ)\n    prRecruitPars = pr_cvR_M_draws_scen[pr_scen_id], \n    # recruitment generating function for assumed rec dist\n    prRecruit = case_when(                             \n      pr_dist == \"Log-Normal\" ~ list(recLogNormal),\n      pr_dist == \"Gamma\" ~ list(recGamma),\n      pr_dist == \"Invserse-Beta\" ~ list(recInverseBeta)\n    ),\n    # Within-year M pattern\n    ms = case_when(\n      M_within_year == \"constant\" ~ list(matrix(1, nsteps+1, length(Ages)))\n    ), \n    # sequence of harvest rates over which to run population projections\n    gamma = list(gamma_seq),\n    outputs_path = outputs_path\n  )\n\ngrym_scen_setups\n\n\n\n\n  \n\n\n\n\n\nRun Grym models\nIn this section we run the Grym simulations, and thus the estimation of \\(\\gamma_y\\), for each scenario. We do this by sequentially mapping the function run_grym_krill() to each scenarios setup. Function run_grym_krill() is a wrapper that runs simulations within each scenario in parallel, using the projection function KrillProjection(). It then calculates the \\(\\gamma_1\\) and \\(\\gamma_2\\) values for the scenario being evaluated.\n\n# Note: runtime is substantial (~8hrs across 20 cores), so we don't want to run\n# this chunk on rendering!\n\n# Progress bar configuration\nhandlers(handler_progress(\n  format = \":spin :current/:total [:bar] :percent in :elapsed ETA: :eta\",\n  width = 70)\n)\n\n# set-up cores for parallization\nfuture::plan(multisession, workers = future::availableCores()-1)\n\n# run simulations - needs to be wrapped in `with-progress` to get progress bars \n# for projection runs\ntictoc::tic()\ngrym_scen_outputs <- progressr::with_progress(\n  pmap(grym_scen_setups, run_grym_krill), \n  delay_stdout = FALSE\n)\ntictoc::toc()\n\n# switch back to sequential computations\nfuture::plan(sequential)\n\nnames(grym_scen_outputs) <- grym_scen_setups$scenario_id\n\n# Write out object with all the results (compressing due to large size)\nwrite_rds(grym_scen_outputs,\n          \"../part1_shared_files/outputs/grym_scen_results.rds\",\n          compress = \"gz\",\n          compression = 9)"
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/2_GRYM_sims/grym_sims.html#results",
    "href": "part1_openMSE_GRYM_approx/2_GRYM_sims/grym_sims.html#results",
    "title": "2  GYM/Grym Krill Analysis",
    "section": "Results",
    "text": "Results\n\n\n\n\nSimulated Spawning Stock trajectories\nFigure 2.1 presents the simulated trajectories of spawning Stock Status (\\(SSS\\)), expressing the proportion of \\(SSB\\) relative to \\(SSB0\\), at each year of the projecting period. As expected, in all scenarios, trajectories show an increasing proportion of simulations in which \\(SSB\\) drops bellow 20% of \\(SSB0\\) as the level of harvesting \\(\\gamma\\) increases.\nIt is also apparent that input scenarios with higher levels of recruitment variability and uncertainty in \\(M\\) estimates (‘scen-3’ to ‘scen-8’, check Table 2.3 and Figure 1.1 for reference) produce widely variable \\(SSS\\) trajectories. As a result, a large proportion of simulations falls below the depletion threshold even in the absence of fishing (i.e. \\(\\gamma = 0\\)).\n\n\nCode\n# subset of gammas to display in plots\ngamma_subset <- c(0.00, 0.005, 0.01, 0.03, 0.05, 0.08, 0.1, 0.12, 0.15)\n\n# Calculate yearly spawning stock status (SSS = SSB/SSB0) for a subset of the tried gammas\n# identifying runs where SSS < 0.2 at any point in the time-series \ngrym_scen_outputs_sub <- grym_scen_outputs |>\n  map_df(\\(x){\n    x$scen_proj |>\n      filter(Gamma %in% gamma_subset) |>\n      #filter(Run %in% 1:1000) |>\n      mutate(SSS = SSB/SSB0) |>\n      group_by(Run, Gamma) |>\n      mutate(below_dpl = if_else(min(SSS) < 0.2, TRUE, FALSE)) |>\n      ungroup()\n  })\n\n# plots of simulation of SSS across year, for each scenario under a subset of gammas\n# SSS trajectories that go below 0.2 are signalled in red\n# blue trajectory conveys the escapement level at each year-step\np <- grym_scen_outputs_sub |>\n  #filter(Run %in% 1:8) |>\n  ggplot(aes(x = Year, y = SSS)) +\n  geom_path(aes(colour = below_dpl), alpha = 0.8) +\n  geom_hline(yintercept = c(0.2), linetype = \"dashed\") +\n  scale_colour_manual(values = c(\"gray75\", \"#B71C1C\")) +\n  guides(colour=\"none\") +\n  labs(y = expression(paste(\"Spawning stock status (SSB/\", SSB[0], \")\"))) +\n  facet_grid(rows = vars(scenario_id), cols = vars(Gamma), scales = \"free_y\")\n\nggsave(\n  plot = p, \n  filename = \"../part1_shared_files/outputs/grym_SSS_scenarios.png\", \n  width = 8, \n  height = 9\n)\n\n\n\n\n\n\nFigure 2.1: Simulated trajectories of Spawning stock status over time, for each scenario (rows) under a subset of the considered \\(\\gamma\\) values (columns). Dashed line indicates the depletion threshold (0.2). Trajectories that cross the 0.2 depletion threshold are signaled in red.\n\n\n\n\n\nThe negative impact of increasing \\(\\gamma\\) values on the biomass of spawners at the end of the projection period (\\(SSBY\\)) is also evident in Figure 2.2, showing distributions of \\(SSBY\\) falling further from \\(SSB0\\) distributions as annual harvest rates increase.\nIn addition, plots in Figure 2.2 illustrate how variability in recruitment (\\(R\\)) and \\(M\\) affect the escapement capacity of the stock. Specifically, simulations under scenarios ‘scn-3’ to ‘scn-8’, which are based on estimates of \\(M\\) and \\(R\\) with higher variability (as shown by wider quantile intervals), tend to produce median \\(SSBY\\) values that drop below 75% of the median \\(SSB0\\) at lower \\(\\gamma\\) values compared to those simulated under scenarios ‘scn-1’ and ‘scn-2’ (which have narrower quantile intervals).\n\n\nCode\n# get simulated values of SSB0 and SSB in final year of the projection\nspawners <- grym_scen_outputs_sub |>\n  filter(Year %in% max(Year)) |>\n  select(scenario_id, Run, Gamma, SSB , SSB0) |>\n  pivot_longer(cols = c(SSB , SSB0), names_to = \"metric\") |>\n  mutate(metric = if_else(metric == \"SSB\", \"SSBY\", metric))\n\n# compute medians SSB0 and SSB across all simulations , under each scenario\nmed_spawners <- spawners |>\n  group_by(scenario_id, metric, Gamma) |>\n  summarise(medians = median(value), .groups = \"drop\") \n\n\n# Compute escapement threshold value, i.e. 75% of median SSB0)\n# Note: values are constant across gammas, as simulated SSB0s are held constant\n# across gamma-specific projections.\nesc_thresh <- med_spawners |>\n  filter(metric == \"SSB0\") |>\n  mutate(esc_thrs = medians*0.75)\n\np2 <- spawners |>\n  ggplot(aes(x = metric, y = value)) +\n  ggdist::stat_interval() +\n  geom_point(data = med_spawners, aes(y = medians)) +\n  geom_hline(data = esc_thresh, aes(yintercept = esc_thrs), linetype = \"dashed\") +\n  facet_grid(scenario_id ~ Gamma, scales = \"free\") +\n  labs(x = NULL, y = \"Spawning Biomass\", ) +\n  # scale_colour_grey(end = 0.2, start = 0.8)\n  scale_color_brewer(name = \"Quantile Interval (prob)\") +\n  theme(legend.position=\"bottom\")\n\nggsave(\n  plot = p2, \n  filename = \"../part1_shared_files/outputs/grym_SSB0_SSB_end_dstbn_scenarios.png\", \n  width = 8, \n  height = 9\n)\n\n\n\n\n\n\nFigure 2.2: Quantile intervals (blue bars) and medians (dots) of simulated pre-explotation spawining biomass (SSB0) and spawning biomass at the final year of the projection (SSBY), across a subset of \\(\\gamma\\)s (columns) for each scenario (rows). Dashed lines indicate the critical escapement threshold (i.e. 75% of median SSB0).\n\n\n\n\n\n\n\nDepletion probability and Escapement levels versus \\(\\gamma\\) values\nFigure 2.3 shows the depletion probability3 and the escapement level4 at the considered range of harvest rates. Here are the main observations:\n\nFor scenarios ‘scn-3’, ‘scn-4’, ‘scn-7’ and ‘scn-8’, probability of depletion would be considerably above the 10% critical limit even in the absence of fishing (i.e. \\(\\gamma = 0\\)).\nIn the remaining scenarios, depletion probability would remain under the 10% critical limit for \\(\\gamma\\) values up to 0.075 (‘scn-6’) and 0.125 (‘scn-1’).\nEscapement levels stay above the 75% threshold for a large range of \\(\\gamma\\) values, depending on the input scenario. For example, simulations under ‘scn-1’ inputs suggest that stock would remain above the 75% escapement threshold for constant harvest rates up to 10% of \\(B0\\) (i.e. \\(\\gamma = 0.1\\)), while for ‘scn-8’ the stock would fall below sustainable escapement levels under constant harvest rates above 2% of \\(B0\\) (i.e. \\(\\gamma = 0.02\\)).\nBoth plots illustrate how alternative maturity ogives can have a significant impact on the simulation outcomes, as highlighted by the separation between pairs of scenarios (‘scn-1’ - ‘scn-2’, ‘scn-3’ - ‘scn-4’, etc.). Scenarios using the ‘mat-2010’ maturity ogive, such as ‘scen-1’, ‘scen-3’, ‘scen-5’, and ‘scen-7’, which yields a higher percentage of mature individuals at smaller sizes, show greater resilience to fishing pressure. The projections suggest that under these scenarios, the stock could withstand higher levels of \\(\\gamma\\) before falling to unsustainable levels of depletion risk and escapement.\n\n\n\nCode\ngrym_dpl_esc_gammas <- read_rds(\"../part1_shared_files/outputs/grym_dpl_esc_gammas.rds\")\n\n## Plotting function -----------------------------------------------------------\nplot_gammas_vs_rule <- function(dt, gamma, rule_value, scen, rule_label, \n                                scen_label = \"Scenario\", thresh, ylab, xlab){\n  \n  n_scenarios <- pull(dt, {{scen}}) |> unique() |> length()\n  \n  dt |>\n    ggplot(aes(x = {{gamma}}, y = {{rule_value}}, colour = {{scen}})) +\n    geom_line() +\n    geom_point(aes(fill = {{scen}}), shape = 21, colour = \"white\", size = 1.5, alpha = 0.5) +\n    geom_hline(yintercept = thresh, linetype = \"dashed\") +\n    labs(x = xlab, y = ylab, title = rule_label, fill = scen_label, colour = scen_label) +\n    scale_y_continuous(breaks = seq(0, 1, by = 0.1)) +\n    scale_color_manual(values = MetBrewer::met.brewer(\"Juarez\", n = n_scenarios)) +\n    scale_fill_manual(values = MetBrewer::met.brewer(\"Juarez\", n = n_scenarios)) +\n    theme(panel.grid.minor.y = element_blank())\n}\n## ----------------------------------------------------------------------------\n\n\n# Plot for depletion rule under considered gammas\np_dpl <- plot_gammas_vs_rule(\n  dt = grym_dpl_esc_gammas, \n  gamma = Gamma, \n  rule_value = Pr_depleted, \n  scen = scenario_id,\n  thresh = 0.1, \n  ylab = \"Pr[min(SSB/SSB0) < 0.2] (Years 1 - 20)\", \n  xlab = expression(gamma),\n  rule_label = \"Depletion\", \n  scen_label = \"Scenario ID\"\n  )\n\n# Plot for escapement rule under considered gammas\np_esc <- plot_gammas_vs_rule(\n  dt = grym_dpl_esc_gammas, \n  gamma = Gamma, \n  rule_value = Escapement, \n  scen = scenario_id, \n  thresh = 0.75,\n  rule_label = \"Escapement\", \n  ylab = \"med(SSB)/med(SSB0) in Final Year\",\n  xlab = expression(gamma),\n  scen_label = \"Scenario ID\"\n  )\n\np_dpl/p_esc + plot_layout(guides = 'collect')\n\n\n\n\nFigure 2.3: Depletion probabilities and escapement levels at considered harvest rates \\(\\gamma\\) under each scenario. Horizontal dashed lines indicate the 10% probability limit of the depletion rule (top plot) and the 75% critical threshold of the escapement rule (bottom plot).\n\n\n\n\n\n\n\nEstimated \\(\\gamma_s\\) under each Grym input scenario\nFinally, we determine the sustainable harvest rate \\(\\gamma_s\\) for each input scenario based on the 3-stage decision rule (Table 2.4).\nAs expected, the chosen Proportional Recruitment scenario had the largest impact on the estimated values of \\(\\gamma_s\\). Specifically, scenarios using PR estimates reflecting lower variability in \\(R\\) (‘scn-1’ and ‘scn-2’) resulted in higher estimates of \\(\\gamma_s\\), based on the escapement rule (\\(\\gamma_2\\)). Conversely, scenarios ‘scn-3’, ‘scn-4’, ‘scn-7’ and ‘scn-8’, based on PR estimates conveying the highest recruitment variability (‘PR-amlr’ and ‘PR-amlr-haul’), returned \\(\\gamma_s\\) estimates of 0 based on the depletion rule (\\(\\gamma_1\\)). In fact, as seen in Figure 2.3, under these scenarios, the risk of depletion in the absence of fishing is already so high (between approximately 25% and 45%) that the stock would almost certainly collapse whithin a short period of time5.\nThe effect of maturity-at-length on \\(\\gamma_s\\) estimates is also evident, as previously observed in Figure 2.3. Scenarios employing the ‘mat-2010’ ogive yielded lower estimates of \\(\\gamma_s\\) compared to scenarios using the ‘mat-2021’ ogive. Scenarios ‘scn-5’ and ‘scn-6’ are interesting because they demonstrate how variability in maturity ogives affect which of the decision rules determines the choice of \\(\\gamma_s\\). Specifically, population simulations applying the ‘mat-2021’ ogive, which sample midpoints from a larger range of values (i.e. higher variability), hit the depletion rule at lower \\(\\gamma\\) values than the escapement rule (i.e. \\(\\gamma_1 < \\gamma_2\\)).\n\n\nCode\ngrym_gammas_tbl <- read_rds(\"../part1_shared_files/outputs/grym_gammas_tbl.rds\")\n\n# gammas in math format\ngamma_symb <- c(\"\\\\gamma_1\", \"\\\\gamma_2\", \"\\\\gamma_s\")\n\ngrym_gammas_tbl |>\n  mutate(across(-scenario_id, as.numeric)) |>\n  mutate(across(c(Gamma_1, Gamma_2), ~if_else(is.infinite(.), 0, .))) |>\n  left_join(grym_scenarios_key, by = \"scenario_id\") |>\n  relocate(Gamma_1:Gamma_choice, .after = last_col()) |>\n  mutate(gamma_s = pmin(Gamma_1, Gamma_2)) |>\n  select(-Gamma_choice) |>\n  flextable() |>\n  set_table_properties(width = 0.8, layout = \"autofit\") |>\n  #bold(j = ~ gamma_s) |>\n  bold(j = ~ Gamma_1, i = ~ Gamma_1 < Gamma_2) |>\n  bold(j = ~ Gamma_2, i = ~ Gamma_2 < Gamma_1) |>\n  vline(j = ~ Gamma_2, border = fp_border_default(width = .5)) |>\n  bg(j = ~ gamma_s, bg = \"#E8EAF6\", part = \"all\") |>\n  set_header_labels(\n    scenario_id = \"Scenario ID\",\n    pr_scen_id = \"PR Scenario ID\",\n    mat_scen_id = \"Maturity ID\"\n  ) |>\n  width(j = ~ Gamma_1 + Gamma_2 + gamma_s, width = 10) |>\n  compose(j = ~ Gamma_1 + Gamma_2 + gamma_s, \n          part = \"header\", \n          value = as_paragraph(as_equation(gamma_symb))) |>\n  align(j = ~ Gamma_1 + Gamma_2 + gamma_s, align = \"center\")\n\n\n\n\nTable 2.4:  Estimated sustainable harvest rate under each Grym inputs scenario Scenario IDPR Scenario IDMaturity ID\nγ1\\gamma_1γ1​\nγ2\\gamma_2γ2​\nγs\\gamma_sγs​scn-1PR-emm21mat-20100.12750.10750.1075scn-2PR-emm21mat-20210.10250.09000.0900scn-3PR-amlrmat-20100.00000.03750.0000scn-4PR-amlrmat-20210.00000.03000.0000scn-5PR-atlantidamat-20100.08000.07750.0775scn-6PR-atlantidamat-20210.06750.07000.0675scn-7PR-amlr-haulmat-20100.00000.02000.0000scn-8PR-amlr-haulmat-20210.00000.01500.0000"
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/2_GRYM_sims/grym_sims.html#wrapping-up",
    "href": "part1_openMSE_GRYM_approx/2_GRYM_sims/grym_sims.html#wrapping-up",
    "title": "2  GYM/Grym Krill Analysis",
    "section": "Wrapping Up",
    "text": "Wrapping Up\nWe now have estimates of \\(\\gamma_s\\) using the current Grym base-case implementation for the Krill stock under alternative input parameter values. The next step is to replicate this estimation process using the openMSE/DLMtool and assess whether these two frameworks can be treated as interchangeable."
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/2_GRYM_sims/grym_sims.html#references",
    "href": "part1_openMSE_GRYM_approx/2_GRYM_sims/grym_sims.html#references",
    "title": "2  GYM/Grym Krill Analysis",
    "section": "References",
    "text": "References\n\n\nCCAMLR. 2022. “CCAMLR’s Approach to Managing the Krill Fishery.\nEuphausia Superba in Area 48.” https://fishdocs.ccamlr.org/SAreport_48_KRI_2021.pdf.\n\n\nConstable, A, and W. de la Mare. 1996. “A Generalised Model for\nEvaluating Yield and the Long-Term Status of Fish Stocks Under\nConditions of Uncertainty.” CCAMLR Science 3: 31–54.\n\n\nConstable, A, William de la Mare, David Agnew, Inigo Everson, and Denzil\nMiller. 2000. “Managing Fisheries to Conserve the Antarctic Marine\nEcosystem: Practical Implementation of the Convention on the\nConservation of Antarctic Marine Living Resources (CCAMLR).”\nICES Journal of Marine Science 57 (3): 778–91. https://doi.org/10.1006/jmsc.2000.0725.\n\n\nKinzey, D. 2021. “Summary of Proportional Recruitment and\nMultiyear Biomass Variability for Krill in Subarea 48 from Research\nSurveys.” WG-SAM-2021/21 Rev1. CCAMLR.\n\n\nMare, W. de la. 1994. “Modelling Krill Recruitment.” CCAMLR\nScience 1.\n\n\nMaschette, D., and S. Wotherspoon. 2021. “Use of Parameters Within\nEuphausia Superba Grym Simulations.” WG-FSA-2021/40. CCAMLR.\n\n\nMaschette, D., S. Wotherspoon, C. Pavez, P. Ziegler, S. Thanassekos, K\nReid, D Kawagushi, D Welsford, and A Constable. 2020. “Generalised\nR Yield Model (Grym).” Scientific Committee SC-CAMLR-39/BG/19.\nCCAMLR.\n\n\nMaschette, D, S Wotherspoon, S Kawaguchi, and Philippe Ziegler. 2021.\n“Grym Assessment for Subarea 48.1 Euphausia Superba\nPopulations.” WG-FSA-2021/39. Hobart, Autralia: CCAMLR. https://meetings.ccamlr.org/en/wg-fsa-2021/39.\n\n\nPavez, Cassandra, Simon Wotherspoon, Dale Maschette, Keith Reid, and\nKerrie Swadling. 2021. “Recruitment Modelling for Euphausia\nSuperba Stock Assessments Considering the Recurrence of Years with Low\nRecruitment.” WG-SAM-2021/09. Hobart, Autralia: CCAMLR."
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/2_GRYM_sims/grym_sims.html#appendix",
    "href": "part1_openMSE_GRYM_approx/2_GRYM_sims/grym_sims.html#appendix",
    "title": "2  GYM/Grym Krill Analysis",
    "section": "Appendix",
    "text": "Appendix\n\nWrapper function for running simulations across scenarios\n# --------------------------------------------------------------------------------\n# Function to run GRYM simulations for the assessment/managements of antarctic krill\n# --------------------------------------------------------------------------------\n# \n#  This is a wrapper on code provided for krill's assessement base-case, useful\n#  for setting up runs under different input scenarios. Specifically:\n#   - Uses the projection function `KrillProjection()`\n#   - Derives gammas based on decision rules\n#\n# --------------------------------------------------------------------------------\n\nrun_grym_krill <- function(nsteps, Ages, spawnI, monitorI, fishingI,\n        t0, K, Linf, f0, f1, a, b, sel50Min, sel50Max, selrange,\n        mat50Min, mat50Max, matrange, B0logsd, prRecruitPars, prRecruit, \n        gamma, n.years, ms, Fmax, n_iter, scenario_id, pr_scen_id, \n        mat_scen_id, outputs_path, ...){\n  \n  cli::cli_h2(\"Running GRYM for scenario {scenario_id} [{pr_scen_id}:{mat_scen_id}]\")\n\n  # ---- Set-up projection function\n  Project <- KrillProjection(nsteps, Ages, spawnI, monitorI, fishingI, \n    t0, K, Linf, f0, f1, a, b, sel50Min, sel50Max, selrange, \n    mat50Min, mat50Max, matrange, B0logsd, prRecruitPars, prRecruit, \n    gamma, n.years, ms, Fmax)\n  \n  \n  # ---- Run projections for all gamma values, paralellizing over iterations\n  \n  cli::cli_alert_info(\"Running projections\")\n  \n  #future::plan(multisession, workers = future::availableCores()-1)\n\n  # set progressor counter  \n  p <- progressr::progressor(steps = n_iter)\n  \n  # run projections (for all gammas) \n  scen_proj <- furrr::future_map_dfr(\n    1:n_iter, function(x){\n      out <- Project(x)\n      p()\n      out\n    },\n    .options = furrr_options(seed = TRUE)\n  ) |>\n    mutate(scenario_id = scenario_id, .before = 1)\n  \n # future::plan(sequential)\n  \n  #cat(\"\\n\\n\")\n  cli::cli_alert_success(\"Finished projections for scenario {scenario_id}\")\n  \n  \n  # ----  Deriving gammas (using code from workshop)\n  cli::cli_alert_info(\"Deriving gamma1, gamma2, and final chosen gamma\")\n\n  gamma_results <- list()\n  #gamma_results$Scenario <- scenario_id\n  gamma_results$dep_rule <- scen_proj |>\n    group_by(Gamma, Run) |>\n    summarize(min_pop_status = min(SSB/SSB0), .groups = \"drop_last\") |>\n    summarize(Pr_depleted = mean(min_pop_status < 0.2)) |>\n    mutate(scenario_id = scenario_id, .before = 1)\n\n  # Given the gamma values tested, gamma 1 is:\n  gamma_results$Gamma_1 <- max(gamma_results$dep_rule$Gamma[gamma_results$dep_rule$Pr_depleted<=0.1])\n\n  # What is the approximate Gamma that meets 10% depletion to test.\n  gamma_results$test_gamma_1 <- approx(gamma_results$dep_rule$Pr_depleted,gamma_results$dep_rule$Gamma,0.1, ties = mean)$y\n\n  # Gamma 2:\n  gamma_results$esc_rule <- scen_proj |>\n    group_by(Gamma) |>\n    filter(Year %in% max(Year)) |>\n    summarise(ssb_med = median(SSB), ssb0_med = median(SSB0)) |>\n    mutate(\n      Escapement = ssb_med/ssb0_med,\n      scenario_id = scenario_id\n    ) \n  \n  #gamma_results$esc_rule$Escapement<-gamma_results$esc_rule$ssb_med/gamma_results$esc_rule$ssb0_med\n  \n  #Given the gamma values tested, gamma 2 is:\n  gamma_results$Gamma_2<-max(gamma_results$esc_rule$Gamma[gamma_results$esc_rule$Escapement>=0.75])\n\n  #What is the approximate Gamma that meets 75% escapement to test.\n  gamma_results$test_gamma_2 <- approx(gamma_results$esc_rule$Escapement,gamma_results$esc_rule$Gamma,0.75, ties = mean)$y\n\n  #The actual Gamma is the smallest of the two gammas:\n  gamma_results$GammaToUse <- which(c(gamma_results$Gamma_1,gamma_results$Gamma_2)==\n                                      min(gamma_results$Gamma_1,gamma_results$Gamma_2)) #Which gamma is min?\n  if(length(gamma_results$GammaToUse)==2){gamma_results$GammaToUse=3} #when gamma1 and gamma2 are equal\n  gamma_results$Selected_gamma<-as.data.frame(cbind(gamma_results$Gamma_1, gamma_results$Gamma_2,\n                                                    gamma_results$GammaToUse, scenario_id))\n  names(gamma_results$Selected_gamma) <- c(\"Gamma_1\", \"Gamma_2\", \"Gamma_choice\", \"scenario_id\")\n\n  # writing out projections\n  cli::cli_alert_info(\"Writing out results\")\n\n  results <- list(scen_proj = scen_proj, gamma_results = gamma_results)\n\n  write_rds(\n    results,\n    file = fs::path(outputs_path, glue::glue(\"grym_results_{scenario_id}_{pr_scen_id}_{mat_scen_id}.rds\")),\n    compress = \"gz\",\n    compression = 9\n  )\n  \n  results\n}\n\n\nKrill Base-case projection function\nThis is modified version of the KrillProjection() function available in CCAMLR’s krill base-case repo that adds arguments ms and Fmax, for convenience.\n# --------------------------------------------------------------------------------\n# GRYM's Projection function for Krill\n# --------------------------------------------------------------------------------\n#\n# Modified by BARC in 15/12/2021 to:\n#\n#   - include the parameter `ms` as a function argument to allow for the\n#   specification of intra-annual natural mortality patterns\n#\n#   - remove unused arguments for proportional recruitment estimates\n#\n#   - Add argument `Fmax`, defining a reasonable upper bound for Annual F\n# --------------------------------------------------------------------------------\n\nKrillProjection <- function(\n        nsteps, Ages, #time step numbers and age classes\n        spawnI,monitorI,fishingI, #Interval sequences\n        t0,K,Linf,f0,f1, #Growth details\n        a, b, #Length/Weight Details\n        sel50Min,\tsel50Max,\tselrange, #Selectivity Parameters\n        mat50Min,\tmat50Max,\tmatrange, #Maturity parameters\n        B0logsd, #biomass log cv\n        prRecruitPars,prRecruit, #recruitment parameters and quantile function\n        gamma=c(0,0.04,0.08,0.1),\n        n.years=20, #Test details\n        ms, # matrix with intra-annual natural mortality patterns for each age class (dimesions: nr time intervals x nr age-classes)\n        Fmax\n        ) {\n  if(!inherits(prRecruitPars, \"matrix\")) prRecruitPars <- as.matrix(prRecruitPars)\n  # Create a sequence from 0-1 for each time step. The value is the proportion of that timestep in the year.\n  Days <- seq(0,1,length=nsteps+1)\n  #The proportion of an individual time step in the year (0.002739726 for daily timesteps)\n  h <- 1/nsteps\n\n  ## Spawning and monitoring interval are defined as inputs into the function.\n  ## Should be as timesteps eg 76:138\n\n  ## Ages, length at age and weight at age\n  ages <- outer(Days,Ages,FUN=\"+\")#Ages of each age class for every timestep\n  ls <- vonBertalanffyRAL(ages,t0=t0,K=K,Linf=Linf,f0=f0,f1=f1)#length of each age class for every timestep\n  ws <- powerLW(ls,a=a,b=b)#weight of each age class for every timestep\n\n  ## Constant intra-annual natural mortality\n  #  ms <- matrix(1,nsteps+1,length(Ages))#Proportion of mortality to apply for each timestep to each age class (if constant should all be one)\n  Ms <- ctrapz(ms,h)# Cumulative timestep proportional mortality\n  Msf <- final(Ms)#Sum of mortality for each age class (if constant across ages, should all be one.)\n\n  ## Within year fishing pattern - season is first 90 days\n  fwy <- double(nsteps+1) #Sequence of 0s for the length of the year\n  fwy[fishingI] <- 1\t\t#Set the fishing season increments to 1.\n  fwy <- fwy/mean(fwy)  #Average the fishing mortality so the average is 1 across all increments.\n\n  #B0logsd <- 0.2\n\n  ## This function performs the a projection for each prescibed gamma.\n  function(run) {\n    ## Length based maturity and selectivity - ramp width is constant\n    ## but the midpoint is selected uniformly from a range.\n    gs <- rampOgive(ls,runif(1,mat50Min,mat50Max),matrange) #Maturity ogive\n    ss <- rampOgive(ls,runif(1,sel50Min,sel50Max),selrange)  #Selectivity ogive\n\n    ## Construct fishing mortalities from season and selectivity\n    fs <- fwy*ss #Age + time step fishing mortality\n    Fs <- ctrapz(fs,h) #Cumulative #Age + time step fishing mortality\n    Fsf <- final(Fs) #Final yearly fishing mortality for each age class.\n\n    ## Extract recruitment parameters for this run\n    ps <- unname(prRecruitPars[run,])\n\n    ## Natural mortalities from proprtional recruitment model\n    M <- ps[1] #Yearly M from bootstrapped recruitment\n    MMs <- M*Ms #Timestep cumulative mortality for each age class.\n\n    ## Median spawning biomass estimated from 1000 samples\n    R <- matrix(prRecruit(1000*length(Msf),ps[3],ps[4]),1000,length(Msf))\n    ssb0 <- spawningB0S(R,gs,ws,Ms,M,spawn=spawnI)$median\n    ## Stochastic initial age structure in the absence of fishing\n    N0 <- ageStructureS(prRecruit(length(Msf),ps[3],ps[4]),Msf,M)\n    ## Recruitment series\n    Rs <- prRecruit(n.years,ps[3],ps[4])\n    ## Matrix of annual summaries\n    n <- (1+n.years)*length(gamma)\n    df <- matrix(0,n,11)\n    colnames(df) <- c(\"Year\",\"Gamma\",\"R\",\"N\",\"B\",\"B0\",\"SSN\",\"SSB\",\"SSB0\",\"Catch\",\"F\")\n    ## Initial projection assuming no fishing\n    pr0 <- project(ws,MMs,Nref=N0,yield=0)\n    pr0$F <- pr0$Y <- 0\n    ## Initial biomass in monitoring period + log Normal error\n    b0 <- meanStock(pr0$B,period=monitorI)\n    b0 <- rlnorm(1,log(b0)-B0logsd^2/2,B0logsd)\n\n    k <- 0\n    ## Project for each gamma ratio\n    for(g in gamma) {\n      ## Target catch\n      catch <- g*b0\n      ## Reset to virgin state\n      pr <- pr0\n      ssb <- spawningStock(pr$B,gs,spawnI)\n\n      for(yr in 0:n.years) {\n        if(yr > 0) {\n          ## Recruitment depletion\n          r <- min(1,ssb/(0.2*ssb0))\n          ## Project over year\n          N0 <- advance(pr$N,r*Rs[yr])\n          pr <- projectC(ws,MMs,Fs,fs,catch,Nref=N0,yield=1,Fmax=Fmax)\n          #if(pr$F==1.5) return(NULL)\n        }\n        ssb <- spawningStock(pr$B,gs,spawnI)\n\n        ## Collate annual summaries\n        df[k<-k+1,] <- c(yr,g,initial(pr$N)[1],sum(initial(pr$N)),sum(initial(pr$B)),b0,\n                         spawningStock(pr$N,gs,spawnI),ssb,ssb0,sum(pr$Y),pr$F)\n      }\n    }\n    data.frame(Run=run,M=M,df)\n  }\n}"
  },
  {
    "objectID": "part1_openMSE_GRYM_approx/3_openMSE_sims/openmse_sims.html#introduction",
    "href": "part1_openMSE_GRYM_approx/3_openMSE_sims/openmse_sims.html#introduction",
    "title": "3  openMSE/MSEtool simulations",
    "section": "Introduction",
    "text": "Introduction\n<< Placeholder: content coming soon >>"
  }
]