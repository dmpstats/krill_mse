{
  "hash": "0f666288a81a8ac2331718cec6572f6d",
  "result": {
    "markdown": "---\ntitle: \"Simulation of Recruitment Variability and Natural Mortality\"\ntoc: true\ntoc-depth: 3\nnumber-depth: 1\nexecute: \n  cache: true\nbibliography: references.json\n---\n\n::: {.cell hash='generate_recCV_M_scenarios_cache/html/unnamed-chunk-1_7ece12fb95cca1c32bbcd1ab11fe3963'}\n\n:::\n\n\n## Introduction\n\nYearly recruitment ($R$), the number of young individuals that enter the population\nevery year, and annual natural mortality ($M$), expressing the fraction of the\npopulation dying each year from any non-fishing causes (e.g. disease,\ncompetition, predation, etc.) are key governing parameters in population\ndynamics models.\n\nDue to challenges in obtaining reliable estimates of krill biomass (and hence\nnumbers) at recruitment, krill recruitment modelling is usually based on\nestimates of the proportion of recruits in the population. This method, commonly\nreferred to as the Proportional Recruitment (PR) model, was proposed by de @delamare94 and later expanded by @pavez_etal21.\n\n\n\n\nThis approach is part of the GRYM framework and was developed by de la mare and\nsubsequently expanded in pavez et al to address shortcomings in the way variability was being modelled.\n\n\nkrill population modelling \n\n\n\n\nMethods currently used for the assessment of Antarctic Krill apply \n\n\nThe aim here is to generate random draws of recruitment variability (expressed as\ncoefficient of variance, $CV_R$) and annual natural mortality ($M$) parameters\nunder different scenarios of Proportional Recruitment (PR).\n\n\nThe six PR scenarios considered here are identical to those applied in\n@maschette_etal21, where each scenario consists of a given set of input parameters \n\n\n\n\n<!-- Simulated draws of $CV_R$ and $M$ are subsequently used  -->\n<!-- the method currently used -->\n<!-- in krill assessment to simulate annual recruitment whithin the GRYM. -->\n\n\n\n\nconsists of the mean a standard deviation\nof proportional recruitment calculated from a different choice of research survey time-series, \n\nFor further \n\n\ndifferent combination of survey(s), time-series and \n\ngiven survey time-series and/or recruitment length cut-off point \n\n\n\n\n\na subset of those applied in @maschette_etal21,\nwith each scenario consisting of proportional recruitment estimates obtained\nfrom a different time-series of survey data.\n\nPR scenarios considered \n\n\nhere are a subset of those applied in @maschette_etal21,\nwith each scenario consisting of mean and standard deviation estimates of\nproportional recruitment calculated from a given survey data.\n\n\n\n**Note**: GRYM defines recruitment as the number of individuals recruited *to\nthe fishery* (i.e. not to the whole population). Grym applications to krill\nassume individuals recruit to the modeled stock fishery at age 1.\n\n\n\n\n\n## Set-up\n\nTo generate values of $CV_R$ and $M$ from proportional recruitment estimates\nunder each scenario, we need to:\n\n1. Define the within-year natural mortality structure\n\n2. Choose the quantile function that defines the distribution of proportional\nrecruits\n\n3. Provide the mean and variance estimates of the proportion of recruits seen\nin the surveys, and the number of surveys conducted\n\n4. Provide approximate estimates of $M$ and $CV_R$\n\n5. Specify the number of parameter sets to generate\n\n\nFor the purpose of this analysis, we are only considering scenarios with\ndifferent PR estimates, i.e. \n\n. All the remaining GRYM parameters are fixed across\nscenarios. For more details on the \n\nfor more details on PR estimates see Table 1 in @maschette_etal21]\n\n\n### Load PR scenarios\n\nFor the purpose of this analysis, we are only considering scenarios with\ndifferent PR parameters. All other GRYM parameters remain fixed across scenarios\n[for more details on PR estimates see Table 1 in @maschette_etal21]\n\n\n\n::: {.cell hash='generate_recCV_M_scenarios_cache/html/unnamed-chunk-2_07240a65bfd21a79c3aabd971d7c5a7b'}\n\n```{.r .cell-code}\nscens <- read_xlsx(\n  path = \"maschetteetal_scenarios/Grym_parameter_combinations.xlsx\"\n) |>\n  rename(Scenario_id = Scenarios) |>\n  # filter scenarios under consideration\n  filter(\n    Scenario_id %in% \n      c(\"Initial_values\", \"Scenario_06\", \"Scenario_12\", \"Scenario_18\",\n        \"Scenario_24\", \"Scenario_30\")\n  ) |>\n  select(Scenario_id:`Recruitment group`, `Mean proportional recruitment`:`N. surveys`)\n```\n:::\n\n::: {.cell tbl-cap='Proportional Recruitment estimates under each scenario (extracted from Maschette et al. 2021)' hash='generate_recCV_M_scenarios_cache/html/unnamed-chunk-3_21b10ce3b427fc89014ca1e39e191c6e'}\n\n```{.r .cell-code}\n# table with PR estimate\nscens |>\n  kbl(digits = 4) |> \n  kable_styling(bootstrap_options = c(\"striped\"), font_size = 15)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped\" style=\"font-size: 15px; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Scenario_id </th>\n   <th style=\"text-align:left;\"> Source </th>\n   <th style=\"text-align:left;\"> Recruitment group </th>\n   <th style=\"text-align:right;\"> Mean proportional recruitment </th>\n   <th style=\"text-align:right;\"> SD of proportional recruitment </th>\n   <th style=\"text-align:right;\"> N. surveys </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Initial_values </td>\n   <td style=\"text-align:left;\"> WG-EMM-2021 </td>\n   <td style=\"text-align:left;\"> Initial values </td>\n   <td style=\"text-align:right;\"> 0.5570 </td>\n   <td style=\"text-align:right;\"> 0.1260 </td>\n   <td style=\"text-align:right;\"> 17 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Scenario_06 </td>\n   <td style=\"text-align:left;\"> US-AMLR-Data  (1992-2011) </td>\n   <td style=\"text-align:left;\"> Catch weighted PR by survey, strata scaled </td>\n   <td style=\"text-align:right;\"> 0.4080 </td>\n   <td style=\"text-align:right;\"> 0.3118 </td>\n   <td style=\"text-align:right;\"> 20 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Scenario_12 </td>\n   <td style=\"text-align:left;\"> US-AMLR-Data &amp; Russian Survey data combined </td>\n   <td style=\"text-align:left;\"> Catch weighted PR by survey, strata scaled </td>\n   <td style=\"text-align:right;\"> 0.4089 </td>\n   <td style=\"text-align:right;\"> 0.3040 </td>\n   <td style=\"text-align:right;\"> 21 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Scenario_18 </td>\n   <td style=\"text-align:left;\"> US-AMLR-Data  (1991-2011) </td>\n   <td style=\"text-align:left;\"> Catch weighted PR by haul @36mm </td>\n   <td style=\"text-align:right;\"> 0.2520 </td>\n   <td style=\"text-align:right;\"> 0.3380 </td>\n   <td style=\"text-align:right;\"> 21 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Scenario_24 </td>\n   <td style=\"text-align:left;\"> US-AMLR-Data  (1991-2011) </td>\n   <td style=\"text-align:left;\"> Catch weighted PR by haul @40mm </td>\n   <td style=\"text-align:right;\"> 0.3630 </td>\n   <td style=\"text-align:right;\"> 0.3700 </td>\n   <td style=\"text-align:right;\"> 21 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Scenario_30 </td>\n   <td style=\"text-align:left;\"> Russian survey 2020 </td>\n   <td style=\"text-align:left;\"> Catch weighted PR by strata, strata scaled </td>\n   <td style=\"text-align:right;\"> 0.4281 </td>\n   <td style=\"text-align:right;\"> 0.1112 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nTidy-up parameter data for use in simulations.\n\n\n::: {.cell hash='generate_recCV_M_scenarios_cache/html/unnamed-chunk-4_a4d7c9c716dcd8881a552c91d8f8b780'}\n\n```{.r .cell-code}\nscens_sim_pars <- scens |>\n  rename(\n    mnQ = `Mean proportional recruitment`,\n    sdQ = `SD of proportional recruitment`,\n    n_surveys = `N. surveys`\n    ) %>%\n  select(Scenario_id, mnQ, sdQ, n_surveys)\n```\n:::\n\n\n\n### Specify shared PR parameters\n\n#### Within-year natural mortality pattern\n\nAssuming the impact of natural mortality is constant throughout the year,\nregardless of age.\n\n\n\n::: {.cell hash='generate_recCV_M_scenarios_cache/html/unnamed-chunk-5_68b22e7f6bdb2c67219c2e88d0e0f86b'}\n\n```{.r .cell-code}\n# Seven age classes, daily time steps - start modelling from age 1.\nAges <- 1:7\nnsteps <- 365\nDays <- seq(0, 1, length = nsteps+1)\nh <- 1/nsteps\nages <- outer(Days, Ages, FUN=\"+\")\nhead(ages)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]\n[1,] 1.000000 2.000000 3.000000 4.000000 5.000000 6.000000 7.000000\n[2,] 1.002740 2.002740 3.002740 4.002740 5.002740 6.002740 7.002740\n[3,] 1.005479 2.005479 3.005479 4.005479 5.005479 6.005479 7.005479\n[4,] 1.008219 2.008219 3.008219 4.008219 5.008219 6.008219 7.008219\n[5,] 1.010959 2.010959 3.010959 4.010959 5.010959 6.010959 7.010959\n[6,] 1.013699 2.013699 3.013699 4.013699 5.013699 6.013699 7.013699\n```\n:::\n\n```{.r .cell-code}\n# Define the within year pattern of natural mortality\nms <- matrix(1, nsteps+1, length(Ages))\nMs <- ctrapz(ms,h) \nMsf <- final(Ms)\nMsf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1 1 1 1 1 1 1\n```\n:::\n:::\n\n\n\n#### PR quantile function\n\nAssuming that proportional recruitment $Q$ is distributed as an Inverse Beta\ndistribution, as in krill's base-case.\n\n\n::: {.cell hash='generate_recCV_M_scenarios_cache/html/unnamed-chunk-6_306ed3755cf808c53a99a5ae506b7027'}\n\n```{.r .cell-code}\nqdist <- qInverseBeta\nrecdist <- recInverseBeta\n```\n:::\n\n\n\n#### No. simulations, starting values and reference age class\n\nAs in the base-case of krill assessment, 2nd age-class is the reference\nclass (i.e. proportional recruitment is the fraction that the second age class\nis of the population of age class 2 and older).\n\n\n::: {.cell hash='generate_recCV_M_scenarios_cache/html/unnamed-chunk-7_a090b4e6e6d2531b70ad587a4f3731fb'}\n\n```{.r .cell-code}\nnsim <- 5000\n\n# Best guess estimates of M and recruitment CV\nM0 <- 0.6\nCV0 <- 1\n\n# reference age-class\nref_age <- 2\n```\n:::\n\n\n\n\n\n## Simulation\n\nGenerate draws of $CV_R$ and $M$ under each scenario. Note: simulations take\nquite a while to run so some of the computations performed in this section\nshould only be run in a local R session, i.e. they should not be evaluated\nduring rendering.\n\n\n### Set-up simulation function for parallelization\n\nParallelization performed at the iteration level, i.e. each parallel node fits\none proportional recruitment model given a sequence of random deviates. Each\nfitted model counts as one simulation, which returns one random draw of `M`,\n`CV_R`, and mean and standard deviation of proportional recruitment.\n\n\n\n::: {.cell hash='generate_recCV_M_scenarios_cache/html/unnamed-chunk-8_3e0e1cece757b49e8f63426b20653398'}\n\n```{.r .cell-code}\ngen_recs <- function(nsim, mnQ, sdQ, n_surveys, M0, CV0, ref_age, qdist, Msf){\n\n  p <- progressor(steps = nsim)\n\n  future_map_dfr(\n    1:nsim, \n    function(x){\n      out <- prFit(qdist = qdist, Msf = Msf, mnR = mnQ, vrR = sdQ^2, n = n_surveys,\n                   M0 = M0, CV0 = CV0, r = ref_age)\n      p()\n      out\n    }, \n    .options = furrr_options(seed = TRUE)\n  )\n}\n```\n:::\n\n\n\n### Add data with parameters under each scenario.\n\n\n::: {.cell hash='generate_recCV_M_scenarios_cache/html/unnamed-chunk-9_e5963a1f9e7c3a58100f48ec28e43bea'}\n\n```{.r .cell-code}\nscens_sim_pars <- scens_sim_pars |> \n  mutate(M0, CV0, ref_age, qdist = list(qdist), Msf = list(Msf))\n```\n:::\n\n\n### Generate draws of $CV_R$ and $M$ under each scenario\n\n\n::: {.cell hash='generate_recCV_M_scenarios_cache/html/unnamed-chunk-10_54ca8b99ba17d7c9ee533fb8602fffac'}\n\n```{.r .cell-code}\nplan(multisession, workers = availableCores()-2)\nhandlers(\"progress\")\n\ntic()\ncvR_M_draws_scen <- scens_sim_pars |>\n  rowwise() |>\n  pmap(function(Scenario_id, mnQ, sdQ, n_surveys, M0, CV0, ref_age, qdist, Msf){\n    \n    cli::cli_alert(glue::glue(\"Running {Scenario_id}\"))\n    \n    with_progress(\n      out <- gen_recs(nsim = nsim, mnQ = mnQ, sdQ = sdQ, n_surveys = n_surveys, M0 = M0, \n                      CV0 = CV0, ref_age = ref_age, qdist = qdist, Msf = Msf)\n    )\n    \n    cli::cli_alert_success(glue::glue(\"Finished {Scenario_id}\"))\n    out\n  })\ntoc()\n\nplan(sequential)\n\nnames(cvR_M_draws_scen) <- scens_sim_pars$Scenario_id\n\nplan(sequential)\n\n# save draws externally\nwrite_rds(x = cvR_M_draws_scen, file = \"cvR_M_draws_scen.rds\")\n\ncvR_M_draws_scen\n```\n:::\n\n\n\n## Check simulated parameters\n\n\n::: {.cell hash='generate_recCV_M_scenarios_cache/html/unnamed-chunk-11_10dff8534739eaa988065763409bee11'}\n\n:::\n\n::: {.cell hash='generate_recCV_M_scenarios_cache/html/unnamed-chunk-12_d0d5ee84c5c94dacc9123143350f5803'}\n\n```{.r .cell-code  code-fold=\"true\"}\ncvR_M_draws_scen |>\n  bind_rows(.id = \"scn_id\") |>\n  ggplot(aes(x = M, y = CV)) +\n  geom_point(shape = 16, alpha = 0.3) +\n  labs(y = \"CV_R\") +\n  facet_wrap(~scn_id, scales = \"free\")\n```\n\n::: {.cell-output-display}\n![Simulated values of $CV_R$ and $M$ under each scenario](generate_recCV_M_scenarios_files/figure-html/unnamed-chunk-12-1.png){width=100%}\n:::\n:::\n\n\n\nSummary statistics of simulated $CV_R$ and $M$\n\n\n::: {.cell hash='generate_recCV_M_scenarios_cache/html/unnamed-chunk-13_fdc49b1f23158f0da0b1fe55f0137361'}\n\n```{.r .cell-code}\ncvR_M_draws_scen |>\n  bind_rows(.id = \"scn_id\") |>\n  group_by(scn_id) |>\n  summarise(mean_M = mean(M), sd_M = sd(M), min_M = min(M), max_M = max(M), \n            mean_CV_R = mean(CV), sd_CV_R = sd(CV), min_CV = min(CV), max_CV = max(CV))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"scn_id\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"mean_M\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"sd_M\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"min_M\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"max_M\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"mean_CV_R\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"sd_CV_R\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"min_CV\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"max_CV\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Initial_values\",\"2\":\"0.85504236\",\"3\":\"0.08303594\",\"4\":\"0.57810040\",\"5\":\"1.2690961\",\"6\":\"0.5277988\",\"7\":\"0.1411862\",\"8\":\"0.2730681\",\"9\":\"3.233729\"},{\"1\":\"Scenario_06\",\"2\":\"0.54293610\",\"3\":\"0.13997918\",\"4\":\"0.06883522\",\"5\":\"1.0542593\",\"6\":\"3.7747412\",\"7\":\"1.8065555\",\"8\":\"0.9946090\",\"9\":\"9.997690\"},{\"1\":\"Scenario_12\",\"2\":\"0.56078297\",\"3\":\"0.13432733\",\"4\":\"0.09481660\",\"5\":\"1.0533194\",\"6\":\"3.6095521\",\"7\":\"1.7794421\",\"8\":\"0.9554239\",\"9\":\"9.997745\"},{\"1\":\"Scenario_18\",\"2\":\"0.09704383\",\"3\":\"0.07889544\",\"4\":\"0.00000000\",\"5\":\"0.4622236\",\"6\":\"5.2748368\",\"7\":\"1.9097115\",\"8\":\"1.7875744\",\"9\":\"9.999542\"},{\"1\":\"Scenario_24\",\"2\":\"0.21500431\",\"3\":\"0.13211227\",\"4\":\"0.00000000\",\"5\":\"0.7113519\",\"6\":\"5.4515737\",\"7\":\"1.8680269\",\"8\":\"1.7352697\",\"9\":\"9.999695\"},{\"1\":\"Scenario_30\",\"2\":\"0.57058606\",\"3\":\"0.18239736\",\"4\":\"0.00000000\",\"5\":\"1.9782328\",\"6\":\"0.6636226\",\"7\":\"0.6480536\",\"8\":\"0.1335712\",\"9\":\"9.985841\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nFrequency of draws with mortality equal to zero.\n\n\n::: {.cell hash='generate_recCV_M_scenarios_cache/html/unnamed-chunk-14_eab5cb1a71dc4ef50d21f6507d56bc25'}\n\n```{.r .cell-code}\ncvR_M_draws_scen |>\n  bind_rows(.id = \"scn_id\") |>\n  filter(M == 0) |>\n  group_by(scn_id) |>\n  count()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"scn_id\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Scenario_18\",\"2\":\"178\"},{\"1\":\"Scenario_24\",\"2\":\"44\"},{\"1\":\"Scenario_30\",\"2\":\"1\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\nReverse-check - i.e. simulate survey estimates of PR by running the population\nmodel using recruitment series generated from draws of $M$ and $CV_R$ (based on code\nprovided in krill's GRYM workshop).\n\n\n::: {.cell hash='generate_recCV_M_scenarios_cache/html/unnamed-chunk-15_2ded218bddb74a34d49912cbf6183599'}\n\n```{.r .cell-code  code-fold=\"true\"}\nscens_sim_pars |>\n  split(scens_sim_pars$Scenario_id) |>\n  map2(.y = cvR_M_draws_scen, function(scn_pars, scn_draws){\n    \n    # Simulate observation process for each draw of CV_R and M, i.e. generate\n    # `n` random age structures for each draw of CV_R and M and estimate mean\n    # and variance of the proportion of recruits that would be observed in surveys\n    pr_mn_vr <- scn_draws |>\n      rowwise() |>\n      summarize(as.data.frame(t(prSim(qdist, Msf, n = scn_pars$n_surveys, M, CV, r = ref_age))), .groups=\"drop\") |>\n      as.data.frame() |>\n      rename(sim_mnQ = mnR, sim_vrQ = vrR)\n    \n    title <- scn_pars$Scenario_id\n    \n    # Compare simulated values of mean and variance of proportional recruitment\n    # with those actually obtained from surveys\n    ggplot(pr_mn_vr, aes(x = sim_mnQ, y = sim_vrQ)) +\n      geom_point(alpha = 0.1)+\n      geom_point(aes(x = mnQ, y = sdQ^2), col = \"red\", data = scn_pars) +\n      labs(title = title) +\n      theme(axis.title = element_blank())\n    \n  }) |>\n  wrap_plots() |>\n  patchworkGrob() |>\n  gridExtra::grid.arrange(\n    left = \"Variance of proportion of recruits (Q)\", \n    bottom = \"Mean of proportion of recruits (Q)\"\n  )\n```\n\n::: {.cell-output-display}\n![Means and variances of proportion of recruits: simulated values (black) Vs original survey values (red)](generate_recCV_M_scenarios_files/figure-html/unnamed-chunk-15-1.png){width=100%}\n:::\n:::\n\n\n\nGenerate recruitment series from a single draw of proportional recruitment\nparameters, with a mean of 1 and expected $CV_R$.\n\n\n::: {.cell hash='generate_recCV_M_scenarios_cache/html/unnamed-chunk-16_a3a6be67928923efb0e3c9e71c73c899'}\n\n```{.r .cell-code}\nr_series <- cvR_M_draws_scen |>\n  map(slice, 107) |>\n  bind_rows(.id = \"scn_id\") |>\n  rowwise() |>\n  mutate(\n    rec_series = list(recdist(n = 50000, mn = mnQ, vr = vrQ))\n  ) |>\n  unnest(rec_series)\n```\n:::\n\n::: {.cell hash='generate_recCV_M_scenarios_cache/html/unnamed-chunk-17_3c0036f8a8fe0875fc2b3c7a50b5a3f2'}\n\n```{.r .cell-code  code-fold=\"true\"}\nr_series |>\n  ggplot() +\n  geom_histogram(aes(x = rec_series), col = \"black\", fill = \"gray88\") +\n  labs(x = \"Number of recruits\") +\n  facet_wrap(~scn_id, scales = \"free\")\n```\n\n::: {.cell-output-display}\n![Histogram of recruitment series generated from one draw of parameters, for each scenario](generate_recCV_M_scenarios_files/figure-html/unnamed-chunk-17-1.png){width=100%}\n:::\n:::\n\n\nComparing drawn value of $CV_R$ with summary statistics of the generated recruitment series.\n\n\n::: {.cell hash='generate_recCV_M_scenarios_cache/html/unnamed-chunk-18_81d3f56dd1d8b7b89b5f5f1d16dc318e'}\n\n```{.r .cell-code}\nr_series |>\n  rename(CV_R = CV) |>\n  group_by(scn_id, CV_R) |>\n  summarise(\n    mean_R_sample = mean(rec_series), \n    CV_R_sample = sd(rec_series)/mean_R_sample,\n    .groups = \"drop\"\n    )\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"scn_id\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"CV_R\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"mean_R_sample\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"CV_R_sample\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Initial_values\",\"2\":\"0.5422426\",\"3\":\"1.0048600\",\"4\":\"0.5410056\"},{\"1\":\"Scenario_06\",\"2\":\"4.1693965\",\"3\":\"1.0006763\",\"4\":\"3.4905685\"},{\"1\":\"Scenario_12\",\"2\":\"1.9989346\",\"3\":\"0.9958275\",\"4\":\"2.1220038\"},{\"1\":\"Scenario_18\",\"2\":\"2.6790629\",\"3\":\"0.9922767\",\"4\":\"2.4616935\"},{\"1\":\"Scenario_24\",\"2\":\"3.0207838\",\"3\":\"1.0035664\",\"4\":\"2.6715598\"},{\"1\":\"Scenario_30\",\"2\":\"0.2589142\",\"3\":\"1.0012732\",\"4\":\"0.2596627\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nSubstantial difference between the CV of samples and the expected CV in\nscenarios `Scenario_12` and `Scenario_24`...\n\n\n\n\n\n## References\n\n<!-- ::: {#refs} -->\n<!-- ::: -->\n\n\n<!-- ## Check recruitment series from Maschette et al (2021) -->\n\n<!-- ```{r} -->\n<!-- rec_samples_maschette <- list.files(\"maschetteetal_scenarios/Recruitment_vectors/\", full.names = TRUE) |> -->\n<!--   map(read_rds) -->\n\n<!-- scens_sim_pars_maschette <- rec_samples_maschette |> -->\n<!--   map_df(~tibble( -->\n<!--     survey_mnQ = .$R.mean, survey_sdQ = .$R.sd, n_surveys = .$R.nsurveys,  -->\n<!--     ref_age = .$R.class, qdist = list(.$qdist),  -->\n<!--     Msf = list(rep(1, length(.$Ages))),  -->\n<!--     cvR_M_draws = list(.$pars) -->\n<!--   )) -->\n\n<!-- scens_sim_pars_maschette <- right_join( -->\n<!--   scens_sim_pars_maschette,  -->\n<!--   select(scens_sim_pars, Scenario_id:sdQ), -->\n<!--   by = c(\"survey_mnQ\" = \"mnQ\", \"survey_sdQ\" = \"sdQ\") -->\n<!-- ) |> -->\n<!--   relocate(Scenario_id, .before = 1) -->\n\n<!-- ``` -->\n\n<!-- ```{r} -->\n\n<!-- scens_sim_pars_maschette |> -->\n<!--   select(Scenario_id, cvR_M_draws) |> -->\n<!--   unnest(cols = cvR_M_draws) |> -->\n<!--   ggplot(aes(x = M, y = CV)) + -->\n<!--   geom_point(shape = 16, alpha = 0.3) + -->\n<!--   labs(y = \"CV_R\") + -->\n<!--   facet_wrap(~Scenario_id, scales = \"free\") -->\n\n<!-- ``` -->\n\n\n<!-- Summary statistics of simulated $CV_R$ and $M$ -->\n\n<!-- ```{r} -->\n<!-- scens_sim_pars_maschette |> -->\n<!--   mutate( -->\n<!--     cvR_M_draws_stats = map( -->\n<!--       cvR_M_draws,  -->\n<!--       ~summarise(., across(c(M, CV), .fns = list(mean = mean, sd = sd,  min = min, max = max))) -->\n<!--     ) -->\n<!--   ) |> -->\n<!--   select(Scenario_id, cvR_M_draws_stats) |> -->\n<!--   unnest(cvR_M_draws_stats) -->\n\n<!-- ``` -->\n\n<!-- Some of the scenarios have draws of $M$ of 0. This implies that, in the absence -->\n<!-- of fishing mortality, the population status over time is solely driven by the -->\n<!-- annual recruitments. -->\n\n\n<!-- ```{r} -->\n<!-- #| out-width: 100% -->\n<!-- #| fig-cap: \"Means and variances of proportion of recruits: simulated values (black) Vs original survey values (red)\" -->\n<!-- #| code-fold: true -->\n\n<!-- # Reverse-check - i.e. simulate survey estimates of PR by running the population -->\n<!-- # model using recruitment series generated from PR parameters (based on code -->\n<!-- # provided in krill's GRYM workshop) -->\n<!-- scens_sim_pars_maschette |> -->\n<!--   rowwise() |> -->\n<!--   pmap(function(Scenario_id, survey_mnQ, survey_sdQ, n_surveys, ref_age, qdist, Msf,cvR_M_draws){ -->\n\n<!--     # Simulate observation process for each draw of CV_R and M, i.e. generate -->\n<!--     # `n` random age structures for each draw of CV_R and M and estimate mean -->\n<!--     # and variance of the proportion of recruits that would be observed in surveys -->\n<!--     pr_mn_vr <- cvR_M_draws |> -->\n<!--       rowwise() |> -->\n<!--       mutate(sim_Q = list(prSim(qdist, Msf, n = n_surveys, M, CV, r = ref_age))) |> -->\n<!--       hoist(sim_Q, sim_mnQ = 1, sim_vrQ = 2) -->\n\n<!--     title <- Scenario_id -->\n\n<!--     # Compare simulated values of mean and variance of proportional recruitment -->\n<!--     # with those actually obtained from surveys -->\n<!--     ggplot(pr_mn_vr, aes(x = sim_mnQ, y = sim_vrQ)) + -->\n<!--       geom_point(alpha = 0.1)+ -->\n<!--       geom_point(aes(x = survey_mnQ, y = survey_sdQ^2), col = \"red\") + -->\n<!--       labs(title = title) + -->\n<!--       theme(axis.title = element_blank()) -->\n<!--   }) |> -->\n<!--   wrap_plots() |> -->\n<!--   patchworkGrob() |> -->\n<!--   gridExtra::grid.arrange( -->\n<!--     left = \"Variance of proportion of recruits\",  -->\n<!--     bottom = \"Mean of proportion of recruits\" -->\n<!--   ) -->\n<!-- ``` -->\n\n<!-- Generate recruitments from one draw of proportional recruitment parameters, with -->\n<!-- a mean of 1 and expected $CV_R$. -->\n\n<!-- ```{r} -->\n\n<!-- r_series_maschette <- scens_sim_pars_maschette |> -->\n<!--   select(Scenario_id, cvR_M_draws) |> -->\n<!--   unnest(cvR_M_draws) |> -->\n<!--   group_by(Scenario_id) |> -->\n<!--   slice(107) |> -->\n<!--   rowwise() |> -->\n<!--   mutate( -->\n<!--     rec_series = list(recdist(n = 50000, mn = mnQ, vr = vrQ)) -->\n<!--   ) |> -->\n<!--   unnest(rec_series) -->\n<!-- ``` -->\n<!-- Comparing $CV_R$ with summary statistics of the recruitment series. -->\n\n<!-- ```{r} -->\n<!-- r_series_maschette |> -->\n<!--   rename(CV_R = CV) |> -->\n<!--   group_by(Scenario_id, CV_R) |> -->\n<!--   summarise( -->\n<!--     mean_R_sample = mean(rec_series),  -->\n<!--     CV_R_sample = sd(rec_series)/mean_R_sample, -->\n<!--     .groups = \"drop\" -->\n<!--     ) -->\n<!-- ``` -->\n\n<!-- Similarly to what was observed above for locally simulated values of $CV_R$, -->\n<!-- there are non-negligible differences between the CV of samples and the expected -->\n<!-- CV (e.g. `Scenario_12`, `Scenario_12` and `Scenario_24`). -->\n\n\n\n\n<!-- ## Try lognormally distributed $Q$ -->\n\n<!-- See if logNormal assumption also generates draws with mortality equal to zero. -->\n\n<!-- ```{r} -->\n<!-- #| eval: false -->\n\n<!-- scens_sim_pars_qlnorm <- scens_sim_pars |> -->\n<!--   mutate(qdist = list(qLogNormal)) -->\n\n<!-- plan(multisession, workers = availableCores()-2) -->\n\n<!-- handlers(\"progress\") -->\n\n<!-- with_progress( -->\n<!--   cvR_M_draws_scen_qlnorm <- gen_recs( -->\n<!--     dt = scens_sim_pars_qlnorm, -->\n<!--     nsim = nsim -->\n<!--     ) -->\n<!-- ) -->\n\n<!-- names(cvR_M_draws_scen_qlnorm) <- scens_sim_pars_qlnorm$Scenario_id -->\n\n<!-- plan(sequential) -->\n\n<!-- # save draws externally -->\n<!-- write_rds(x = cvR_M_draws_scen_qlnorm, file = \"cvR_M_draws_scen_qlnorm.rds\") -->\n\n<!-- cvR_M_draws_scen_qlnorm -->\n<!-- ``` -->\n\n<!-- ```{r} -->\n<!-- cvR_M_draws_scen_qlnorm <- read_rds(\"cvR_M_draws_scen_qlnorm.rds\") -->\n<!-- ``` -->\n\n\n\n<!-- ```{r} -->\n<!-- #| out-width: 100% -->\n<!-- #| fig-cap: \"Simulated values of $CV_R$ and $M$ under each scenario\" -->\n<!-- #| code-fold: true -->\n\n<!-- cvR_M_draws_scen_qlnorm |> -->\n<!--   bind_rows(.id = \"scn_id\") |> -->\n<!--   ggplot(aes(x = M, y = CV)) + -->\n<!--   geom_point(shape = 16, alpha = 0.3) + -->\n<!--   labs(y = \"CV_R\") + -->\n<!--   facet_wrap(~scn_id, scales = \"free\") -->\n\n<!-- ``` -->\n\n<!-- Summary statistics of simulated values of $CV_R$ and $M$. -->\n\n<!-- ```{r} -->\n<!-- cvR_M_draws_scen_qlnorm |> -->\n<!--   bind_rows(.id = \"scn_id\") |> -->\n<!--   group_by(scn_id) |> -->\n<!--   summarise(mean_M = mean(M), sd_M = sd(M), min_M = min(M), max_M = max(M),  -->\n<!--             mean_CV_R = mean(CV), sd_CV_R = sd(CV), min_CV = min(CV), max_CV = max(CV)) -->\n\n<!-- ``` -->\n\n<!-- Frequency of draws with `M == 0`. -->\n\n<!-- ```{r} -->\n\n<!-- cvR_M_draws_scen_qlnorm |> -->\n<!--   bind_rows(.id = \"scn_id\") |> -->\n<!--   filter(M == 0) |> -->\n<!--   group_by(scn_id) |> -->\n<!--   count() -->\n\n<!-- ``` -->\n<!-- Generate recruitment series from a single draw of proportional recruitment -->\n<!-- parameters, with a mean of 1 and expected $CV_R$. -->\n\n<!-- ```{r} -->\n<!-- r_series_qlnorm <- cvR_M_draws_scen_qlnorm |> -->\n<!--   map(slice, 10) |> -->\n<!--   bind_rows(.id = \"scn_id\") |> -->\n<!--   rowwise() |> -->\n<!--   mutate( -->\n<!--     rec_series = list(recLogNormal(n = 50000, mn = mnQ, vr = vrQ)) -->\n<!--   ) |> -->\n<!--   unnest(rec_series) -->\n<!-- ``` -->\n\n<!-- ```{r} -->\n<!-- #| out-width: 100% -->\n<!-- #| fig-cap: \"Histogram of recruitment series generated from one draw of parameters, for each scenario\" -->\n<!-- #| code-fold: true -->\n<!-- #| warning: false -->\n\n<!-- r_series_qlnorm |> -->\n<!--   ggplot() + -->\n<!--   geom_histogram(aes(x = rec_series), col = \"black\", fill = \"gray88\") + -->\n<!--   labs(x = \"Number of recruits\") + -->\n<!--   facet_wrap(~scn_id, scales = \"free\") -->\n\n<!-- ```   -->\n\n\n\n<!-- Comparing drawn value of $CV_R$ with summary statistics of the generated recruitment series. -->\n\n<!-- ```{r} -->\n\n<!-- r_series_qlnorm |> -->\n<!--   rename(CV_R = CV) |> -->\n<!--   group_by(scn_id, CV_R) |> -->\n<!--   summarise( -->\n<!--     mean_R_sample = mean(rec_series),  -->\n<!--     CV_R_sample = sd(rec_series)/mean_R_sample, -->\n<!--     .groups = \"drop\" -->\n<!--     ) -->\n<!-- ``` -->",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\r\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\r\n<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}